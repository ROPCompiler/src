Searching all executable sections....
Searching the .init section
Found 2 gadgets
Searching the .plt section
Found 2 gadgets
Searching the .text section
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
15
Found 6374 gadgets
Searching the __libc_freeres_fn section
Found 6436 gadgets
Searching the __libc_thread_freeres_fn section
Found 6441 gadgets
Searching the .fini section
Found 6443 gadgets
Gadgets that were found:
0x4008a7: add esp, 8;  ret ;  
0x4008a6: add rsp, 8;  ret ;  
0x4009d2: pop rbp;  ret ;  
0x4009d1: pop rbx;  pop rbp;  ret ;  
0x4009d0: add byte ptr [rbx + 0x5d], bl;  ret ;  
0x4009cf: add byte ptr [rax], al;  pop rbx;  pop rbp;  ret ;  
0x400a4f: jmp 0x400a16;  ret ;  
0x400a4d: enter -0x1401, -0x3b;  ret ;  
0x400a4c: or eax, 0xffffffff;  jmp 0x400a16;  ret ;  
0x400a99: mov dword ptr [rdi], ecx;  ret ;  
0x400a98: mov qword ptr [rdi], rcx;  ret ;  
0x400a97: int3 ;  mov qword ptr [rdi], rcx;  ret ;  
0x400a96: jmp 0x400a64;  mov qword ptr [rdi], rcx;  ret ;  
0x400adc: jne 0x400adf;  ret ;  
0x400adb: cmpsb byte ptr [rsi], byte ptr [rdi];  jne 0x400adf;  ret ;  
0x400ada: repe cmpsb byte ptr [rsi], byte ptr [rdi];  jne 0x400adf;  ret ;  
0x400b0c: pop rsp;  ret ;  
0x400b0b: pop r12;  ret ;  
0x400b0a: pop rbp;  pop r12;  ret ;  
0x400b09: pop rbx;  pop rbp;  pop r12;  ret ;  
0x400b08: add byte ptr [rbx + 0x5d], bl;  pop r12;  ret ;  
0x400c0e: pop rsp;  ret ;  
0x400c0d: pop r12;  ret ;  
0x400c0c: pop rbp;  pop r12;  ret ;  
0x400c0b: add byte ptr [rbp + 0x41], bl;  pop rsp;  ret ;  
0x400c0a: sub al, 0;  pop rbp;  pop r12;  ret ;  
0x400d78: add al, ch;  ret ;  
0x400d76: add byte ptr [rax], al;  add al, ch;  ret ;  
0x400d75: mov edi, 0xe8000000;  ret ;  
0x400df1: pop rbp;  ret ;  
0x400def: add byte ptr [rax], al;  pop rbp;  ret ;  
0x400ded: add byte ptr [rax], al;  add byte ptr [rax], al;  pop rbp;  ret ;  
0x400e39: pop rbp;  ret ;  
0x400e36: nop dword ptr [rax];  pop rbp;  ret ;  
0x400e6c: ret ;  
0x400e6b: add ebx, esi;  ret ;  
0x400e6a: add byte ptr [rcx], al;  ret ;  
0x400e69: sub al, 0;  add ebx, esi;  ret ;  
0x400e68: mov cl, 0x2c;  add byte ptr [rcx], al;  ret ;  
0x400ecd: leave ;  ret ;  
0x400ecc: add cl, cl;  ret ;  
0x400ecb: add byte ptr [rax], al;  leave ;  ret ;  
0x400eca: add byte ptr [rax], al;  add cl, cl;  ret ;  
0x400ec9: add byte ptr [rax], al;  add byte ptr [rax], al;  leave ;  ret ;  
0x400fdb: adc byte ptr [rax - 0x7d], cl;  ret ;  
0x400fda: push rbx;  adc byte ptr [rax - 0x7d], cl;  ret ;  
0x4011d6: pop rbx;  ret ;  
0x4011d4: mov dword ptr [rax], eax;  pop rbx;  ret ;  
0x4011d3: mov dword ptr [r8], eax;  pop rbx;  ret ;  
0x401305: pop rsp;  ret ;  
0x401304: pop r12;  ret ;  
0x401303: pop rbp;  pop r12;  ret ;  
0x401302: pop rbx;  pop rbp;  pop r12;  ret ;  
0x401301: add byte ptr [rbx + 0x5d], bl;  pop r12;  ret ;  
0x401315: ret ;  
0x401764: add byte ptr [rax], al;  ret ;  
0x401975: scasd eax, dword ptr [rdi];  ret ;  
0x401ae7: pop rdi;  ret ;  
0x401ae6: pop r15;  ret ;  
0x401ae5: pop rsi;  pop r15;  ret ;  
0x401ae4: pop r14;  pop r15;  ret ;  
0x401ae3: pop rbp;  pop r14;  pop r15;  ret ;  
0x401b61: xor eax, eax;  ret ;  
0x401b5f: sub al, 0;  xor eax, eax;  ret ;  
0x401b5e: mov ch, byte ptr [rax + rax];  xor eax, eax;  ret ;  
0x401bbf: add byte ptr [rax - 0x7d], cl;  ret ;  
0x401bbe: insb byte ptr [rdi], dx;  add byte ptr [rax - 0x7d], cl;  ret ;  
0x401bbd: sahf ;  insb byte ptr [rdi], dx;  add byte ptr [rax - 0x7d], cl;  ret ;  
0x401bf7: add byte ptr [rax - 0x7d], cl;  ret ;  
0x401bf6: insb byte ptr [rdi], dx;  add byte ptr [rax - 0x7d], cl;  ret ;  
0x401bf5: sahf ;  insb byte ptr [rdi], dx;  add byte ptr [rax - 0x7d], cl;  ret ;  
0x401c08: pop rsi;  ret ;  
0x401c07: pop r14;  ret ;  
0x401c06: pop rbp;  pop r14;  ret ;  
0x401c05: pop r13;  pop r14;  ret ;  
0x401c04: pop rsp;  pop r13;  pop r14;  ret ;  
0x401d2d: dec dword ptr [rax - 0x77];  ret ;  
0x401d2c: clc ;  dec dword ptr [rax - 0x77];  ret ;  
0x401e38: pop rbp;  ret ;  
0x401e37: pop rbx;  pop rbp;  ret ;  
0x401e36: or byte ptr [rbx + 0x5d], bl;  ret ;  
0x401e34: add esp, 8;  pop rbx;  pop rbp;  ret ;  
0x401f53: pop rdi;  ret ;  
0x401f52: pop r15;  ret ;  
0x401f51: pop rsi;  pop r15;  ret ;  
0x401f50: pop r14;  pop r15;  ret ;  
0x401f4f: pop rbp;  pop r14;  pop r15;  ret ;  
0x401fb7: pop rsp;  ret ;  
0x40270c: pop rbp;  ret ;  
0x40270b: pop rdi;  pop rbp;  ret ;  
0x40270a: pop r15;  pop rbp;  ret ;  
0x402709: pop rsi;  pop r15;  pop rbp;  ret ;  
0x402708: pop r14;  pop r15;  pop rbp;  ret ;  
0x402996: pop rbp;  ret ;  
0x402995: pop rdi;  pop rbp;  ret ;  
0x402994: pop r15;  pop rbp;  ret ;  
0x402993: pop rsi;  pop r15;  pop rbp;  ret ;  
0x402992: pop r14;  pop r15;  pop rbp;  ret ;  
0x403582: pop rbp;  ret ;  
0x403581: pop rdi;  pop rbp;  ret ;  
0x403580: pop r15;  pop rbp;  ret ;  
0x40357f: pop rsi;  pop r15;  pop rbp;  ret ;  
0x40357e: pop r14;  pop r15;  pop rbp;  ret ;  
0x403914: dec dword ptr [rax - 0x77];  ret ;  
0x4039cd: add byte ptr [rax - 0x77], cl;  ret ;  
0x4039cb: rol byte ptr [rbx], 1;  add byte ptr [rax - 0x77], cl;  ret ;  
0x403b87: dec dword ptr [rax - 0x77];  ret ;  
0x403bbc: pop rdi;  ret ;  
0x403bbb: pop r15;  ret ;  
0x403bba: pop rsi;  pop r15;  ret ;  
0x403bb9: pop r14;  pop r15;  ret ;  
0x403bb8: pop rbp;  pop r14;  pop r15;  ret ;  
0x403c11: pop rdi;  ret ;  
0x403c10: pop r15;  ret ;  
0x403c0f: pop rsi;  pop r15;  ret ;  
0x403c0e: pop r14;  pop r15;  ret ;  
0x403c0d: pop rbp;  pop r14;  pop r15;  ret ;  
0x403ec1: pop rbp;  ret ;  
0x403ec0: pop rdi;  pop rbp;  ret ;  
0x403ebf: pop r15;  pop rbp;  ret ;  
0x403ebe: pop rsi;  pop r15;  pop rbp;  ret ;  
0x403ebd: pop r14;  pop r15;  pop rbp;  ret ;  
0x404319: ret ;  
0x404316: add byte ptr [rcx + 0xf], cl;  ret ;  
0x40451d: or byte ptr [rax + 1], cl;  ret ;  
0x40471d: dec dword ptr [rax - 0x7d];  ret ;  
0x4047e3: or byte ptr [rax + 1], cl;  ret ;  
0x405400: add byte ptr [rax - 0x7d], cl;  ret ;  
0x405419: fimul dword ptr [rax - 0x7d];  ret ;  
0x4055d2: pop rbp;  ret ;  
0x4055d1: pop rdi;  pop rbp;  ret ;  
0x4055d0: pop r15;  pop rbp;  ret ;  
0x4055cf: pop rsi;  pop r15;  pop rbp;  ret ;  
0x4055ce: pop r14;  pop r15;  pop rbp;  ret ;  
0x40576b: pop rbp;  ret ;  
0x40576a: pop rdi;  pop rbp;  ret ;  
0x405769: pop r15;  pop rbp;  ret ;  
0x405768: pop rsi;  pop r15;  pop rbp;  ret ;  
0x405767: pop r14;  pop r15;  pop rbp;  ret ;  
0x4058ee: pop rdi;  ret ;  
0x4058ed: pop r15;  ret ;  
0x4058ec: pop rsi;  pop r15;  ret ;  
0x4058eb: pop r14;  pop r15;  ret ;  
0x4058ea: pop rbp;  pop r14;  pop r15;  ret ;  
0x405943: ror dword ptr [rax - 0x7d], cl;  ret ;  
0x405a48: add byte ptr [rax + 0x29], cl;  ret ;  
0x405a46: in al, 1;  add byte ptr [rax + 0x29], cl;  ret ;  
0x405b3c: add byte ptr [rax + 0x29], cl;  ret ;  
0x405b3a: jrcxz 0x405b3d;  add byte ptr [rax + 0x29], cl;  ret ;  
0x405bcc: add byte ptr [rax + 0x29], cl;  ret ;  
0x405bca: loop 0x405bcd;  add byte ptr [rax + 0x29], cl;  ret ;  
0x405c20: sub byte ptr [rax - 0x77], cl;  ret ;  
0x405c34: add byte ptr [rax + 0x29], cl;  ret ;  
0x405c32: loop 0x405c35;  add byte ptr [rax + 0x29], cl;  ret ;  
0x405dde: pop rdi;  ret ;  
0x405ddd: pop r15;  ret ;  
0x405ddc: pop rsi;  pop r15;  ret ;  
0x405ddb: pop r14;  pop r15;  ret ;  
0x405dda: pop rbp;  pop r14;  pop r15;  ret ;  
0x405e82: pop rdi;  ret ;  
0x405e81: pop r15;  ret ;  
0x405e80: pop rsi;  pop r15;  ret ;  
0x405e7f: pop r14;  pop r15;  ret ;  
0x405e7e: pop rbp;  pop r14;  pop r15;  ret ;  
0x405fba: pop rbp;  ret ;  
0x405fb9: pop r13;  ret ;  
0x405fb8: pop rsp;  pop r13;  ret ;  
0x405fb7: pop r12;  pop r13;  ret ;  
0x405fb6: pop rbp;  pop r12;  pop r13;  ret ;  
0x40606a: add byte ptr [rax - 0x7d], cl;  ret ;  
0x406068: add dword ptr [rax], eax;  add byte ptr [rax - 0x7d], cl;  ret ;  
0x4061c1: pop rsi;  ret ;  
0x4061c0: pop r14;  ret ;  
0x4061bf: pop rbp;  pop r14;  ret ;  
0x4061be: pop r13;  pop r14;  ret ;  
0x4061bd: pop rsp;  pop r13;  pop r14;  ret ;  
0x406919: ret ;  
0x406918: add bl, dh;  ret ;  
0x406916: nop dword ptr [rax];  ret ;  
0x406974: pop rdi;  ret ;  
0x406973: pop r15;  ret ;  
0x406972: pop rsi;  pop r15;  ret ;  
0x406971: pop r14;  pop r15;  ret ;  
0x406970: pop rbp;  pop r14;  pop r15;  ret ;  
0x4076a0: pop rdi;  ret ;  
0x40769f: pop r15;  ret ;  
0x40769e: pop rsi;  pop r15;  ret ;  
0x40769d: pop r14;  pop r15;  ret ;  
0x40769c: pop rbp;  pop r14;  pop r15;  ret ;  
0x4086d9: or cl, ch;  ret ;  
0x409498: or al, ch;  ret ;  
0x409ec6: xchg eax, edi;  ret ;  
0x409ec4: and al, 0xe8;  xchg eax, edi;  ret ;  
0x409f0f: ret ;  
0x409f0d: and al, 0xe8;  ret ;  
0x40a15a: pop rdi;  ret ;  
0x40a159: pop r15;  ret ;  
0x40a158: pop rsi;  pop r15;  ret ;  
0x40a157: pop r14;  pop r15;  ret ;  
0x40a156: pop rbp;  pop r14;  pop r15;  ret ;  
0x40ac30: pop rdi;  ret ;  
0x40ac2f: pop r15;  ret ;  
0x40ac2e: pop rsi;  pop r15;  ret ;  
0x40ac2d: pop r14;  pop r15;  ret ;  
0x40ac2c: pop rbp;  pop r14;  pop r15;  ret ;  
0x40c998: and al, 0xe8;  ret ;  
0x40da8a: sub byte ptr [rax - 0x7d], cl;  ret ;  
0x40daca: pop rdi;  ret ;  
0x40dac9: pop r15;  ret ;  
0x40dac8: pop rsi;  pop r15;  ret ;  
0x40dac7: pop r14;  pop r15;  ret ;  
0x40dac6: pop rbp;  pop r14;  pop r15;  ret ;  
0x40dbd1: dec dword ptr [rax - 0x7d];  ret ;  
0x40dd5a: push rbx;  ret ;  
0x40dd58: adc al, ch;  push rbx;  ret ;  
0x40e171: pop rbp;  ret ;  
0x40e170: pop r13;  ret ;  
0x40e16f: pop rsp;  pop r13;  ret ;  
0x40e16e: pop r12;  pop r13;  ret ;  
0x40e16d: pop rbp;  pop r12;  pop r13;  ret ;  
0x40e1b7: ret ;  
0x40e1b6: fpatan ;  ret ;  
0x40e1b5: jne 0x40e190;  ret ;  
0x40e1b4: sal byte ptr [rbp - 0x27], cl;  ret ;  
0x40e1b3: test dl, dl;  jne 0x40e190;  ret ;  
0x40e211: ret ;  
0x40e210: and bl, dh;  ret ;  
0x40e20f: ja 0x40e231;  ret ;  
0x40e20e: push qword ptr [rdi + 0x20];  ret ;  
0x40e23d: mov eax, 0xffffffff;  ret ;  
0x40e60e: add ecx, dword ptr [rax - 0x7d];  ret ;  
0x40e75b: or byte ptr [rcx - 0x7d], cl;  ret ;  
0x40e84d: add ecx, dword ptr [rax - 0x7d];  ret ;  
0x40e84b: add al, 0x89;  add ecx, dword ptr [rax - 0x7d];  ret ;  
0x40e8ce: add ecx, dword ptr [rax - 0x7d];  ret ;  
0x40e974: adc byte ptr [rax - 0x77], cl;  ret ;  
0x40ecaf: pop rbp;  ret ;  
0x40ecae: pop rdi;  pop rbp;  ret ;  
0x40ecad: pop r15;  pop rbp;  ret ;  
0x40ecac: pop rsi;  pop r15;  pop rbp;  ret ;  
0x40ecab: pop r14;  pop r15;  pop rbp;  ret ;  
0x40ed10: pop rbp;  ret ;  
0x40ed0f: pop rdi;  pop rbp;  ret ;  
0x40ed0e: pop r15;  pop rbp;  ret ;  
0x40ed0d: pop rsi;  pop r15;  pop rbp;  ret ;  
0x40ed0c: pop r14;  pop r15;  pop rbp;  ret ;  
0x40eea7: pop rdi;  ret ;  
0x40eea6: pop r15;  ret ;  
0x40eea5: pop rsi;  pop r15;  ret ;  
0x40eea4: pop r14;  pop r15;  ret ;  
0x40eea3: pop rbp;  pop r14;  pop r15;  ret ;  
0x40f198: pop rbp;  ret ;  
0x40f197: pop rbx;  pop rbp;  ret ;  
0x40f195: mov eax, esi;  pop rbx;  pop rbp;  ret ;  
0x40f194: mov rax, rsi;  pop rbx;  pop rbp;  ret ;  
0x40f233: pop rsp;  ret ;  
0x40f232: pop r12;  ret ;  
0x40f231: pop rbp;  pop r12;  ret ;  
0x40f230: pop rbx;  pop rbp;  pop r12;  ret ;  
0x40f22f: rcr byte ptr [rbx + 0x5d], 0x41;  pop rsp;  ret ;  
0x40f285: pop rsp;  ret ;  
0x40f284: pop r12;  ret ;  
0x40f283: pop rbp;  pop r12;  ret ;  
0x40f282: pop rbx;  pop rbp;  pop r12;  ret ;  
0x40f281: rcr byte ptr [rbx + 0x5d], 0x41;  pop rsp;  ret ;  
0x40f314: and byte ptr [rax - 0x77], cl;  ret ;  
0x40f32e: and byte ptr [rax - 0x77], cl;  ret ;  
0x40f3de: pop rdi;  ret ;  
0x40f3dd: pop r15;  ret ;  
0x40f3dc: pop rsi;  pop r15;  ret ;  
0x40f3db: pop r14;  pop r15;  ret ;  
0x40f3da: pop rbp;  pop r14;  pop r15;  ret ;  
0x40f43a: pop rdi;  ret ;  
0x40f439: pop r15;  ret ;  
0x40f438: pop rsi;  pop r15;  ret ;  
0x40f437: pop r14;  pop r15;  ret ;  
0x40f436: pop rbp;  pop r14;  pop r15;  ret ;  
0x40f43b: ret ;  
0x40f43a: pop rdi;  ret ;  
0x40f439: pop r15;  ret ;  
0x40f438: pop rsi;  pop r15;  ret ;  
0x40f54b: pop rdi;  ret ;  
0x40f54a: pop r15;  ret ;  
0x40f549: pop rsi;  pop r15;  ret ;  
0x40f548: pop r14;  pop r15;  ret ;  
0x40f547: pop rbp;  pop r14;  pop r15;  ret ;  
0x40f810: pop rdi;  ret ;  
0x40f80f: pop r15;  ret ;  
0x40f80e: pop rsi;  pop r15;  ret ;  
0x40f80d: pop r14;  pop r15;  ret ;  
0x40f80c: pop rbp;  pop r14;  pop r15;  ret ;  
0x40f83a: pop rdi;  ret ;  
0x40f839: pop r15;  ret ;  
0x40f838: pop rsi;  pop r15;  ret ;  
0x40f837: pop r14;  pop r15;  ret ;  
0x40f836: pop rbp;  pop r14;  pop r15;  ret ;  
0x40f9dd: add byte ptr [rax], al;  ret ;  
0x40f9db: fadd dword ptr [rax];  add byte ptr [rax], al;  ret ;  
0x40faea: pop rbp;  ret ;  
0x40fae9: pop rbp;  pop rbp;  ret ;  
0x40fae8: pop r13;  pop rbp;  ret ;  
0x40fae7: pop rsp;  pop r13;  pop rbp;  ret ;  
0x40fae6: pop r12;  pop r13;  pop rbp;  ret ;  
0x40fb0c: pop rbp;  ret ;  
0x40fb0b: pop rbp;  pop rbp;  ret ;  
0x40fb0a: pop r13;  pop rbp;  ret ;  
0x40fb09: pop rsp;  pop r13;  pop rbp;  ret ;  
0x40fb08: pop r12;  pop r13;  pop rbp;  ret ;  
0x40fc39: pop rsp;  ret ;  
0x40fc38: pop r12;  ret ;  
0x40fc37: pop rbp;  pop r12;  ret ;  
0x40fc36: pop rbx;  pop rbp;  pop r12;  ret ;  
0x40fc35: call 0x5c825995;  ret ;  
0x40fe23: pop rbx;  ret ;  
0x40fe21: mov eax, edx;  pop rbx;  ret ;  
0x40fe1f: je 0x40fe29;  mov eax, edx;  pop rbx;  ret ;  
0x40fe6a: pop rbx;  ret ;  
0x40fe68: mov eax, edx;  pop rbx;  ret ;  
0x40fe66: add byte ptr [rax], al;  mov eax, edx;  pop rbx;  ret ;  
0x40ff0a: ret ;  
0x40ff09: add bl, dh;  ret ;  
0x40ff08: add byte ptr [rax], al;  ret ;  
0x40ff07: add dword ptr [rax], eax;  add bl, dh;  ret ;  
0x40ff06: xor byte ptr [rcx], al;  add byte ptr [rax], al;  ret ;  
0x40ff44: add byte ptr [rax - 0x77], cl;  ret ;  
0x40ff42: add byte ptr [rax], al;  add byte ptr [rax - 0x77], cl;  ret ;  
0x40ffa1: pop rbp;  ret ;  
0x40ffa0: pop r13;  ret ;  
0x40ff9f: pop rsp;  pop r13;  ret ;  
0x40ff9e: pop r12;  pop r13;  ret ;  
0x40ff9d: pop rbp;  pop r12;  pop r13;  ret ;  
0x40ffe0: pop rbp;  ret ;  
0x40ffdf: pop r13;  ret ;  
0x40ffde: pop rsp;  pop r13;  ret ;  
0x40ffdd: pop r12;  pop r13;  ret ;  
0x40ffdc: pop rbp;  pop r12;  pop r13;  ret ;  
0x41002b: add byte ptr [rax - 0x77], cl;  ret ;  
0x410029: add byte ptr [rax], al;  add byte ptr [rax - 0x77], cl;  ret ;  
0x410084: pop rsp;  ret ;  
0x410083: pop r12;  ret ;  
0x410082: pop rbp;  pop r12;  ret ;  
0x410081: pop rbx;  pop rbp;  pop r12;  ret ;  
0x410080: fcomp dword ptr [rbx + 0x5d];  pop r12;  ret ;  
0x4100ba: pop rsp;  ret ;  
0x4100b9: pop r12;  ret ;  
0x4100b8: pop rbp;  pop r12;  ret ;  
0x4100b7: pop rbx;  pop rbp;  pop r12;  ret ;  
0x4100b6: fcomp dword ptr [rbx + 0x5d];  pop r12;  ret ;  
0x4100f3: add byte ptr [rax - 0x77], cl;  ret ;  
0x410188: cmp byte ptr [rax + 0x39], cl;  ret ;  
0x410187: push rax;  cmp byte ptr [rax + 0x39], cl;  ret ;  
0x4101ad: or cl, byte ptr [rax - 0x7d];  ret ;  
0x4101d0: pop rsp;  ret ;  
0x4101cf: pop r12;  ret ;  
0x4101ce: pop rbp;  pop r12;  ret ;  
0x4101cd: pop rbx;  pop rbp;  pop r12;  ret ;  
0x4101cc: fcomp dword ptr [rbx + 0x5d];  pop r12;  ret ;  
0x410230: pop rsp;  ret ;  
0x41022f: pop r12;  ret ;  
0x41022e: pop rbp;  pop r12;  ret ;  
0x41022d: pop rbx;  pop rbp;  pop r12;  ret ;  
0x41022c: fcomp dword ptr [rbx + 0x5d];  pop r12;  ret ;  
0x410308: pop rsp;  ret ;  
0x410307: pop r12;  ret ;  
0x410306: pop rbp;  pop r12;  ret ;  
0x410305: pop rbx;  pop rbp;  pop r12;  ret ;  
0x410304: adc byte ptr [rbx + 0x5d], bl;  pop r12;  ret ;  
0x410634: pop rdi;  ret ;  
0x410633: pop r15;  ret ;  
0x410632: pop rsi;  pop r15;  ret ;  
0x410631: pop r14;  pop r15;  ret ;  
0x410630: pop rbp;  pop r14;  pop r15;  ret ;  
0x410701: mov eax, dword ptr [rdx];  ret ;  
0x410700: nop ;  mov eax, dword ptr [rdx];  ret ;  
0x4106ff: nop ;  mov eax, dword ptr [rdx];  ret ;  
0x4106fe: jmp qword ptr [rsi - 0x70];  mov eax, dword ptr [rdx];  ret ;  
0x410735: pop rdi;  ret ;  
0x410734: pop r15;  ret ;  
0x410733: pop rsi;  pop r15;  ret ;  
0x410732: pop r14;  pop r15;  ret ;  
0x410731: pop rbp;  pop r14;  pop r15;  ret ;  
0x41081b: pop rdi;  ret ;  
0x41081a: pop r15;  ret ;  
0x410819: pop rsi;  pop r15;  ret ;  
0x410818: pop r14;  pop r15;  ret ;  
0x410817: pop rbp;  pop r14;  pop r15;  ret ;  
0x410834: mov eax, 0xffffffff;  ret ;  
0x4109eb: pop rdi;  ret ;  
0x4109ea: pop r15;  ret ;  
0x4109e9: pop rsi;  pop r15;  ret ;  
0x4109e8: pop r14;  pop r15;  ret ;  
0x4109e7: pop rbp;  pop r14;  pop r15;  ret ;  
0x410bca: dec dword ptr [rax + 0x29];  ret ;  
0x410c0e: ret 0x2948;  ret ;  
0x410c0d: scasd eax, dword ptr [rdi];  ret 0x2948;  ret ;  
0x410c19: or byte ptr [rax + 0x29], cl;  ret ;  
0x410c18: or byte ptr [r8 + 0x29], r9b;  ret ;  
0x410c2d: dec dword ptr [rax + 1];  ret ;  
0x410cd4: ror dword ptr [rax + 0x29], cl;  ret ;  
0x410ce8: add byte ptr [rax + 1], cl;  ret ;  
0x410ce6: add al, byte ptr [rax];  add byte ptr [rax + 1], cl;  ret ;  
0x410fbb: ror byte ptr [rax + 0x29], 1;  ret ;  
0x41118c: pop rbp;  ret ;  
0x41118b: pop rbx;  pop rbp;  ret ;  
0x41118a: sbb byte ptr [rbx + 0x5d], bl;  ret ;  
0x411188: add esp, 0x18;  pop rbx;  pop rbp;  ret ;  
0x411191: mov eax, dword ptr [rdx];  ret ;  
0x41118e: nop dword ptr [rax];  mov eax, dword ptr [rdx];  ret ;  
0x4111c8: pop rbp;  ret ;  
0x4111c7: pop rbx;  pop rbp;  ret ;  
0x4111c6: sbb byte ptr [rbx + 0x5d], bl;  ret ;  
0x4111c4: add esp, 0x18;  pop rbx;  pop rbp;  ret ;  
0x4111e4: mov eax, 0xffffffff;  ret ;  
0x41122f: pop rbx;  ret ;  
0x41122d: jne 0x411231;  pop rbx;  ret ;  
0x41122c: push qword ptr [rbp + 2];  pop rbx;  ret ;  
0x41122b: clc ;  push qword ptr [rbp + 2];  pop rbx;  ret ;  
0x4113a6: pop rdi;  ret ;  
0x4113a5: pop r15;  ret ;  
0x4113a4: pop rsi;  pop r15;  ret ;  
0x4113a3: pop r14;  pop r15;  ret ;  
0x4113a2: pop rbp;  pop r14;  pop r15;  ret ;  
0x4113eb: pop rdi;  ret ;  
0x4113ea: pop r15;  ret ;  
0x4113e9: pop rsi;  pop r15;  ret ;  
0x4113e8: pop r14;  pop r15;  ret ;  
0x4113e7: pop rbp;  pop r14;  pop r15;  ret ;  
0x41143b: mov eax, 0xffffffff;  ret ;  
0x411520: pop rbp;  ret ;  
0x41151f: pop rbx;  pop rbp;  ret ;  
0x41151e: lcall [rbx + 0x5d];  ret ;  
0x41153a: pop rbp;  ret ;  
0x411539: pop rbx;  pop rbp;  ret ;  
0x411537: mov eax, ebp;  pop rbx;  pop rbp;  ret ;  
0x4116d7: pop rsp;  ret ;  
0x4116d6: pop r12;  ret ;  
0x4116d5: pop rbp;  pop r12;  ret ;  
0x4116d4: lcall [rbp + 0x41];  pop rsp;  ret ;  
0x411708: pop rsp;  ret ;  
0x411707: pop r12;  ret ;  
0x411706: pop rbp;  pop r12;  ret ;  
0x411705: pop rbx;  pop rbp;  pop r12;  ret ;  
0x411704: rcr byte ptr [rbx + 0x5d], 0x41;  pop rsp;  ret ;  
0x41189b: ret ;  
0x411898: fadd dword ptr [rdi + rcx + 0x47];  ret ;  
0x411992: fmul dword ptr [rax - 0x77];  ret ;  
0x4119d3: pop rdi;  ret ;  
0x4119d2: pop r15;  ret ;  
0x4119d1: pop rsi;  pop r15;  ret ;  
0x4119d0: pop r14;  pop r15;  ret ;  
0x4119cf: pop rbp;  pop r14;  pop r15;  ret ;  
0x4119d9: xor eax, eax;  ret ;  
0x4119f1: add byte ptr [rax + 0x29], cl;  ret ;  
0x411ae9: add byte ptr [rax - 0x77], cl;  ret ;  
0x411ae7: add dword ptr [rax], eax;  add byte ptr [rax - 0x77], cl;  ret ;  
0x411bac: pop rbp;  ret ;  
0x411bab: pop r13;  ret ;  
0x411baa: pop rsp;  pop r13;  ret ;  
0x411ba9: pop r12;  pop r13;  ret ;  
0x411ba8: pop rbp;  pop r12;  pop r13;  ret ;  
0x411eaf: fimul word ptr [rax - 0x77];  ret ;  
0x411f01: or cl, byte ptr [rax - 0x7d];  ret ;  
0x411faa: pop rbp;  ret ;  
0x411fa9: pop rdi;  pop rbp;  ret ;  
0x411fa8: pop r15;  pop rbp;  ret ;  
0x411fa7: pop rsi;  pop r15;  pop rbp;  ret ;  
0x411fa6: pop r14;  pop r15;  pop rbp;  ret ;  
0x411fab: ret ;  
0x411faa: pop rbp;  ret ;  
0x411fa9: pop rdi;  pop rbp;  ret ;  
0x41201b: fmul dword ptr [rcx + 0x21];  ret ;  
0x412129: pop rsp;  ret ;  
0x412128: pop r12;  ret ;  
0x412127: pop rbp;  pop r12;  ret ;  
0x412126: pop rbx;  pop rbp;  pop r12;  ret ;  
0x412125: add byte ptr [rbx + 0x5d], bl;  pop r12;  ret ;  
0x412161: xor eax, eax;  ret ;  
0x41215f: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x41218e: pop rbx;  ret ;  
0x41218c: add byte ptr [rax], al;  pop rbx;  ret ;  
0x412198: pop rbx;  ret ;  
0x4121c5: ret ;  
0x4121c4: push rbx;  ret ;  
0x4121fe: pop rbx;  ret ;  
0x4121fc: mov eax, ebx;  pop rbx;  ret ;  
0x4121fb: mov rax, rbx;  pop rbx;  ret ;  
0x41224b: pop rbx;  ret ;  
0x412249: mov eax, ebx;  pop rbx;  ret ;  
0x412248: mov rax, rbx;  pop rbx;  ret ;  
0x41226e: pop rbx;  ret ;  
0x41226a: rcr byte ptr [rdx + rcx*2], 0;  pop rbx;  ret ;  
0x4123e6: pop rbp;  ret ;  
0x4123e5: pop rbx;  pop rbp;  ret ;  
0x4123e4: or byte ptr [rbx + 0x5d], bl;  ret ;  
0x4123e2: add esp, 8;  pop rbx;  pop rbp;  ret ;  
0x4123f2: mov dh, 2;  ret ;  
0x4123f1: movzx eax, byte ptr [rdx];  ret ;  
0x4123f0: add byte ptr [rdi], cl;  mov dh, 2;  ret ;  
0x4123ef: add byte ptr [rax], al;  movzx eax, byte ptr [rdx];  ret ;  
0x412447: pop rbp;  ret ;  
0x412446: pop rbx;  pop rbp;  ret ;  
0x412445: lcall [rbx + 0x5d];  ret ;  
0x4124a4: mov eax, 0xffffffff;  ret ;  
0x4125f1: pop rsi;  ret ;  
0x4125f0: pop r14;  ret ;  
0x4125ef: pop rbp;  pop r14;  ret ;  
0x4125ee: pop r13;  pop r14;  ret ;  
0x4125ed: pop rsp;  pop r13;  pop r14;  ret ;  
0x4129a9: pop rbx;  ret ;  
0x4129ff: pop rbx;  ret ;  
0x4129fd: xor eax, eax;  pop rbx;  ret ;  
0x412a19: pop rbx;  ret ;  
0x412aa9: pop rbp;  ret ;  
0x412aa8: pop r13;  ret ;  
0x412aa7: pop rsp;  pop r13;  ret ;  
0x412aa6: pop r12;  pop r13;  ret ;  
0x412aa5: pop rbp;  pop r12;  pop r13;  ret ;  
0x412c2a: pop rsi;  ret ;  
0x412c29: pop r14;  ret ;  
0x412c28: pop rbp;  pop r14;  ret ;  
0x412c27: pop r13;  pop r14;  ret ;  
0x412c26: pop rsp;  pop r13;  pop r14;  ret ;  
0x412e2d: pop rdi;  ret ;  
0x412e2c: pop r15;  ret ;  
0x412e2b: pop rsi;  pop r15;  ret ;  
0x412e2a: pop r14;  pop r15;  ret ;  
0x412e29: pop rbp;  pop r14;  pop r15;  ret ;  
0x412ed1: dec dword ptr [rax - 0x77];  ret ;  
0x413001: pop rsi;  ret ;  
0x413000: pop r14;  ret ;  
0x412fff: pop rbp;  pop r14;  ret ;  
0x412ffe: pop r13;  pop r14;  ret ;  
0x412ffd: pop rsp;  pop r13;  pop r14;  ret ;  
0x4130af: pop rsi;  ret ;  
0x4130ae: pop r14;  ret ;  
0x4130ad: pop rbp;  pop r14;  ret ;  
0x4130ac: pop r13;  pop r14;  ret ;  
0x4130ab: pop rsp;  pop r13;  pop r14;  ret ;  
0x413172: pop rbp;  ret ;  
0x413171: pop rbx;  pop rbp;  ret ;  
0x413170: or byte ptr [rbx + 0x5d], bl;  ret ;  
0x41316e: add esp, 8;  pop rbx;  pop rbp;  ret ;  
0x41319f: sub eax, edx;  ret ;  
0x41319e: sub rax, rdx;  ret ;  
0x41319d: pop rbp;  sub rax, rdx;  ret ;  
0x41319c: pop rbx;  pop rbp;  sub rax, rdx;  ret ;  
0x413211: ret ;  
0x413210: add bl, dh;  ret ;  
0x41320f: add byte ptr [rax], al;  ret ;  
0x41320e: add byte ptr [rax], r8b;  ret ;  
0x4132b0: ret ;  
0x4132af: pop rdi;  ret ;  
0x4132ae: pop r15;  ret ;  
0x4132ad: pop rsi;  pop r15;  ret ;  
0x4132ac: pop r14;  pop r15;  ret ;  
0x413555: pop rbp;  ret ;  
0x413554: pop rbx;  pop rbp;  ret ;  
0x413553: add byte ptr [rbx + 0x5d], bl;  ret ;  
0x413552: add byte ptr [rax], al;  pop rbx;  pop rbp;  ret ;  
0x413551: add byte ptr [rax], al;  add byte ptr [rbx + 0x5d], bl;  ret ;  
0x41365c: mov dh, 0;  ret ;  
0x41365b: movzx eax, byte ptr [rax];  ret ;  
0x413659: jae 0x413661;  movzx eax, byte ptr [rax];  ret ;  
0x413711: pop rbp;  ret ;  
0x413710: pop rbx;  pop rbp;  ret ;  
0x41370f: add byte ptr [rbx + 0x5d], bl;  ret ;  
0x41370e: add byte ptr [rax], al;  pop rbx;  pop rbp;  ret ;  
0x41370d: add byte ptr [rax], al;  add byte ptr [rbx + 0x5d], bl;  ret ;  
0x4137cf: pop rbp;  ret ;  
0x4137ce: pop rbx;  pop rbp;  ret ;  
0x4137cd: add byte ptr [rbx + 0x5d], bl;  ret ;  
0x4137cc: add byte ptr [rax], al;  pop rbx;  pop rbp;  ret ;  
0x4137cb: add byte ptr [rax], al;  add byte ptr [rbx + 0x5d], bl;  ret ;  
0x41387b: pop rbp;  ret ;  
0x41387a: pop rbx;  pop rbp;  ret ;  
0x413879: or byte ptr [rbx + 0x5d], bl;  ret ;  
0x413877: add esp, 8;  pop rbx;  pop rbp;  ret ;  
0x4138e5: pop rbp;  ret ;  
0x4138e4: pop rbx;  pop rbp;  ret ;  
0x4138e3: sbb byte ptr [rbx + 0x5d], bl;  ret ;  
0x4138e1: add esp, 0x18;  pop rbx;  pop rbp;  ret ;  
0x4139c9: pop rsp;  ret ;  
0x4139c8: pop r12;  ret ;  
0x4139c7: pop rbp;  pop r12;  ret ;  
0x4139c6: pop rbx;  pop rbp;  pop r12;  ret ;  
0x4139c5: fcomp dword ptr [rbx + 0x5d];  pop r12;  ret ;  
0x4139d1: xor eax, eax;  ret ;  
0x4139cf: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x4139ce: add byte ptr [rax], r8b;  xor eax, eax;  ret ;  
0x4139f6: jne 0x413a01;  ret ;  
0x4139f5: sal byte ptr [rbp + 9], cl;  ret ;  
0x4139f4: test edx, edx;  jne 0x413a01;  ret ;  
0x4139f3: test rdx, rdx;  jne 0x413a01;  ret ;  
0x413abb: pop rbp;  ret ;  
0x413aba: pop r13;  ret ;  
0x413ab9: pop rsp;  pop r13;  ret ;  
0x413ab8: pop r12;  pop r13;  ret ;  
0x413ab7: pop rbp;  pop r12;  pop r13;  ret ;  
0x413c0b: ret ;  
0x413c0a: pop rsp;  ret ;  
0x413c09: pop r12;  ret ;  
0x413c08: pop rbp;  pop r12;  ret ;  
0x413c07: pop rbx;  pop rbp;  pop r12;  ret ;  
0x413cc9: pop rdi;  ret ;  
0x413cc8: pop r15;  ret ;  
0x413cc7: pop rsi;  pop r15;  ret ;  
0x413cc6: pop r14;  pop r15;  ret ;  
0x413cc5: pop rbp;  pop r14;  pop r15;  ret ;  
0x413cf8: pop rdi;  ret ;  
0x413cf7: pop r15;  ret ;  
0x413cf6: pop rsi;  pop r15;  ret ;  
0x413cf5: pop r14;  pop r15;  ret ;  
0x413cf4: pop rbp;  pop r14;  pop r15;  ret ;  
0x414114: pop rdi;  ret ;  
0x414113: pop r15;  ret ;  
0x414112: pop rsi;  pop r15;  ret ;  
0x414111: pop r14;  pop r15;  ret ;  
0x414110: pop rbp;  pop r14;  pop r15;  ret ;  
0x4142b1: pop rdi;  ret ;  
0x4142b0: pop r15;  ret ;  
0x4142af: pop rsi;  pop r15;  ret ;  
0x4142ae: pop r14;  pop r15;  ret ;  
0x4142ad: pop rbp;  pop r14;  pop r15;  ret ;  
0x4142b2: ret ;  
0x4142b1: pop rdi;  ret ;  
0x4142b0: pop r15;  ret ;  
0x414524: pop rsp;  ret ;  
0x414523: pop r12;  ret ;  
0x414522: pop rbp;  pop r12;  ret ;  
0x414521: pop rbx;  pop rbp;  pop r12;  ret ;  
0x414520: vminsd xmm8, xmm4, qword ptr [rcx + 0x5c];  ret ;  
0x414674: mov eax, 0xffffffff;  ret ;  
0x414717: pop rbx;  ret ;  
0x414715: xor eax, eax;  pop rbx;  ret ;  
0x414773: pop rbx;  ret ;  
0x41482b: pop rdi;  ret ;  
0x41482a: pop r15;  ret ;  
0x414829: pop rsi;  pop r15;  ret ;  
0x414828: pop r14;  pop r15;  ret ;  
0x414827: pop rbp;  pop r14;  pop r15;  ret ;  
0x414a0e: ret ;  
0x414a0d: add bl, dh;  ret ;  
0x414a0c: add byte ptr [rax], al;  ret ;  
0x414a0b: add byte ptr [rax], al;  add bl, dh;  ret ;  
0x414a0a: add byte ptr [rax], 0;  add bl, dh;  ret ;  
0x414bfd: pop rbp;  ret ;  
0x414bfc: pop r13;  ret ;  
0x414bfb: pop rsp;  pop r13;  ret ;  
0x414bfa: pop r12;  pop r13;  ret ;  
0x414bf9: pop rbp;  pop r12;  pop r13;  ret ;  
0x414e54: ret ;  
0x414e53: pop rbp;  ret ;  
0x414e52: pop rbx;  pop rbp;  ret ;  
0x414e51: sub byte ptr [rbx + 0x5d], bl;  ret ;  
0x4150c6: ret ;  
0x4150c5: pop rbp;  ret ;  
0x4150c4: pop rbx;  pop rbp;  ret ;  
0x4150c3: sub byte ptr [rbx + 0x5d], bl;  ret ;  
0x415174: ret ;  
0x415173: in eax, dx;  ret ;  
0x415172: jne 0x415161;  ret ;  
0x415171: sal byte ptr [rbp - 0x13], cl;  ret ;  
0x415170: test edx, edx;  jne 0x415161;  ret ;  
0x4151a8: mov dword ptr [rdi + 8], eax;  ret ;  
0x4151a7: mov qword ptr [rdi + 8], rax;  ret ;  
0x4151d8: mov dword ptr [rdi + 8], eax;  ret ;  
0x4151d7: mov qword ptr [rdi + 8], rax;  ret ;  
0x4151d6: mov qword ptr [rdi + 8], rax;  ret ;  
0x41521b: pop rbx;  ret ;  
0x415219: xor eax, eax;  pop rbx;  ret ;  
0x415217: mov dword ptr [rbx], edx;  xor eax, eax;  pop rbx;  ret ;  
0x415296: pop rbx;  ret ;  
0x415294: add byte ptr [rax], al;  pop rbx;  ret ;  
0x415292: add byte ptr [rax], al;  add byte ptr [rax], al;  pop rbx;  ret ;  
0x41534b: pop rbx;  ret ;  
0x415381: pop rbx;  ret ;  
0x41537f: mov dh, 2;  pop rbx;  ret ;  
0x41537e: movzx eax, byte ptr [rdx];  pop rbx;  ret ;  
0x41537d: cwde ;  movzx eax, byte ptr [rdx];  pop rbx;  ret ;  
0x4154bb: pop rbx;  ret ;  
0x41554c: pop rbx;  ret ;  
0x41554a: mov dh, 2;  pop rbx;  ret ;  
0x415549: movzx eax, byte ptr [rdx];  pop rbx;  ret ;  
0x415548: or byte ptr [rdi], cl;  mov dh, 2;  pop rbx;  ret ;  
0x4155f3: pop rbx;  ret ;  
0x4155f0: add esp, 0x20;  pop rbx;  ret ;  
0x4155ef: add rsp, 0x20;  pop rbx;  ret ;  
0x415626: je 0x415631;  ret ;  
0x415624: cmp byte ptr [rax], al;  je 0x415631;  ret ;  
0x41565d: pop rsp;  ret ;  
0x41565c: pop r12;  ret ;  
0x41565b: pop rbp;  pop r12;  ret ;  
0x41565a: pop rbx;  pop rbp;  pop r12;  ret ;  
0x4156b1: mov eax, 0xffffffff;  ret ;  
0x4156e3: pop rbx;  ret ;  
0x4156e1: mov dh, 0;  pop rbx;  ret ;  
0x4156e0: movzx eax, byte ptr [rax];  pop rbx;  ret ;  
0x4156df: or byte ptr [rdi], cl;  mov dh, 0;  pop rbx;  ret ;  
0x415742: add dword ptr [rax + 0x39], ecx;  ret ;  
0x4157a6: pop rsi;  ret ;  
0x4157a5: pop r14;  ret ;  
0x4157a4: pop rbp;  pop r14;  ret ;  
0x4157a3: pop r13;  pop r14;  ret ;  
0x4157a2: pop rsp;  pop r13;  pop r14;  ret ;  
0x4157b1: xor eax, eax;  ret ;  
0x4157af: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x415907: pop rsi;  ret ;  
0x415906: pop r14;  ret ;  
0x415905: pop rbp;  pop r14;  ret ;  
0x415904: pop r13;  pop r14;  ret ;  
0x415903: pop rsp;  pop r13;  pop r14;  ret ;  
0x415a98: pop rsp;  ret ;  
0x415a97: pop r12;  ret ;  
0x415a96: pop rbp;  pop r12;  ret ;  
0x415a95: pop rbx;  pop rbp;  pop r12;  ret ;  
0x415a94: add byte ptr [rbx + 0x5d], bl;  pop r12;  ret ;  
0x415b4b: pop rsp;  ret ;  
0x415b4a: pop r12;  ret ;  
0x415b49: pop rbp;  pop r12;  ret ;  
0x415b48: pop rbx;  pop rbp;  pop r12;  ret ;  
0x415b47: add byte ptr [rbx + 0x5d], bl;  pop r12;  ret ;  
0x415c20: add byte ptr [rax], al;  ret ;  
0x415c1e: add byte ptr [rax], al;  add byte ptr [rax], al;  ret ;  
0x415cd2: ret ;  
0x415cd1: add bl, dh;  ret ;  
0x415cd0: add byte ptr [rax], al;  ret ;  
0x415ccf: add byte ptr [rax], al;  add bl, dh;  ret ;  
0x415cce: add byte ptr [rax], al;  add byte ptr [rax], al;  ret ;  
0x415dfa: add byte ptr [rax], al;  ret ;  
0x415df8: add byte ptr [rax], al;  add byte ptr [rax], al;  ret ;  
0x415e15: add byte ptr [rax], al;  ret ;  
0x415e13: add byte ptr [rax], al;  add byte ptr [rax], al;  ret ;  
0x415e21: xor eax, eax;  ret ;  
0x415e1f: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x415e89: pop rbp;  ret ;  
0x415e88: pop rbx;  pop rbp;  ret ;  
0x415e87: sub byte ptr [rbx + 0x5d], bl;  ret ;  
0x415e85: add esp, 0x28;  pop rbx;  pop rbp;  ret ;  
0x416038: imul al;  ret ;  
0x416036: out 0x31, eax;  imul al;  ret ;  
0x416043: pop rbp;  ret ;  
0x416042: pop rbx;  pop rbp;  ret ;  
0x416041: sub byte ptr [rbx + 0x5d], bl;  ret ;  
0x41603f: add esp, 0x28;  pop rbx;  pop rbp;  ret ;  
0x416180: pop rbx;  ret ;  
0x41617f: out dx, eax;  pop rbx;  ret ;  
0x41617e: and ebp, edi;  pop rbx;  ret ;  
0x41617d: and dword ptr [rbx], 0xffffffef;  pop rbx;  ret ;  
0x4161be: pop rbx;  ret ;  
0x4161bd: out dx, eax;  pop rbx;  ret ;  
0x4161bc: and ebp, edi;  pop rbx;  ret ;  
0x4161bb: and dword ptr [rbx], 0xffffffef;  pop rbx;  ret ;  
0x4161d5: pop rbx;  ret ;  
0x4161d4: out 0x5b, al;  ret ;  
0x4161d3: jne 0x4161bb;  pop rbx;  ret ;  
0x4161d2: push qword ptr [rbp - 0x1a];  pop rbx;  ret ;  
0x4161d1: clc ;  push qword ptr [rbp - 0x1a];  pop rbx;  ret ;  
0x416210: add al, 0x3a;  ret ;  
0x41620f: lea eax, [rdx + rdi];  ret ;  
0x41620e: lea eax, [rdx + rdi];  ret ;  
0x41620d: jne 0x416201;  lea eax, [rdx + rdi];  ret ;  
0x41621d: lea eax, [rax - 1];  ret ;  
0x41621c: lea eax, [r8 - 1];  ret ;  
0x41644e: pop rdi;  ret ;  
0x41644d: pop r15;  ret ;  
0x41644c: pop rsi;  pop r15;  ret ;  
0x41644b: pop r14;  pop r15;  ret ;  
0x41644a: pop rbp;  pop r14;  pop r15;  ret ;  
0x416733: pop rsi;  ret ;  
0x416732: pop r14;  ret ;  
0x416731: pop rbp;  pop r14;  ret ;  
0x416730: pop r13;  pop r14;  ret ;  
0x41672f: pop rsp;  pop r13;  pop r14;  ret ;  
0x4169b6: pop rbp;  ret ;  
0x4169b5: pop r13;  ret ;  
0x4169b4: pop rsp;  pop r13;  ret ;  
0x4169b3: pop r12;  pop r13;  ret ;  
0x4169b2: pop rbp;  pop r12;  pop r13;  ret ;  
0x416a1a: pop rbp;  ret ;  
0x416a19: pop rbx;  pop rbp;  ret ;  
0x416a18: or byte ptr [rbx + 0x5d], bl;  ret ;  
0x416a16: add esp, 8;  pop rbx;  pop rbp;  ret ;  
0x416ac9: ret ;  
0x416ac8: ret ;  
0x416ac7: jne 0x416ab9;  ret ;  
0x416ac6: sal byte ptr [rbp - 0x10], 0xf3;  ret ;  
0x416ac5: test eax, eax;  jne 0x416ab9;  ret ;  
0x416ad3: mov dword ptr [rdx], eax;  ret ;  
0x416ad2: mov qword ptr [rdx], rax;  ret ;  
0x416ad0: mov eax, dword ptr [rdi];  mov qword ptr [rdx], rax;  ret ;  
0x416ae4: sub eax, dword ptr [rsi + 0x10];  ret ;  
0x416b0c: sub eax, edx;  ret ;  
0x416b09: mov eax, dword ptr [rdi + 0x10];  sub eax, edx;  ret ;  
0x416b17: sub eax, edx;  ret ;  
0x416b14: mov eax, dword ptr [rdi + 0x10];  sub eax, edx;  ret ;  
0x416b1a: mov eax, 0xffffffff;  ret ;  
0x416b6c: ret ;  
0x416b6a: xor eax, eax;  ret ;  
0x416c21: ret ;  
0x416c20: pop rbx;  ret ;  
0x416c1f: add byte ptr [rbx - 0xd], bl;  ret ;  
0x416c1e: add byte ptr [rax], al;  pop rbx;  ret ;  
0x416c1d: add byte ptr [rax], al;  add byte ptr [rbx - 0xd], bl;  ret ;  
0x416c7b: pop rdi;  ret ;  
0x416c7a: pop r15;  ret ;  
0x416c79: pop rsi;  pop r15;  ret ;  
0x416c78: pop r14;  pop r15;  ret ;  
0x416c77: pop rbp;  pop r14;  pop r15;  ret ;  
0x416da1: mov eax, 0xffffffff;  ret ;  
0x416dc1: xor eax, eax;  ret ;  
0x416dbf: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x416dd1: mov eax, 0xffffffff;  ret ;  
0x416de1: ret ;  
0x416de0: add bl, dh;  ret ;  
0x416ddf: add byte ptr [rax], al;  ret ;  
0x416dde: add byte ptr [rax], al;  add bl, dh;  ret ;  
0x416ddd: add byte ptr [rax], al;  add byte ptr [rax], al;  ret ;  
0x416df6: sub eax, dword ptr [rax];  ret ;  
0x416df3: add eax, 0x2b37c9;  ret ;  
0x416e01: xor eax, eax;  ret ;  
0x416dff: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x416e12: mov eax, dword ptr [rdi + 0x68];  ret ;  
0x416e11: mov rax, qword ptr [rdi + 0x68];  ret ;  
0x416e23: clc ;  ret ;  
0x416e22: mov eax, edi;  ret ;  
0x416e21: mov rax, rdi;  ret ;  
0x416e20: add byte ptr [rax - 0x77], cl;  clc ;  ret ;  
0x416e1f: add byte ptr [rax], al;  mov rax, rdi;  ret ;  
0x416e8e: add byte ptr [rcx], al;  ret ;  
0x416e8b: adc eax, 0x1002b5c;  ret ;  
0x416edb: ret ;  
0x416eda: add bl, dh;  ret ;  
0x416ed9: add byte ptr [rax], al;  ret ;  
0x416ed8: add byte ptr [rax], al;  add bl, dh;  ret ;  
0x416ed7: add byte ptr [rax], 0;  add bl, dh;  ret ;  
0x416efe: add byte ptr [rax], al;  ret ;  
0x416efc: add byte ptr [rax], al;  add byte ptr [rax], al;  ret ;  
0x416f2f: mov dh, 0;  ret ;  
0x416f2e: movzx eax, byte ptr [rax];  ret ;  
0x416f2d: and ecx, dword ptr [rdi];  mov dh, 0;  ret ;  
0x416f2c: jae 0x416f51;  movzx eax, byte ptr [rax];  ret ;  
0x416f51: mov eax, 0xffffffff;  ret ;  
0x416f70: neg eax;  ret ;  
0x416f6f: sal bh, 0xd8;  ret ;  
0x416f6e: xchg eax, ebp;  sal bh, 0xd8;  ret ;  
0x416f6d: setne al;  neg eax;  ret ;  
0x41709f: pop rdi;  ret ;  
0x41709e: pop r15;  ret ;  
0x41709d: pop rsi;  pop r15;  ret ;  
0x41709c: pop r14;  pop r15;  ret ;  
0x41709b: pop rbp;  pop r14;  pop r15;  ret ;  
0x417112: pop rdi;  ret ;  
0x417111: pop r15;  ret ;  
0x417110: pop rsi;  pop r15;  ret ;  
0x41710f: pop r14;  pop r15;  ret ;  
0x41710e: pop rbp;  pop r14;  pop r15;  ret ;  
0x4172cc: pop rbp;  ret ;  
0x4172cb: pop r13;  ret ;  
0x4172ca: pop rsp;  pop r13;  ret ;  
0x4172c9: pop r12;  pop r13;  ret ;  
0x4172c8: pop rbp;  pop r12;  pop r13;  ret ;  
0x4172ea: pop rbp;  ret ;  
0x4172e9: pop r13;  ret ;  
0x4172e8: pop rsp;  pop r13;  ret ;  
0x4172e7: pop r12;  pop r13;  ret ;  
0x4172e6: pop rbp;  pop r12;  pop r13;  ret ;  
0x417325: pop rbp;  ret ;  
0x417324: pop r13;  ret ;  
0x417323: pop rsp;  pop r13;  ret ;  
0x417322: pop r12;  pop r13;  ret ;  
0x417321: pop rbp;  pop r12;  pop r13;  ret ;  
0x417392: pop rbp;  ret ;  
0x417391: pop r13;  ret ;  
0x417390: pop rsp;  pop r13;  ret ;  
0x41738f: pop r12;  pop r13;  ret ;  
0x41738e: pop rbp;  pop r12;  pop r13;  ret ;  
0x417421: mov eax, 0xffffffff;  ret ;  
0x4174c7: pop rbp;  ret ;  
0x4174c6: pop r13;  ret ;  
0x4174c5: pop rsp;  pop r13;  ret ;  
0x4174c4: pop r12;  pop r13;  ret ;  
0x4174c3: pop rbp;  pop r12;  pop r13;  ret ;  
0x41752f: add byte ptr [rax - 0x77], cl;  ret ;  
0x417574: pop rbp;  ret ;  
0x417573: pop r13;  ret ;  
0x417572: pop rsp;  pop r13;  ret ;  
0x417571: pop r12;  pop r13;  ret ;  
0x417570: pop rbp;  pop r12;  pop r13;  ret ;  
0x4175c6: add byte ptr [rax - 0x77], cl;  ret ;  
0x417604: pop rsp;  ret ;  
0x417603: pop r12;  ret ;  
0x417602: pop rbp;  pop r12;  ret ;  
0x417601: pop rbx;  pop rbp;  pop r12;  ret ;  
0x417600: add byte ptr [rbx + 0x5d], bl;  pop r12;  ret ;  
0x41762f: sub eax, dword ptr [rdi + 0x18];  ret ;  
0x41762e: sub rax, qword ptr [rdi + 0x18];  ret ;  
0x41766d: ret ;  
0x4176fd: dec dword ptr [rax - 0x77];  ret ;  
0x4176fc: clc ;  dec dword ptr [rax - 0x77];  ret ;  
0x41773c: pop rsp;  ret ;  
0x41773b: pop r12;  ret ;  
0x41773a: pop rbp;  pop r12;  ret ;  
0x417739: pop rbx;  pop rbp;  pop r12;  ret ;  
0x417738: fcomp dword ptr [rbx + 0x5d];  pop r12;  ret ;  
0x417815: dec dword ptr [rax - 0x77];  ret ;  
0x417814: clc ;  dec dword ptr [rax - 0x77];  ret ;  
0x4178ec: add byte ptr [rax + 0x39], cl;  ret ;  
0x4178ea: xor ebp, dword ptr [rbx];  add byte ptr [rax + 0x39], cl;  ret ;  
0x417909: pop rbp;  ret ;  
0x417908: pop r13;  ret ;  
0x417907: pop rsp;  pop r13;  ret ;  
0x417906: pop r12;  pop r13;  ret ;  
0x417905: pop rbp;  pop r12;  pop r13;  ret ;  
0x417aa9: add esp, 8;  ret ;  
0x417aa8: add rsp, 8;  ret ;  
0x417afb: add dh, dh;  ret ;  
0x417af9: add byte ptr [rax], al;  add dh, dh;  ret ;  
0x417af8: movsd dword ptr [rdi], dword ptr [rsi];  add byte ptr [rax], al;  add dh, dh;  ret ;  
0x417b15: pop rsi;  ret ;  
0x417b14: pop r14;  ret ;  
0x417b13: pop rbp;  pop r14;  ret ;  
0x417b12: pop r13;  pop r14;  ret ;  
0x417b11: pop rsp;  pop r13;  pop r14;  ret ;  
0x417b9c: pop rsi;  ret ;  
0x417b9b: pop r14;  ret ;  
0x417b9a: pop rbp;  pop r14;  ret ;  
0x417b99: pop r13;  pop r14;  ret ;  
0x417b98: pop rsp;  pop r13;  pop r14;  ret ;  
0x417be9: fisttp dword ptr [rax + 0x21];  ret ;  
0x417bf8: pop rsi;  ret ;  
0x417bf7: pop r14;  ret ;  
0x417bf6: pop rbp;  pop r14;  ret ;  
0x417bf5: pop r13;  pop r14;  ret ;  
0x417bf4: pop rsp;  pop r13;  pop r14;  ret ;  
0x417e90: pop rbp;  ret ;  
0x417e8f: pop rbx;  pop rbp;  ret ;  
0x417e8e: rcr byte ptr [rbx + 0x5d], 1;  ret ;  
0x417e8d: mov eax, edx;  pop rbx;  pop rbp;  ret ;  
0x417e8c: mov rax, rdx;  pop rbx;  pop rbp;  ret ;  
0x417ed3: pop rbp;  ret ;  
0x417ed2: pop rbx;  pop rbp;  ret ;  
0x417ed1: rcr byte ptr [rbx + 0x5d], 1;  ret ;  
0x417ed0: mov eax, edx;  pop rbx;  pop rbp;  ret ;  
0x417ecf: mov rax, rdx;  pop rbx;  pop rbp;  ret ;  
0x418294: mov eax, 0x6ca800;  ret ;  
0x4182a1: xor eax, eax;  ret ;  
0x41829f: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x4182ed: pop rbx;  ret ;  
0x4182eb: je 0x4182ef;  pop rbx;  ret ;  
0x4182e9: test eax, eax;  je 0x4182ef;  pop rbx;  ret ;  
0x41839f: add byte ptr [rax + 1], cl;  ret ;  
0x4183ff: pop rsi;  ret ;  
0x4183fe: pop r14;  ret ;  
0x4183fd: pop rbp;  pop r14;  ret ;  
0x4183fc: pop r13;  pop r14;  ret ;  
0x4183fb: pop rsp;  pop r13;  pop r14;  ret ;  
0x41844a: pop rsi;  ret ;  
0x418449: pop r14;  ret ;  
0x418448: pop rbp;  pop r14;  ret ;  
0x418447: pop r13;  pop r14;  ret ;  
0x418446: pop rsp;  pop r13;  pop r14;  ret ;  
0x418573: pop rbp;  ret ;  
0x418572: pop r13;  ret ;  
0x418571: pop rsp;  pop r13;  ret ;  
0x418570: pop r12;  pop r13;  ret ;  
0x41856f: pop rbp;  pop r12;  pop r13;  ret ;  
0x41858c: add dh, dh;  ret ;  
0x41858a: add byte ptr [rax], al;  add dh, dh;  ret ;  
0x41878a: add ecx, dword ptr [rax + 0x29];  ret ;  
0x418848: pop rdi;  ret ;  
0x418847: pop r15;  ret ;  
0x418846: pop rsi;  pop r15;  ret ;  
0x418845: pop r14;  pop r15;  ret ;  
0x418844: pop rbp;  pop r14;  pop r15;  ret ;  
0x418870: add byte ptr [rcx - 0xa], al;  ret ;  
0x41886e: add al, 0;  add byte ptr [rcx - 0xa], al;  ret ;  
0x4188e8: add byte ptr [rcx - 0xa], al;  ret ;  
0x4188e6: add al, 0;  add byte ptr [rcx - 0xa], al;  ret ;  
0x41891b: add byte ptr [rcx - 0xa], al;  ret ;  
0x418919: add al, 0;  add byte ptr [rcx - 0xa], al;  ret ;  
0x418925: add byte ptr [rcx - 0xa], al;  ret ;  
0x418923: add eax, dword ptr [rax];  add byte ptr [rcx - 0xa], al;  ret ;  
0x418dc4: mov dword ptr [rdi + 4], eax;  ret ;  
0x418dc3: pop rax;  mov dword ptr [rdi + 4], eax;  ret ;  
0x418dc2: pop r8;  mov dword ptr [rdi + 4], eax;  ret ;  
0x418e06: dec dword ptr [rax + 0x39];  ret ;  
0x418e4b: add byte ptr [rcx - 0xa], al;  ret ;  
0x418e49: add al, byte ptr [rax];  add byte ptr [rcx - 0xa], al;  ret ;  
0x41917b: adc byte ptr [rbp + 0x39], cl;  ret ;  
0x4191ba: pop rsp;  ret ;  
0x4191b9: pop r12;  ret ;  
0x4191b8: pop rbp;  pop r12;  ret ;  
0x4191b7: pop rbx;  pop rbp;  pop r12;  ret ;  
0x4191b6: add eax, 0x5c415d5b;  ret ;  
0x4191ea: pop rsp;  ret ;  
0x4191e9: pop r12;  ret ;  
0x4191e8: adc al, 0x41;  pop rsp;  ret ;  
0x4191e7: and al, 0x14;  pop r12;  ret ;  
0x4191e6: and al, 0x14;  pop r12;  ret ;  
0x419238: mov cl, 0x35;  ret ;  
0x419236: and ecx, dword ptr [rdi];  mov cl, 0x35;  ret ;  
0x419390: fmul dword ptr [rax + 0x39];  ret ;  
0x419399: add dh, dh;  ret ;  
0x419397: add al, 0;  add dh, dh;  ret ;  
0x4193d5: add byte ptr [rax + 0x39], cl;  ret ;  
0x4193d3: sbb dword ptr [rbx], ebp;  add byte ptr [rax + 0x39], cl;  ret ;  
0x419625: ret ;  
0x419624: pop rdi;  ret ;  
0x419623: pop r15;  ret ;  
0x419622: pop rsi;  pop r15;  ret ;  
0x419621: pop r14;  pop r15;  ret ;  
0x4196e9: add dh, dh;  ret ;  
0x4196e7: add al, 0;  add dh, dh;  ret ;  
0x4196e6: xlatb ;  add al, 0;  add dh, dh;  ret ;  
0x419800: add byte ptr [rax + 0x39], cl;  ret ;  
0x4197fe: add al, byte ptr [rax];  add byte ptr [rax + 0x39], cl;  ret ;  
0x419c88: and al, 0xe8;  ret ;  
0x419eef: dec dword ptr [rax + 0x39];  ret ;  
0x41a0e7: add byte ptr [rax + 0x39], cl;  ret ;  
0x41a139: pop rdi;  ret ;  
0x41a138: pop r15;  ret ;  
0x41a137: pop rsi;  pop r15;  ret ;  
0x41a136: pop r14;  pop r15;  ret ;  
0x41a135: pop rbp;  pop r14;  pop r15;  ret ;  
0x41a1bf: add ecx, dword ptr [rax + 0x29];  ret ;  
0x41a528: add al, ch;  ret ;  
0x41a526: add byte ptr [rax], al;  add al, ch;  ret ;  
0x41a525: add byte ptr [rax], 0;  add al, ch;  ret ;  
0x41a53c: and ecx, dword ptr [rax + 0x39];  ret ;  
0x41a5f4: pop rdi;  ret ;  
0x41a5f3: pop r15;  ret ;  
0x41a5f2: pop rsi;  pop r15;  ret ;  
0x41a5f1: pop r14;  pop r15;  ret ;  
0x41a5f0: pop rbp;  pop r14;  pop r15;  ret ;  
0x41b299: movsb byte ptr [rdi], byte ptr [rsi];  ret ;  
0x41b297: add al, ch;  movsb byte ptr [rdi], byte ptr [rsi];  ret ;  
0x41b296: add al, bpl;  movsb byte ptr [rdi], byte ptr [rsi];  ret ;  
0x41b4bb: xchg eax, ebp;  ret ;  
0x41b4b8: add byte ptr [rcx + 0xf], al;  xchg eax, ebp;  ret ;  
0x41b4b7: and eax, 0x950f4100;  ret ;  
0x41b5db: pop rdi;  ret ;  
0x41b5da: pop r15;  ret ;  
0x41b5d9: pop rsi;  pop r15;  ret ;  
0x41b5d8: pop r14;  pop r15;  ret ;  
0x41b5d7: pop rbp;  pop r14;  pop r15;  ret ;  
0x41bdbb: ret ;  
0x41bdb8: dec byte ptr [rax - 0x75];  ret ;  
0x41bdb7: dec byte ptr [r8 - 0x75];  ret ;  
0x41be38: ret ;  
0x41be35: dec byte ptr [rax - 0x73];  ret ;  
0x41bf56: ret ;  
0x41c00c: ret ;  
0x41c08e: pop rdi;  ret ;  
0x41c08d: pop r15;  ret ;  
0x41c08c: pop rsi;  pop r15;  ret ;  
0x41c08b: pop r14;  pop r15;  ret ;  
0x41c08a: pop rbp;  pop r14;  pop r15;  ret ;  
0x41c33b: push rsp;  ret ;  
0x41c338: ror byte ptr [rax - 0x73], 0x54;  ret ;  
0x41c4cc: ret ;  
0x41c4c9: dec byte ptr [rax - 0x73];  ret ;  
0x41c5df: mov eax, ecx;  ret ;  
0x41c5de: mov rax, rcx;  ret ;  
0x41c5dc: add byte ptr [rax], al;  mov rax, rcx;  ret ;  
0x41c65a: push rsp;  ret ;  
0x41c657: ror byte ptr [rax - 0x73], 1;  push rsp;  ret ;  
0x41ce4b: pop rsi;  ret ;  
0x41ce4a: pop r14;  ret ;  
0x41ce49: pop rbp;  pop r14;  ret ;  
0x41ce48: pop r13;  pop r14;  ret ;  
0x41ce47: pop rsp;  pop r13;  pop r14;  ret ;  
0x41ced6: pop rsi;  ret ;  
0x41ced5: pop r14;  ret ;  
0x41ced4: pop rbp;  pop r14;  ret ;  
0x41ced3: pop r13;  pop r14;  ret ;  
0x41ced2: pop rsp;  pop r13;  pop r14;  ret ;  
0x41ceef: xor eax, eax;  ret ;  
0x41ceed: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x41d068: pop rbx;  ret ;  
0x41d066: mov eax, eax;  pop rbx;  ret ;  
0x41d065: mov rax, r8;  pop rbx;  ret ;  
0x41d064: sbb byte ptr [rcx + rcx*4 - 0x40], cl;  pop rbx;  ret ;  
0x41d07f: xor eax, eax;  ret ;  
0x41d07d: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x41d08b: pop rbx;  ret ;  
0x41d089: xor eax, eax;  pop rbx;  ret ;  
0x41d087: add byte ptr [rax], al;  xor eax, eax;  pop rbx;  ret ;  
0x41d1dd: pop rbp;  ret ;  
0x41d1dc: pop rbx;  pop rbp;  ret ;  
0x41d1db: or byte ptr [rbx + 0x5d], bl;  ret ;  
0x41d1d9: add esp, 8;  pop rbx;  pop rbp;  ret ;  
0x41d32e: pop rdi;  ret ;  
0x41d32d: pop r15;  ret ;  
0x41d32c: pop rsi;  pop r15;  ret ;  
0x41d32b: pop r14;  pop r15;  ret ;  
0x41d32a: pop rbp;  pop r14;  pop r15;  ret ;  
0x41d4a1: pop rdi;  ret ;  
0x41d4a0: pop r15;  ret ;  
0x41d49f: pop rsi;  pop r15;  ret ;  
0x41d49e: pop r14;  pop r15;  ret ;  
0x41d49d: pop rbp;  pop r14;  pop r15;  ret ;  
0x41d4fb: pop rdi;  ret ;  
0x41d4fa: pop r15;  ret ;  
0x41d4f9: pop rsi;  pop r15;  ret ;  
0x41d4f8: pop r14;  pop r15;  ret ;  
0x41d4f7: pop rbp;  pop r14;  pop r15;  ret ;  
0x41dd1e: pop rdi;  ret ;  
0x41dd1d: pop r15;  ret ;  
0x41dd1c: pop rsi;  pop r15;  ret ;  
0x41dd1b: pop r14;  pop r15;  ret ;  
0x41dd1a: pop rbp;  pop r14;  pop r15;  ret ;  
0x41de6e: pop rdi;  ret ;  
0x41de6d: pop r15;  ret ;  
0x41de6c: pop rsi;  pop r15;  ret ;  
0x41de6b: pop r14;  pop r15;  ret ;  
0x41de6a: pop rbp;  pop r14;  pop r15;  ret ;  
0x41e093: ret ;  
0x41e091: jne 0x41e051;  ret ;  
0x41e090: add byte ptr [rbp - 0x42], dh;  ret ;  
0x41e08f: insb byte ptr [rdi], dx;  add byte ptr [rbp - 0x42], dh;  ret ;  
0x41e121: ret ;  
0x41e120: add bl, dh;  ret ;  
0x41e11f: add byte ptr [rax], al;  ret ;  
0x41e11e: add byte ptr [rax], al;  add bl, dh;  ret ;  
0x41e11d: add byte ptr [rax], 0;  add bl, dh;  ret ;  
0x41e1c4: ret ;  
0x41e1c3: add bl, dh;  ret ;  
0x41e1c2: add byte ptr [rax], al;  ret ;  
0x41e1c1: add byte ptr [rax], al;  add bl, dh;  ret ;  
0x41e1c0: add byte ptr [rax], al;  add byte ptr [rax], al;  ret ;  
0x41e221: add byte ptr [rax], al;  ret ;  
0x41e21f: add byte ptr [rax], al;  add byte ptr [rax], al;  ret ;  
0x41e2f0: pop rbp;  ret ;  
0x41e2ef: pop rbx;  pop rbp;  ret ;  
0x41e2ee: or byte ptr [rbx + 0x5d], bl;  ret ;  
0x41e2ec: add esp, 8;  pop rbx;  pop rbp;  ret ;  
0x41e3d4: add byte ptr [rax - 0x77], cl;  ret ;  
0x41e3d2: add dword ptr [rax], eax;  add byte ptr [rax - 0x77], cl;  ret ;  
0x41e5c8: pop rbx;  ret ;  
0x41e5c6: mov eax, ebx;  pop rbx;  ret ;  
0x41e5c5: mov rax, rbx;  pop rbx;  ret ;  
0x41e5cc: pop rbx;  ret ;  
0x41e5ca: xor eax, eax;  pop rbx;  ret ;  
0x41e5c9: ret ;  xor eax, eax;  pop rbx;  ret ;  
0x41e5c8: pop rbx;  ret ;  xor eax, eax;  pop rbx;  ret ;  
0x41e621: pop rbp;  ret ;  
0x41e620: pop r13;  ret ;  
0x41e61f: pop rsp;  pop r13;  ret ;  
0x41e61e: pop r12;  pop r13;  ret ;  
0x41e61d: pop rbp;  pop r12;  pop r13;  ret ;  
0x41e6af: pop rbp;  ret ;  
0x41e6ae: pop r13;  ret ;  
0x41e6ad: pop rsp;  pop r13;  ret ;  
0x41e6ac: pop r12;  pop r13;  ret ;  
0x41e6ab: pop rbp;  pop r12;  pop r13;  ret ;  
0x41e6c1: pop rbp;  ret ;  
0x41e6c0: pop r13;  ret ;  
0x41e6bf: pop rsp;  pop r13;  ret ;  
0x41e6be: pop r12;  pop r13;  ret ;  
0x41e6bd: pop rbp;  pop r12;  pop r13;  ret ;  
0x41e6dc: add dh, dh;  ret ;  
0x41e6da: add byte ptr [rax], al;  add dh, dh;  ret ;  
0x41e85c: pop rdi;  ret ;  
0x41e85b: pop r15;  ret ;  
0x41e85a: pop rsi;  pop r15;  ret ;  
0x41e859: pop r14;  pop r15;  ret ;  
0x41e858: pop rbp;  pop r14;  pop r15;  ret ;  
0x41ec78: pop rsp;  ret ;  
0x41ec77: pop r12;  ret ;  
0x41ec76: pop rbp;  pop r12;  ret ;  
0x41ec75: pop rbx;  pop rbp;  pop r12;  ret ;  
0x41ec74: rcr byte ptr [rbx + 0x5d], 1;  pop r12;  ret ;  
0x41ef1e: pop rbp;  ret ;  
0x41ef1d: pop r13;  ret ;  
0x41ef1c: pop rsp;  pop r13;  ret ;  
0x41ef1b: pop r12;  pop r13;  ret ;  
0x41ef1a: pop rbp;  pop r12;  pop r13;  ret ;  
0x41f18d: pop rbp;  ret ;  
0x41f18c: pop r13;  ret ;  
0x41f18b: pop rsp;  pop r13;  ret ;  
0x41f18a: pop r12;  pop r13;  ret ;  
0x41f189: pop rbp;  pop r12;  pop r13;  ret ;  
0x41f1a2: pop rbp;  ret ;  
0x41f1a1: pop r13;  ret ;  
0x41f1a0: pop rsp;  pop r13;  ret ;  
0x41f19f: pop r12;  pop r13;  ret ;  
0x41f19e: pop rbp;  pop r12;  pop r13;  ret ;  
0x41f1c5: pop rbp;  ret ;  
0x41f1c4: pop r13;  ret ;  
0x41f1c3: pop rsp;  pop r13;  ret ;  
0x41f1c2: pop r12;  pop r13;  ret ;  
0x41f1c1: pop rbp;  pop r12;  pop r13;  ret ;  
0x41f283: push rsi;  ret ;  
0x41f42f: pop rbp;  ret ;  
0x41f42e: pop rbx;  pop rbp;  ret ;  
0x41f42d: rcr byte ptr [rbx + 0x5d], 1;  ret ;  
0x41f42c: mov eax, edx;  pop rbx;  pop rbp;  ret ;  
0x41f600: pop rbp;  ret ;  
0x41f5ff: pop r13;  ret ;  
0x41f5fe: pop rsp;  pop r13;  ret ;  
0x41f5fd: pop r12;  pop r13;  ret ;  
0x41f5fc: pop rbp;  pop r12;  pop r13;  ret ;  
0x41f954: pop rbp;  ret ;  
0x41f953: pop rbx;  pop rbp;  ret ;  
0x41f952: or byte ptr [rbx + 0x5d], bl;  ret ;  
0x41f950: add esp, 8;  pop rbx;  pop rbp;  ret ;  
0x41f9a3: ret ;  
0x41f9cd: ret ;  
0x41f9d0: ret ;  
0x41fb1b: pop rdi;  ret ;  
0x41fb1a: pop r15;  ret ;  
0x41fb19: pop rsi;  pop r15;  ret ;  
0x41fb18: pop r14;  pop r15;  ret ;  
0x41fb17: pop rbp;  pop r14;  pop r15;  ret ;  
0x41ff69: pop rsp;  ret ;  
0x41ff68: pop r12;  ret ;  
0x41ff67: pop rbp;  pop r12;  ret ;  
0x41ff66: pop rbx;  pop rbp;  pop r12;  ret ;  
0x41ff65: adc byte ptr [rbx + 0x5d], bl;  pop r12;  ret ;  
0x42052f: pop rbx;  ret ;  
0x42052d: xor eax, eax;  pop rbx;  ret ;  
0x42052b: add byte ptr [rax], al;  xor eax, eax;  pop rbx;  ret ;  
0x420605: pop rbx;  ret ;  
0x42060c: pop rbx;  ret ;  
0x42074d: pop rsp;  ret ;  
0x42074c: pop r12;  ret ;  
0x42074b: pop rbp;  pop r12;  ret ;  
0x42074a: pop rbx;  pop rbp;  pop r12;  ret ;  
0x420749: rcr byte ptr [rbx + 0x5d], 1;  pop r12;  ret ;  
0x420a0d: pop rsp;  ret ;  
0x420a0c: pop r12;  ret ;  
0x420a0b: pop rbp;  pop r12;  ret ;  
0x420a0a: pop rbx;  pop rbp;  pop r12;  ret ;  
0x420a09: adc byte ptr [rbx + 0x5d], bl;  pop r12;  ret ;  
0x420a70: pop rsp;  ret ;  
0x420a6f: pop r12;  ret ;  
0x420a6e: pop rbp;  pop r12;  ret ;  
0x420a6d: pop rbx;  pop rbp;  pop r12;  ret ;  
0x420a6c: rcr byte ptr [rbx + 0x5d], 0x41;  pop rsp;  ret ;  
0x420b64: dec dword ptr [rax - 0x77];  ret ;  
0x420c61: pop rdi;  ret ;  
0x420c60: pop r15;  ret ;  
0x420c5f: pop rsi;  pop r15;  ret ;  
0x420c5e: pop r14;  pop r15;  ret ;  
0x420c5d: pop rbp;  pop r14;  pop r15;  ret ;  
0x420d4b: add byte ptr [rcx + 9], al;  ret ;  
0x420d49: add byte ptr [rax], al;  add byte ptr [rcx + 9], al;  ret ;  
0x420f40: pop rsp;  ret ;  
0x420f3f: pop r12;  ret ;  
0x420f3e: pop rbp;  pop r12;  ret ;  
0x420f3d: pop rbx;  pop rbp;  pop r12;  ret ;  
0x420f3c: loopne 0x420f99;  pop rbp;  pop r12;  ret ;  
0x420f48: add al, ch;  ret ;  
0x420f46: add byte ptr [rax], al;  add al, ch;  ret ;  
0x421137: pop rdi;  ret ;  
0x421136: pop r15;  ret ;  
0x421135: pop rsi;  pop r15;  ret ;  
0x421134: pop r14;  pop r15;  ret ;  
0x421133: pop rbp;  pop r14;  pop r15;  ret ;  
0x42153c: pop rdi;  ret ;  
0x42153b: pop r15;  ret ;  
0x42153a: pop rsi;  pop r15;  ret ;  
0x421539: pop r14;  pop r15;  ret ;  
0x421538: pop rbp;  pop r14;  pop r15;  ret ;  
0x4215ea: je 0x4215f1;  ret ;  
0x4215e8: add byte ptr [rax], al;  je 0x4215f1;  ret ;  
0x421777: pop rbp;  ret ;  
0x421776: pop r13;  ret ;  
0x421775: pop rsp;  pop r13;  ret ;  
0x421774: pop r12;  pop r13;  ret ;  
0x421773: pop rbp;  pop r12;  pop r13;  ret ;  
0x421784: add byte ptr [rax], al;  ret ;  
0x421781: mov eax, 0x16;  ret ;  
0x421878: add byte ptr [rax], al;  ret ;  
0x421875: mov eax, 0x16;  ret ;  
0x4218a8: add esp, 8;  ret ;  
0x4218a7: add rsp, 8;  ret ;  
0x4218a6: ret 0x8348;  
0x4218c9: add dword ptr [rax], eax;  ret ;  
0x4218c7: test ax, 1;  ret ;  
0x4218c6: add eax, 0x1a966;  ret ;  
0x421924: cmovne eax, edx;  ret ;  
0x421923: cmovne rax, rdx;  ret ;  
0x421972: enter 0xf66, -0x15;  ret ;  
0x421a1a: xlatb ;  ret ;  
0x421a42: cmovne eax, edx;  ret ;  
0x421a41: cmovne rax, rdx;  ret ;  
0x421a77: xlatb ;  ret ;  
0x421a90: xlatb ;  ret ;  
0x421a8d: fsub qword ptr [rsi + 0xf];  xlatb ;  ret ;  
0x421b1c: add byte ptr [rax], al;  ret ;  
0x421b1a: add eax, dword ptr [rax];  add byte ptr [rax], al;  ret ;  
0x421b19: add eax, 3;  ret ;  
0x422f3d: sub eax, ecx;  ret ;  
0x422f3b: add al, 0x17;  sub eax, ecx;  ret ;  
0x422f40: xor eax, eax;  ret ;  
0x422f3f: ret ;  xor eax, eax;  ret ;  
0x422f3e: enter 0x31c3, -0x40;  ret ;  
0x422f3d: sub eax, ecx;  ret ;  xor eax, eax;  ret ;  
0x422f57: sub eax, ecx;  ret ;  
0x422f55: mov dh, 7;  sub eax, ecx;  ret ;  
0x422f54: movzx eax, byte ptr [rdi];  sub eax, ecx;  ret ;  
0x423084: sub eax, edx;  ret ;  
0x423082: adc al, 0xe;  sub eax, edx;  ret ;  
0x423103: ret 0x4910;  
0x4231d3: ret 0x4910;  
0x423299: ret 0x4910;  
0x423363: ret 0x4910;  
0x423433: ret 0x4910;  
0x423503: ret 0x4910;  
0x4235d3: ret 0x4910;  
0x4236a3: ret 0x4910;  
0x423773: ret 0x4910;  
0x423843: ret 0x4910;  
0x423913: ret 0x4910;  
0x4239e3: ret 0x4910;  
0x423ab3: ret 0x4910;  
0x423b83: ret 0x4910;  
0x423c4f: ret 0x4910;  
0x423cc9: sub eax, edx;  ret ;  
0x423cc8: xchg eax, edx;  sub eax, edx;  ret ;  
0x423cc6: je 0x423cc9;  xchg eax, edx;  sub eax, edx;  ret ;  
0x423ced: sub eax, ecx;  ret ;  
0x423ceb: add al, 0x17;  sub eax, ecx;  ret ;  
0x423cf0: xor eax, eax;  ret ;  
0x423cef: ret ;  xor eax, eax;  ret ;  
0x423cee: enter 0x31c3, -0x40;  ret ;  
0x423ced: sub eax, ecx;  ret ;  xor eax, eax;  ret ;  
0x423d07: sub eax, ecx;  ret ;  
0x423d05: mov dh, 7;  sub eax, ecx;  ret ;  
0x423d04: movzx eax, byte ptr [rdi];  sub eax, ecx;  ret ;  
0x423d3c: add dword ptr [rax], eax;  ret ;  
0x423d3b: add qword ptr [rax], rax;  ret ;  
0x423d3a: push rbx;  add qword ptr [rax], rax;  ret ;  
0x423d39: add eax, 0x14853;  ret ;  
0x423e1b: clc ;  ret ;  
0x423e1a: mov eax, edi;  ret ;  
0x423e19: mov rax, rdi;  ret ;  
0x423e17: jmp 0x423e01;  mov rax, rdi;  ret ;  
0x423e60: pop rbp;  ret ;  
0x423e5f: pop rbx;  pop rbp;  ret ;  
0x423e5d: xor eax, eax;  pop rbx;  pop rbp;  ret ;  
0x423ea7: bsf eax, edx;  ret ;  
0x423ea5: je 0x423eab;  bsf eax, edx;  ret ;  
0x423ef4: bsf eax, edx;  ret ;  
0x423ef3: bsf rax, rdx;  ret ;  
0x423f51: bsf eax, edx;  ret ;  
0x423f50: bsf rax, rdx;  ret ;  
0x42400b: clc ;  ret ;  
0x42400a: sub eax, edi;  ret ;  
0x424009: sub rax, rdi;  ret ;  
0x424008: ror byte ptr [rax + 0x29], 1;  clc ;  ret ;  
0x424007: add eax, edx;  sub rax, rdi;  ret ;  
0x425842: sub eax, ecx;  ret ;  
0x425840: add al, 0x17;  sub eax, ecx;  ret ;  
0x425845: xor eax, eax;  ret ;  
0x425844: ret ;  xor eax, eax;  ret ;  
0x425843: enter 0x31c3, -0x40;  ret ;  
0x425842: sub eax, ecx;  ret ;  xor eax, eax;  ret ;  
0x425857: sub eax, ecx;  ret ;  
0x425855: mov dh, 7;  sub eax, ecx;  ret ;  
0x425854: movzx eax, byte ptr [rdi];  sub eax, ecx;  ret ;  
0x425d07: pop rdi;  ret ;  
0x425d06: pop r15;  ret ;  
0x425d05: pop rsi;  pop r15;  ret ;  
0x425d04: pop r14;  pop r15;  ret ;  
0x425d03: pop rbp;  pop r14;  pop r15;  ret ;  
0x425db3: add dword ptr [rax - 0x7d], ecx;  ret ;  
0x425e48: pop rdi;  ret ;  
0x425e47: pop r15;  ret ;  
0x425e46: pop rsi;  pop r15;  ret ;  
0x425e45: pop r14;  pop r15;  ret ;  
0x425e44: pop rbp;  pop r14;  pop r15;  ret ;  
0x425e61: pop rdi;  ret ;  
0x425e60: pop r15;  ret ;  
0x425e5f: pop rsi;  pop r15;  ret ;  
0x425e5e: pop r14;  pop r15;  ret ;  
0x425e5d: pop rbp;  pop r14;  pop r15;  ret ;  
0x425ef4: add byte ptr [rcx - 0x77], cl;  ret ;  
0x425ef2: add byte ptr [rax], al;  add byte ptr [rcx - 0x77], cl;  ret ;  
0x4261b2: add dword ptr [rax], edi;  ret ;  
0x426353: cmove eax, edx;  ret ;  
0x426352: cmove rax, rdx;  ret ;  
0x4263fb: add eax, ecx;  ret ;  
0x4263fa: add rax, rcx;  ret ;  
0x4263f9: clc ;  add rax, rcx;  ret ;  
0x4263f8: add eax, edi;  add rax, rcx;  ret ;  
0x426455: xlatb ;  ret ;  
0x426452: fldenv [rsi + 0xf];  xlatb ;  ret ;  
0x4264bf: xlatb ;  ret ;  
0x4264bc: fldenv [rsi + 0xf];  xlatb ;  ret ;  
0x4264d4: xlatb ;  ret ;  
0x4264d1: fldenv [rsi + 0xf];  xlatb ;  ret ;  
0x426562: xlatb ;  ret ;  
0x42655f: xor byte ptr [rsi + 0xf], ah;  xlatb ;  ret ;  
0x42655e: xor byte ptr [r14 + 0xf], r12b;  xlatb ;  ret ;  
0x426574: lea eax, [rdi + rax + 0x30];  ret ;  
0x426573: lea rax, [rdi + rax + 0x30];  ret ;  
0x4265bb: xlatb ;  ret ;  
0x4265b8: fldenv [rsi + 0xf];  xlatb ;  ret ;  
0x4265e1: xor eax, eax;  ret ;  
0x4265e0: xor rax, rax;  ret ;  
0x4265de: add byte ptr [rax], al;  xor rax, rax;  ret ;  
0x42661d: xor eax, eax;  ret ;  
0x42661c: xor rax, rax;  ret ;  
0x42661b: push rbp;  xor rax, rax;  ret ;  
0x42661a: jne 0x426671;  xor rax, rax;  ret ;  
0x426627: cmp al, dh;  ret ;  
0x426626: cmp al, r14b;  ret ;  
0x426625: lea eax, [rax + rdi - 0x10];  ret ;  
0x426624: lea rax, [rax + rdi - 0x10];  ret ;  
0x426636: clc ;  ret ;  
0x426635: add eax, edi;  ret ;  
0x426634: add rax, rdi;  ret ;  
0x426633: ror byte ptr [rax + 1], 0xf8;  ret ;  
0x426632: mov esp, 0xf80148c0;  ret ;  
0x426647: cmp byte ptr [rax], dl;  ret ;  
0x426646: cmp byte ptr [rax], r10b;  ret ;  
0x426645: lea eax, [rax + rdi + 0x10];  ret ;  
0x426644: lea rax, [rax + rdi + 0x10];  ret ;  
0x426657: cmp byte ptr [rax], ah;  ret ;  
0x426656: cmp byte ptr [rax], r12b;  ret ;  
0x426655: lea eax, [rax + rdi + 0x20];  ret ;  
0x426654: lea rax, [rax + rdi + 0x20];  ret ;  
0x42666b: clc ;  ret ;  
0x42666a: add eax, edi;  ret ;  
0x426669: add rax, rdi;  ret ;  
0x426668: cmp byte ptr [rax + 1], cl;  clc ;  ret ;  
0x426667: jbe 0x4266a1;  add rax, rdi;  ret ;  
0x42667a: lea eax, [rdi + rax + 0x10];  ret ;  
0x426679: lea rax, [rdi + rax + 0x10];  ret ;  
0x42668a: lea eax, [rdi + rax + 0x20];  ret ;  
0x426689: lea rax, [rdi + rax + 0x20];  ret ;  
0x42669a: lea eax, [rdi + rax + 0x30];  ret ;  
0x426699: lea rax, [rdi + rax + 0x30];  ret ;  
0x4266a2: xor eax, eax;  ret ;  
0x4266a1: xor rax, rax;  ret ;  
0x4266a0: nop ;  xor rax, rax;  ret ;  
0x42669f: nop ;  xor rax, rax;  ret ;  
0x4266c2: add byte ptr [rax], al;  ret ;  
0x4266bf: add eax, 0x1d;  ret ;  
0x4266c4: ret ;  
0x4266c2: add byte ptr [rax], al;  ret ;  
0x4266d6: add byte ptr [rax], al;  ret ;  
0x4266d3: add eax, 0x8449;  ret ;  
0x4266de: add dword ptr [rax], eax;  ret ;  
0x4266dd: pop rsi;  add dword ptr [rax], eax;  ret ;  
0x4266dc: jno 0x42673c;  add dword ptr [rax], eax;  ret ;  
0x4266db: add eax, 0x15e71;  ret ;  
0x4267b7: sub eax, edx;  ret ;  
0x4267b5: mov dh, 0x16;  sub eax, edx;  ret ;  
0x4267b4: movzx edx, byte ptr [rsi];  sub eax, edx;  ret ;  
0x4267be: and cl, byte ptr [rcx - 0x77];  ret ;  
0x4267dd: sub eax, edx;  ret ;  
0x4267db: mov dh, 0xd2;  sub eax, edx;  ret ;  
0x4267da: movzx edx, dl;  sub eax, edx;  ret ;  
0x4267e1: xor eax, eax;  ret ;  
0x4267e0: nop ;  xor eax, eax;  ret ;  
0x4267df: ret ;  nop ;  xor eax, eax;  ret ;  
0x4267de: rol bl, 1;  nop ;  xor eax, eax;  ret ;  
0x426b94: pop rbp;  ret ;  
0x426b93: pop r13;  ret ;  
0x426b92: pop rsp;  pop r13;  ret ;  
0x426b91: pop r12;  pop r13;  ret ;  
0x426b90: pop rbp;  pop r12;  pop r13;  ret ;  
0x426c29: pop rbp;  ret ;  
0x426c28: pop r13;  ret ;  
0x426c27: pop rsp;  pop r13;  ret ;  
0x426c26: pop r12;  pop r13;  ret ;  
0x426c25: pop rbp;  pop r12;  pop r13;  ret ;  
0x426c76: cmove eax, edx;  ret ;  
0x426c75: cmove rax, rdx;  ret ;  
0x426c7f: ret ;  
0x426c7e: add bl, dh;  ret ;  
0x426c7d: add r11b, sil;  ret ;  
0x426c7c: pop rax;  add r11b, sil;  ret ;  
0x426c7b: add byte ptr [rax + 0x43], bl;  add bl, dh;  ret ;  
0x426cb8: add dword ptr [rax], eax;  ret ;  
0x426cb5: add eax, 0x17647;  ret ;  
0x426d25: ret ;  
0x426d24: or al, 0xf3;  ret ;  
0x426d23: ja 0x426d31;  ret ;  
0x426d37: movq qword ptr [rdi + rdx - 0x20], mm0;  ret ;  
0x426d9d: ret ;  
0x426d9c: in al, 0xf3;  ret ;  
0x426d9b: jne 0x426d81;  ret ;  
0x426d9a: retf 0xe475;  ret ;  
0x426d99: cmp edx, ecx;  jne 0x426d81;  ret ;  
0x426daa: ret 0x7504;  
0x426dc1: adc dh, bh;  ret ;  
0x426dc0: adc sil, r15b;  ret ;  
0x426dbf: mov dword ptr [rax + rdx - 2], ecx;  ret ;  
0x426dbe: mov word ptr [rax + rdx - 2], cx;  ret ;  
0x426dc9: cld ;  ret ;  
0x426dc6: mov dword ptr [rdi + rdx - 4], ecx;  ret ;  
0x426dd2: clc ;  ret ;  
0x426dcf: mov dword ptr [rdi + rdx - 8], ecx;  ret ;  
0x426dce: mov qword ptr [rdi + rdx - 8], rcx;  ret ;  
0x426e5e: clc ;  ret ;  
0x426e5d: mov eax, edi;  ret ;  
0x426e5c: mov rax, rdi;  ret ;  
0x426e5b: in eax, 0x48;  mov eax, edi;  ret ;  
0x426e5a: jne 0x426e41;  mov rax, rdi;  ret ;  
0x426f0c: clc ;  ret ;  
0x426f0b: mov eax, edi;  ret ;  
0x426f0a: mov rax, rdi;  ret ;  
0x426f09: dec dword ptr [rax - 0x77];  clc ;  ret ;  
0x426f48: clc ;  ret ;  
0x426f47: mov eax, edi;  ret ;  
0x426f46: mov rax, rdi;  ret ;  
0x426f45: dec dword ptr [rax - 0x77];  clc ;  ret ;  
0x42711d: ret 0xf748;  
0x427132: clc ;  ret ;  
0x427131: mov eax, edi;  ret ;  
0x427130: mov rax, rdi;  ret ;  
0x42712f: dec dword ptr [rax - 0x77];  clc ;  ret ;  
0x427190: cmp byte ptr [rax + 0xf], cl;  ret ;  
0x427193: ret ;  
0x4271da: ret ;  
0x4271df: ret ;  
0x4271f3: ret ;  
0x427231: clc ;  ret ;  
0x427230: mov eax, edi;  ret ;  
0x42722f: mov rax, rdi;  ret ;  
0x42722e: dec dword ptr [rax - 0x77];  clc ;  ret ;  
0x42726c: add dword ptr [rax], eax;  ret ;  
0x42726a: shr dword ptr [rdx], cl;  add dword ptr [rax], eax;  ret ;  
0x427269: add eax, 0x12ad3;  ret ;  
0x42734a: mov eax, edx;  ret ;  
0x427349: mov rax, rdx;  ret ;  
0x427347: jmp 0x427331;  mov rax, rdx;  ret ;  
0x427388: add byte ptr [rax], al;  ret ;  
0x427385: add eax, 0x67;  ret ;  
0x4273db: add byte ptr [rax], al;  ret ;  
0x4273d9: add al, 0;  add byte ptr [rax], al;  ret ;  
0x4273d8: add eax, 4;  ret ;  
0x427414: stc ;  ret ;  
0x4295fa: sub eax, ecx;  ret ;  
0x4295f8: add al, 0x82;  sub eax, ecx;  ret ;  
0x4295f7: mov eax, dword ptr [rdx + rax*4];  sub eax, ecx;  ret ;  
0x4295fd: xor eax, eax;  ret ;  
0x4295fc: ret ;  xor eax, eax;  ret ;  
0x4295fb: enter 0x31c3, -0x40;  ret ;  
0x4295fa: sub eax, ecx;  ret ;  xor eax, eax;  ret ;  
0x429614: sub eax, ecx;  ret ;  
0x429612: add al, 0x82;  sub eax, ecx;  ret ;  
0x429611: mov eax, dword ptr [rdx + rax*4];  sub eax, ecx;  ret ;  
0x4298a1: sub eax, edx;  ret ;  
0x4298a0: xchg eax, ecx;  sub eax, edx;  ret ;  
0x42989f: adc al, 0x91;  sub eax, edx;  ret ;  
0x42989e: mov edx, dword ptr [rcx + rdx*4];  sub eax, edx;  ret ;  
0x4299ad: ret 0x4910;  
0x429b4d: ret 0x4910;  
0x429ce5: ret 0x4910;  
0x429e8d: ret 0x4910;  
0x42a02d: ret 0x4910;  
0x42a1cd: ret 0x4910;  
0x42a36d: ret 0x4910;  
0x42a50d: ret 0x4910;  
0x42a6ad: ret 0x4910;  
0x42a84d: ret 0x4910;  
0x42a9ed: ret 0x4910;  
0x42ab8d: ret 0x4910;  
0x42ad2d: ret 0x4910;  
0x42aecd: ret 0x4910;  
0x42b06d: ret 0x4910;  
0x42b176: sub eax, edx;  ret ;  
0x42b174: add al, 0x81;  sub eax, edx;  ret ;  
0x42b173: mov eax, dword ptr [rcx + rax*4];  sub eax, edx;  ret ;  
0x42b1aa: sub eax, ecx;  ret ;  
0x42b1a8: add al, 0x82;  sub eax, ecx;  ret ;  
0x42b1a7: mov eax, dword ptr [rdx + rax*4];  sub eax, ecx;  ret ;  
0x42b1ad: xor eax, eax;  ret ;  
0x42b1ac: ret ;  xor eax, eax;  ret ;  
0x42b1ab: enter 0x31c3, -0x40;  ret ;  
0x42b1aa: sub eax, ecx;  ret ;  xor eax, eax;  ret ;  
0x42b1c4: sub eax, ecx;  ret ;  
0x42b1c2: add al, 0x82;  sub eax, ecx;  ret ;  
0x42b1c1: mov eax, dword ptr [rdx + rax*4];  sub eax, ecx;  ret ;  
0x42b3d1: sub eax, edx;  ret ;  
0x42b3d0: xchg eax, ecx;  sub eax, edx;  ret ;  
0x42b3cf: adc al, 0x91;  sub eax, edx;  ret ;  
0x42b3ce: mov edx, dword ptr [rcx + rdx*4];  sub eax, edx;  ret ;  
0x42b4a4: ret 0x4910;  
0x42b5f4: ret 0x4910;  
0x42b742: ret 0x4910;  
0x42b894: ret 0x4910;  
0x42b9e4: ret 0x4910;  
0x42bb34: ret 0x4910;  
0x42bc84: ret 0x4910;  
0x42bdd4: ret 0x4910;  
0x42bf24: ret 0x4910;  
0x42c074: ret 0x4910;  
0x42c1c4: ret 0x4910;  
0x42c314: ret 0x4910;  
0x42c464: ret 0x4910;  
0x42c5b4: ret 0x4910;  
0x42c704: ret 0x4910;  
0x42c7e6: sub eax, edx;  ret ;  
0x42c7e4: add al, 0x81;  sub eax, edx;  ret ;  
0x42c7e3: mov eax, dword ptr [rcx + rax*4];  sub eax, edx;  ret ;  
0x42c81a: sub eax, ecx;  ret ;  
0x42c818: add al, 0x82;  sub eax, ecx;  ret ;  
0x42c817: mov eax, dword ptr [rdx + rax*4];  sub eax, ecx;  ret ;  
0x42c81d: xor eax, eax;  ret ;  
0x42c81c: ret ;  xor eax, eax;  ret ;  
0x42c81b: enter 0x31c3, -0x40;  ret ;  
0x42c81a: sub eax, ecx;  ret ;  xor eax, eax;  ret ;  
0x42c834: sub eax, ecx;  ret ;  
0x42c832: add al, 0x82;  sub eax, ecx;  ret ;  
0x42c831: mov eax, dword ptr [rdx + rax*4];  sub eax, ecx;  ret ;  
0x42c8bc: ret ;  
0x42c8bb: in eax, 0xf3;  ret ;  
0x42c8ba: jne 0x42c8a1;  ret ;  
0x42c8b9: adc byte ptr [rbp - 0x1b], dh;  ret ;  
0x42c8b8: jg 0x42c8ca;  jne 0x42c8a1;  ret ;  
0x42c97f: ret ;  
0x42c97e: push rbx;  ret ;  
0x42c9bb: ret ;  
0x42c9ba: push rbx;  ret ;  
0x42cb8d: ret 0xf748;  
0x42cba5: ret ;  
0x42cba4: push rbx;  ret ;  
0x42cc00: cmp byte ptr [rax + 0xf], cl;  ret ;  
0x42cc03: ret ;  
0x42cc4a: ret ;  
0x42cc4f: ret ;  
0x42cc63: ret ;  
0x42cca4: ret ;  
0x42cca3: push rbx;  ret ;  
0x42cddc: ret ;  
0x42cdda: mov dword ptr [rdi], ecx;  ret ;  
0x42cdd9: mov qword ptr [rdi], rcx;  ret ;  
0x42ce5a: pop rbx;  ret ;  
0x42ce58: mov dword ptr [rdi], ecx;  pop rbx;  ret ;  
0x42ce57: mov qword ptr [rdi], r9;  pop rbx;  ret ;  
0x42ce56: ror dword ptr [rcx + rcx*4 + 0xf], 1;  pop rbx;  ret ;  
0x42d085: ret ;  
0x42d084: cmp bl, dh;  ret ;  
0x42d083: cmp r11b, r14b;  ret ;  
0x42d082: mov dword ptr [rdi + 0x38], ecx;  ret ;  
0x42d081: mov qword ptr [rdi + 0x38], r9;  ret ;  
0x42d116: pop rsp;  ret ;  
0x42d115: pop r12;  ret ;  
0x42d114: pop rbp;  pop r12;  ret ;  
0x42d113: pop rbx;  pop rbp;  pop r12;  ret ;  
0x42d112: sbb byte ptr [rbx + 0x5d], bl;  pop r12;  ret ;  
0x42d252: add eax, ecx;  ret ;  
0x42d251: add rax, rcx;  ret ;  
0x42d250: clc ;  add rax, rcx;  ret ;  
0x42d24f: add eax, edi;  add rax, rcx;  ret ;  
0x42d2a5: xlatb ;  ret ;  
0x42d2a2: fldenv [rsi + 0xf];  xlatb ;  ret ;  
0x42d305: xlatb ;  ret ;  
0x42d302: fldenv [rsi + 0xf];  xlatb ;  ret ;  
0x42d31a: xlatb ;  ret ;  
0x42d317: fldenv [rsi + 0xf];  xlatb ;  ret ;  
0x42d390: xlatb ;  ret ;  
0x42d38d: xor byte ptr [rsi + 0xf], ah;  xlatb ;  ret ;  
0x42d38c: xor byte ptr [r14 + 0xf], r12b;  xlatb ;  ret ;  
0x42d39e: lea eax, [rdi + rax + 0x30];  ret ;  
0x42d39d: lea rax, [rdi + rax + 0x30];  ret ;  
0x42d3b7: cmp al, dh;  ret ;  
0x42d3b6: cmp al, r14b;  ret ;  
0x42d3b5: lea eax, [rax + rdi - 0x10];  ret ;  
0x42d3b4: lea rax, [rax + rdi - 0x10];  ret ;  
0x42d3c6: clc ;  ret ;  
0x42d3c5: add eax, edi;  ret ;  
0x42d3c4: add rax, rdi;  ret ;  
0x42d3c3: ror byte ptr [rax + 1], 0xf8;  ret ;  
0x42d3c2: mov esp, 0xf80148c0;  ret ;  
0x42d3d7: cmp byte ptr [rax], dl;  ret ;  
0x42d3d6: cmp byte ptr [rax], r10b;  ret ;  
0x42d3d5: lea eax, [rax + rdi + 0x10];  ret ;  
0x42d3d4: lea rax, [rax + rdi + 0x10];  ret ;  
0x42d3e7: cmp byte ptr [rax], ah;  ret ;  
0x42d3e6: cmp byte ptr [rax], r12b;  ret ;  
0x42d3e5: lea eax, [rax + rdi + 0x20];  ret ;  
0x42d3e4: lea rax, [rax + rdi + 0x20];  ret ;  
0x42d3f2: xor eax, eax;  ret ;  
0x42d3f1: xor rax, rax;  ret ;  
0x42d3ef: add byte ptr [rax], al;  xor rax, rax;  ret ;  
0x42d449: add al, 7;  ret ;  
0x42d448: lea eax, [rdi + rax];  ret ;  
0x42d447: lea rax, [rdi + rax];  ret ;  
0x42d49a: enter 0xf66, -0x15;  ret ;  
0x42d54a: xlatb ;  ret ;  
0x42d567: add al, 7;  ret ;  
0x42d566: lea eax, [rdi + rax];  ret ;  
0x42d565: lea rax, [rdi + rax];  ret ;  
0x42d597: xlatb ;  ret ;  
0x42d5b0: xlatb ;  ret ;  
0x42d5ad: fsub qword ptr [rsi + 0xf];  xlatb ;  ret ;  
0x42e84d: sub eax, ecx;  ret ;  
0x42e84b: add al, 0x17;  sub eax, ecx;  ret ;  
0x42e850: xor eax, eax;  ret ;  
0x42e84f: ret ;  xor eax, eax;  ret ;  
0x42e84e: enter 0x31c3, -0x40;  ret ;  
0x42e84d: sub eax, ecx;  ret ;  xor eax, eax;  ret ;  
0x42e867: sub eax, ecx;  ret ;  
0x42e865: mov dh, 7;  sub eax, ecx;  ret ;  
0x42e864: movzx eax, byte ptr [rdi];  sub eax, ecx;  ret ;  
0x42e8b8: sub eax, edx;  ret ;  
0x42e8b6: adc al, 0x16;  sub eax, edx;  ret ;  
0x42ea26: sub eax, edx;  ret ;  
0x42ea24: adc al, 0xa;  sub eax, edx;  ret ;  
0x42eaec: sub eax, edx;  ret ;  
0x42eaea: adc al, 0xa;  sub eax, edx;  ret ;  
0x42eb11: sub eax, ecx;  ret ;  
0x42eb10: shr byte ptr [rcx], 0xc8;  ret ;  
0x42eb0f: xor eax, eax;  sub eax, ecx;  ret ;  
0x42eb0e: loop 0x42eb41;  shr byte ptr [rcx], 0xc8;  ret ;  
0x42eb57: sub eax, ecx;  ret ;  
0x42eb55: mov dh, 0xe;  sub eax, ecx;  ret ;  
0x42eb54: movzx ecx, byte ptr [rsi];  sub eax, ecx;  ret ;  
0x42ecd9: ret 0x830f;  
0x42ecd7: cmp byte ptr [rdi], dl;  ret 0x830f;  
0x42f5ce: cmp byte ptr [rdi], dl;  ret ;  
0x42f5cb: adc byte ptr [rsi + 0xf], ah;  cmp byte ptr [rdi], dl;  ret ;  
0x42f6f8: xor eax, eax;  ret ;  
0x42f6f6: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x42f720: xor eax, eax;  ret ;  
0x42f71e: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x42f7ac: sub eax, edx;  ret ;  
0x42f7d3: xor eax, eax;  ret ;  
0x42f7d1: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x42f7f7: sub eax, edx;  ret ;  
0x42f88f: sub eax, ecx;  ret ;  
0x42f88d: add byte ptr [rax], al;  sub eax, ecx;  ret ;  
0x42f8c3: xor eax, eax;  ret ;  
0x42f8c1: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x42f8fa: sub eax, ecx;  ret ;  
0x42f8f8: add byte ptr [rax], al;  sub eax, ecx;  ret ;  
0x42f982: xor eax, eax;  ret ;  
0x42f980: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x42f9b3: xor eax, eax;  ret ;  
0x42f9b1: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x42f9dd: xor eax, eax;  ret ;  
0x42f9db: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x42f9f9: sub eax, ecx;  ret ;  
0x42fa7b: xor eax, eax;  ret ;  
0x42fa79: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x42fafe: xor eax, eax;  ret ;  
0x42fafc: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x42fb7e: xor eax, eax;  ret ;  
0x42fb7c: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x42fb7b: add eax, 0xc0310000;  ret ;  
0x42fbfe: xor eax, eax;  ret ;  
0x42fbfc: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x42fbfb: add eax, 0xc0310000;  ret ;  
0x42fc7e: xor eax, eax;  ret ;  
0x42fc7c: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x42fd06: sub eax, ecx;  ret ;  
0x42fd40: ret 0x830f;  
0x42fd3e: cmp byte ptr [rdi], dl;  ret 0x830f;  
0x42fe2c: xor eax, eax;  ret ;  
0x42fe2a: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x42febc: xor eax, eax;  ret ;  
0x42feba: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x42fedf: push rdi;  ret ;  
0x42fede: outsd dx, dword ptr [rsi];  push rdi;  ret ;  
0x42fee4: ret ;  
0x42fee3: outsd dx, dword ptr [rsi];  ret ;  
0x42ff4f: xor eax, eax;  ret ;  
0x42ff4d: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x42ff85: ret 0xc2b2;  
0x42ff84: ret 0xc2b2;  
0x42ff83: outsd dx, dword ptr [rsi];  ret 0xc2b2;  
0x42ffef: xor eax, eax;  ret ;  
0x42ffed: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x43008f: xor eax, eax;  ret ;  
0x43008d: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x430100: xor eax, eax;  ret ;  
0x4300fe: jne 0x430124;  xor eax, eax;  ret ;  
0x43014a: sub eax, ecx;  ret ;  
0x430148: add byte ptr [rax], al;  sub eax, ecx;  ret ;  
0x43015c: sub eax, ecx;  ret ;  
0x43015a: add byte ptr [rax], al;  sub eax, ecx;  ret ;  
0x431746: ret ;  
0x431a8c: clc ;  ret ;  
0x431a8b: clc ;  ret ;  
0x431a8a: mov dword ptr [rdi - 8], ecx;  ret ;  
0x431a89: mov qword ptr [rdi - 8], rcx;  ret ;  
0x431aca: clc ;  ret ;  
0x431ac9: push rdi;  clc ;  ret ;  
0x431ac8: mov dword ptr [rdi - 8], edx;  ret ;  
0x431ac7: mov qword ptr [rdi - 8], rdx;  ret ;  
0x431b02: clc ;  ret ;  
0x431b01: clc ;  ret ;  
0x431b00: mov dword ptr [rdi - 8], ecx;  ret ;  
0x431aff: mov qword ptr [rdi - 8], rcx;  ret ;  
0x431b40: clc ;  ret ;  
0x431b3f: push rdi;  clc ;  ret ;  
0x431b3e: mov dword ptr [rdi - 8], edx;  ret ;  
0x431b3d: mov qword ptr [rdi - 8], rdx;  ret ;  
0x431b78: clc ;  ret ;  
0x431b77: push rdi;  clc ;  ret ;  
0x431b76: mov dword ptr [rdi - 8], edx;  ret ;  
0x431b75: mov qword ptr [rdi - 8], rdx;  ret ;  
0x431ba0: clc ;  ret ;  
0x431b9f: push rdi;  clc ;  ret ;  
0x431b9e: mov dword ptr [rdi - 8], edx;  ret ;  
0x431b9d: mov qword ptr [rdi - 8], rdx;  ret ;  
0x431bc8: clc ;  ret ;  
0x431bc7: push rdi;  clc ;  ret ;  
0x431bc6: mov dword ptr [rdi - 8], edx;  ret ;  
0x431bc5: mov qword ptr [rdi - 8], rdx;  ret ;  
0x431be0: clc ;  ret ;  
0x431bdf: push rdi;  clc ;  ret ;  
0x431bde: mov dword ptr [rdi - 8], edx;  ret ;  
0x431bdd: mov qword ptr [rdi - 8], rdx;  ret ;  
0x431bf8: clc ;  ret ;  
0x431bf7: push rdi;  clc ;  ret ;  
0x431bf6: mov dword ptr [rdi - 8], edx;  ret ;  
0x431bf5: mov qword ptr [rdi - 8], rdx;  ret ;  
0x431bf4: clc ;  mov qword ptr [rdi - 8], rdx;  ret ;  
0x431c42: cld ;  ret ;  
0x431c41: push rdi;  cld ;  ret ;  
0x431c40: mov dword ptr [rdi - 4], edx;  ret ;  
0x431c8a: cld ;  ret ;  
0x431c89: push rdi;  cld ;  ret ;  
0x431c88: mov dword ptr [rdi - 4], edx;  ret ;  
0x431cc8: cld ;  ret ;  
0x431cc7: push rdi;  cld ;  ret ;  
0x431cc6: mov dword ptr [rdi - 4], edx;  ret ;  
0x431d00: cld ;  ret ;  
0x431cff: push rdi;  cld ;  ret ;  
0x431cfe: mov dword ptr [rdi - 4], edx;  ret ;  
0x431d3c: mov byte ptr [rdi - 1], dl;  ret ;  
0x431d64: mov byte ptr [rdi - 1], dl;  ret ;  
0x431d8c: mov byte ptr [rdi - 1], dl;  ret ;  
0x431da6: cld ;  ret ;  
0x431da5: push rdi;  cld ;  ret ;  
0x431da4: mov dword ptr [rdi - 4], edx;  ret ;  
0x431dbe: cld ;  ret ;  
0x431dbd: push rdi;  cld ;  ret ;  
0x431dbc: mov dword ptr [rdi - 4], edx;  ret ;  
0x431dc4: mov byte ptr [rdi - 1], dl;  ret ;  
0x431e12: cld ;  ret ;  
0x431e11: push rdi;  cld ;  ret ;  
0x431e10: mov dword ptr [rdi - 4], edx;  ret ;  
0x431e62: cld ;  ret ;  
0x431e61: push rdi;  cld ;  ret ;  
0x431e60: mov dword ptr [rdi - 4], edx;  ret ;  
0x431ea8: cld ;  ret ;  
0x431ea7: push rdi;  cld ;  ret ;  
0x431ea6: mov dword ptr [rdi - 4], edx;  ret ;  
0x431ee0: cld ;  ret ;  
0x431edf: push rdi;  cld ;  ret ;  
0x431ede: mov dword ptr [rdi - 4], edx;  ret ;  
0x431f1e: cld ;  ret ;  
0x431f1d: push rdi;  cld ;  ret ;  
0x431f1c: mov dword ptr [rdi - 4], edx;  ret ;  
0x431f46: cld ;  ret ;  
0x431f45: push rdi;  cld ;  ret ;  
0x431f44: mov dword ptr [rdi - 4], edx;  ret ;  
0x431f6e: cld ;  ret ;  
0x431f6d: push rdi;  cld ;  ret ;  
0x431f6c: mov dword ptr [rdi - 4], edx;  ret ;  
0x431f86: cld ;  ret ;  
0x431f85: push rdi;  cld ;  ret ;  
0x431f84: mov dword ptr [rdi - 4], edx;  ret ;  
0x431f9e: cld ;  ret ;  
0x431f9d: push rdi;  cld ;  ret ;  
0x431f9c: mov dword ptr [rdi - 4], edx;  ret ;  
0x431fa6: mov dword ptr [rdi - 2], edx;  ret ;  
0x431fa5: mov word ptr [rdi - 2], dx;  ret ;  
0x431ff2: cld ;  ret ;  
0x431ff1: push rdi;  cld ;  ret ;  
0x431ff0: mov dword ptr [rdi - 4], edx;  ret ;  
0x431fef: cmc ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x431fee: cmc ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x432042: cld ;  ret ;  
0x432041: push rdi;  cld ;  ret ;  
0x432040: mov dword ptr [rdi - 4], edx;  ret ;  
0x43203f: cmc ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x43203e: cmc ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x432088: cld ;  ret ;  
0x432087: push rdi;  cld ;  ret ;  
0x432086: mov dword ptr [rdi - 4], edx;  ret ;  
0x432085: cmc ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x432084: cmc ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x4320c0: cld ;  ret ;  
0x4320bf: push rdi;  cld ;  ret ;  
0x4320be: mov dword ptr [rdi - 4], edx;  ret ;  
0x4320bd: cmc ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x4320bc: cmc ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x4320fe: cld ;  ret ;  
0x4320fd: push rdi;  cld ;  ret ;  
0x4320fc: mov dword ptr [rdi - 4], edx;  ret ;  
0x4320fb: cmc ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x4320fa: cmc ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x432126: cld ;  ret ;  
0x432125: push rdi;  cld ;  ret ;  
0x432124: mov dword ptr [rdi - 4], edx;  ret ;  
0x432123: cmc ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x432122: cmc ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x43214e: cld ;  ret ;  
0x43214d: push rdi;  cld ;  ret ;  
0x43214c: mov dword ptr [rdi - 4], edx;  ret ;  
0x43214b: cmc ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x43214a: cmc ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x432166: cld ;  ret ;  
0x432165: push rdi;  cld ;  ret ;  
0x432164: mov dword ptr [rdi - 4], edx;  ret ;  
0x432163: cmc ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x432162: cmc ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x43217e: cld ;  ret ;  
0x43217d: push rdi;  cld ;  ret ;  
0x43217c: mov dword ptr [rdi - 4], edx;  ret ;  
0x43217b: cmc ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x43217a: cmc ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x43218e: mov dword ptr [rdi - 2], ecx;  ret ;  
0x43218d: mov word ptr [rdi - 2], cx;  ret ;  
0x43218c: std ;  mov word ptr [rdi - 2], cx;  ret ;  
0x4321e2: cld ;  ret ;  
0x4321e1: push rdi;  cld ;  ret ;  
0x4321e0: mov dword ptr [rdi - 4], edx;  ret ;  
0x4321df: hlt ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x4321de: hlt ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x43222a: cld ;  ret ;  
0x432229: push rdi;  cld ;  ret ;  
0x432228: mov dword ptr [rdi - 4], edx;  ret ;  
0x432227: hlt ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x432226: hlt ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x432268: cld ;  ret ;  
0x432267: push rdi;  cld ;  ret ;  
0x432266: mov dword ptr [rdi - 4], edx;  ret ;  
0x432265: hlt ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x432264: hlt ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x4322a0: cld ;  ret ;  
0x43229f: push rdi;  cld ;  ret ;  
0x43229e: mov dword ptr [rdi - 4], edx;  ret ;  
0x43229d: hlt ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x43229c: hlt ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x4322de: cld ;  ret ;  
0x4322dd: push rdi;  cld ;  ret ;  
0x4322dc: mov dword ptr [rdi - 4], edx;  ret ;  
0x4322db: hlt ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x4322da: hlt ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x432306: cld ;  ret ;  
0x432305: push rdi;  cld ;  ret ;  
0x432304: mov dword ptr [rdi - 4], edx;  ret ;  
0x432303: hlt ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x432302: hlt ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x43232e: cld ;  ret ;  
0x43232d: push rdi;  cld ;  ret ;  
0x43232c: mov dword ptr [rdi - 4], edx;  ret ;  
0x43232b: hlt ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x43232a: hlt ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x432346: cld ;  ret ;  
0x432345: push rdi;  cld ;  ret ;  
0x432344: mov dword ptr [rdi - 4], edx;  ret ;  
0x432343: hlt ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x432342: hlt ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x43235e: cld ;  ret ;  
0x43235d: push rdi;  cld ;  ret ;  
0x43235c: mov dword ptr [rdi - 4], edx;  ret ;  
0x43235b: hlt ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x43235a: hlt ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x432366: cld ;  ret ;  
0x432365: push rdi;  cld ;  ret ;  
0x432364: mov dword ptr [rdi - 4], edx;  ret ;  
0x432363: cld ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x432362: push rsi;  cld ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x432379: ret ;  
0x432378: outsd dx, dword ptr [rsi];  ret ;  
0x43239b: ret ;  
0x43239a: jg 0x4323eb;  ret ;  
0x4323b4: clc ;  ret ;  
0x4323b3: push rdi;  clc ;  ret ;  
0x4323b2: mov dword ptr [rdi - 8], edx;  ret ;  
0x4323b1: mov qword ptr [rdi - 8], rdx;  ret ;  
0x4323b0: mov qword ptr [rdi - 8], rdx;  ret ;  
0x4323fc: clc ;  ret ;  
0x4323fb: push rdi;  clc ;  ret ;  
0x4323fa: mov dword ptr [rdi - 8], edx;  ret ;  
0x4323f9: mov qword ptr [rdi - 8], rdx;  ret ;  
0x4323f8: mov qword ptr [rdi - 8], rdx;  ret ;  
0x432404: ret ;  
0x432403: outsd dx, dword ptr [rsi];  ret ;  
0x432421: ret ;  
0x432420: jg 0x432469;  ret ;  
0x43243a: clc ;  ret ;  
0x432439: push rdi;  clc ;  ret ;  
0x432438: mov dword ptr [rdi - 8], edx;  ret ;  
0x432437: mov qword ptr [rdi - 8], rdx;  ret ;  
0x432436: mov qword ptr [rdi - 8], rdx;  ret ;  
0x432476: clc ;  ret ;  
0x432475: push rdi;  clc ;  ret ;  
0x432474: mov dword ptr [rdi - 8], edx;  ret ;  
0x432473: mov qword ptr [rdi - 8], rdx;  ret ;  
0x432472: mov qword ptr [rdi - 8], rdx;  ret ;  
0x4324b0: clc ;  ret ;  
0x4324af: push rdi;  clc ;  ret ;  
0x4324ae: mov dword ptr [rdi - 8], edx;  ret ;  
0x4324ad: mov qword ptr [rdi - 8], rdx;  ret ;  
0x4324ac: mov qword ptr [rdi - 8], rdx;  ret ;  
0x4324e8: clc ;  ret ;  
0x4324e7: push rdi;  clc ;  ret ;  
0x4324e6: mov dword ptr [rdi - 8], edx;  ret ;  
0x4324e5: mov qword ptr [rdi - 8], rdx;  ret ;  
0x4324e4: mov qword ptr [rdi - 8], rdx;  ret ;  
0x432510: clc ;  ret ;  
0x43250f: push rdi;  clc ;  ret ;  
0x43250e: mov dword ptr [rdi - 8], edx;  ret ;  
0x43250d: mov qword ptr [rdi - 8], rdx;  ret ;  
0x43250c: mov qword ptr [rdi - 8], rdx;  ret ;  
0x432538: clc ;  ret ;  
0x432537: push rdi;  clc ;  ret ;  
0x432536: mov dword ptr [rdi - 8], edx;  ret ;  
0x432535: mov qword ptr [rdi - 8], rdx;  ret ;  
0x432534: mov qword ptr [rdi - 8], rdx;  ret ;  
0x432550: clc ;  ret ;  
0x43254f: push rdi;  clc ;  ret ;  
0x43254e: mov dword ptr [rdi - 8], edx;  ret ;  
0x43254d: mov qword ptr [rdi - 8], rdx;  ret ;  
0x43254c: mov qword ptr [rdi - 8], rdx;  ret ;  
0x43256c: cld ;  ret ;  
0x43256b: cld ;  ret ;  
0x43256a: mov dword ptr [rdi - 4], ecx;  ret ;  
0x432569: sti ;  mov dword ptr [rdi - 4], ecx;  ret ;  
0x432568: push rdi;  sti ;  mov dword ptr [rdi - 4], ecx;  ret ;  
0x4325b4: clc ;  ret ;  
0x4325b3: push rdi;  clc ;  ret ;  
0x4325b2: mov dword ptr [rdi - 8], edx;  ret ;  
0x4325b1: mov qword ptr [rdi - 8], rdx;  ret ;  
0x4325b0: mov qword ptr [rdi - 8], rdx;  ret ;  
0x4325fc: clc ;  ret ;  
0x4325fb: push rdi;  clc ;  ret ;  
0x4325fa: mov dword ptr [rdi - 8], edx;  ret ;  
0x4325f9: mov qword ptr [rdi - 8], rdx;  ret ;  
0x4325f8: mov qword ptr [rdi - 8], rdx;  ret ;  
0x43263a: clc ;  ret ;  
0x432639: push rdi;  clc ;  ret ;  
0x432638: mov dword ptr [rdi - 8], edx;  ret ;  
0x432637: mov qword ptr [rdi - 8], rdx;  ret ;  
0x432636: mov qword ptr [rdi - 8], rdx;  ret ;  
0x432672: clc ;  ret ;  
0x432671: push rdi;  clc ;  ret ;  
0x432670: mov dword ptr [rdi - 8], edx;  ret ;  
0x43266f: mov qword ptr [rdi - 8], rdx;  ret ;  
0x43266e: mov qword ptr [rdi - 8], rdx;  ret ;  
0x4326b0: clc ;  ret ;  
0x4326af: push rdi;  clc ;  ret ;  
0x4326ae: mov dword ptr [rdi - 8], edx;  ret ;  
0x4326ad: mov qword ptr [rdi - 8], rdx;  ret ;  
0x4326ac: mov qword ptr [rdi - 8], rdx;  ret ;  
0x4326e8: clc ;  ret ;  
0x4326e7: push rdi;  clc ;  ret ;  
0x4326e6: mov dword ptr [rdi - 8], edx;  ret ;  
0x4326e5: mov qword ptr [rdi - 8], rdx;  ret ;  
0x4326e4: mov qword ptr [rdi - 8], rdx;  ret ;  
0x432710: clc ;  ret ;  
0x43270f: push rdi;  clc ;  ret ;  
0x43270e: mov dword ptr [rdi - 8], edx;  ret ;  
0x43270d: mov qword ptr [rdi - 8], rdx;  ret ;  
0x43270c: mov qword ptr [rdi - 8], rdx;  ret ;  
0x432738: clc ;  ret ;  
0x432737: push rdi;  clc ;  ret ;  
0x432736: mov dword ptr [rdi - 8], edx;  ret ;  
0x432735: mov qword ptr [rdi - 8], rdx;  ret ;  
0x432734: mov qword ptr [rdi - 8], rdx;  ret ;  
0x432750: clc ;  ret ;  
0x43274f: push rdi;  clc ;  ret ;  
0x43274e: mov dword ptr [rdi - 8], edx;  ret ;  
0x43274d: mov qword ptr [rdi - 8], rdx;  ret ;  
0x43274c: mov qword ptr [rdi - 8], rdx;  ret ;  
0x43276c: cld ;  ret ;  
0x43276b: cld ;  ret ;  
0x43276a: mov dword ptr [rdi - 4], ecx;  ret ;  
0x432769: cli ;  mov dword ptr [rdi - 4], ecx;  ret ;  
0x432768: push rdi;  cli ;  mov dword ptr [rdi - 4], ecx;  ret ;  
0x4327b4: clc ;  ret ;  
0x4327b3: push rdi;  clc ;  ret ;  
0x4327b2: mov dword ptr [rdi - 8], edx;  ret ;  
0x4327b1: mov qword ptr [rdi - 8], rdx;  ret ;  
0x4327b0: int1 ;  mov qword ptr [rdi - 8], rdx;  ret ;  
0x4327fc: clc ;  ret ;  
0x4327fb: push rdi;  clc ;  ret ;  
0x4327fa: mov dword ptr [rdi - 8], edx;  ret ;  
0x4327f9: mov qword ptr [rdi - 8], rdx;  ret ;  
0x4327f8: int1 ;  mov qword ptr [rdi - 8], rdx;  ret ;  
0x43283a: clc ;  ret ;  
0x432839: push rdi;  clc ;  ret ;  
0x432838: mov dword ptr [rdi - 8], edx;  ret ;  
0x432837: mov qword ptr [rdi - 8], rdx;  ret ;  
0x432836: int1 ;  mov qword ptr [rdi - 8], rdx;  ret ;  
0x432872: clc ;  ret ;  
0x432871: push rdi;  clc ;  ret ;  
0x432870: mov dword ptr [rdi - 8], edx;  ret ;  
0x43286f: mov qword ptr [rdi - 8], rdx;  ret ;  
0x43286e: int1 ;  mov qword ptr [rdi - 8], rdx;  ret ;  
0x4328b0: clc ;  ret ;  
0x4328af: push rdi;  clc ;  ret ;  
0x4328ae: mov dword ptr [rdi - 8], edx;  ret ;  
0x4328ad: mov qword ptr [rdi - 8], rdx;  ret ;  
0x4328ac: int1 ;  mov qword ptr [rdi - 8], rdx;  ret ;  
0x4328e8: clc ;  ret ;  
0x4328e7: push rdi;  clc ;  ret ;  
0x4328e6: mov dword ptr [rdi - 8], edx;  ret ;  
0x4328e5: mov qword ptr [rdi - 8], rdx;  ret ;  
0x4328e4: int1 ;  mov qword ptr [rdi - 8], rdx;  ret ;  
0x432910: clc ;  ret ;  
0x43290f: push rdi;  clc ;  ret ;  
0x43290e: mov dword ptr [rdi - 8], edx;  ret ;  
0x43290d: mov qword ptr [rdi - 8], rdx;  ret ;  
0x43290c: int1 ;  mov qword ptr [rdi - 8], rdx;  ret ;  
0x432938: clc ;  ret ;  
0x432937: push rdi;  clc ;  ret ;  
0x432936: mov dword ptr [rdi - 8], edx;  ret ;  
0x432935: mov qword ptr [rdi - 8], rdx;  ret ;  
0x432934: int1 ;  mov qword ptr [rdi - 8], rdx;  ret ;  
0x432950: clc ;  ret ;  
0x43294f: push rdi;  clc ;  ret ;  
0x43294e: mov dword ptr [rdi - 8], edx;  ret ;  
0x43294d: mov qword ptr [rdi - 8], rdx;  ret ;  
0x43294c: int1 ;  mov qword ptr [rdi - 8], rdx;  ret ;  
0x43296c: cld ;  ret ;  
0x43296b: cld ;  ret ;  
0x43296a: mov dword ptr [rdi - 4], ecx;  ret ;  
0x432969: stc ;  mov dword ptr [rdi - 4], ecx;  ret ;  
0x432968: push rdi;  stc ;  mov dword ptr [rdi - 4], ecx;  ret ;  
0x432db7: jp 0x432da9;  ret ;  
0x432db5: jp 0x432e36;  jp 0x432da9;  ret ;  
0x432db4: vmovdqu xmmword ptr [rdx - 0x10], xmm15;  ret ;  
0x432e1a: jp 0x432e0c;  ret ;  
0x432e17: vmovdqu xmmword ptr [rdx - 0x10], xmm7;  ret ;  
0x432e85: clc ;  ret ;  
0x432e82: mov dword ptr [rdi + rdx - 8], ecx;  ret ;  
0x432e81: mov qword ptr [rdi + rdx - 8], rcx;  ret ;  
0x432ea1: cld ;  ret ;  
0x432e9e: mov dword ptr [rdi + rdx - 4], ecx;  ret ;  
0x432eb4: mov dword ptr [rdi + rdx - 2], ecx;  ret ;  
0x432eb3: mov word ptr [rdi + rdx - 2], cx;  ret ;  
0x432ebd: mov byte ptr [rdi], cl;  ret ;  
0x432ebb: mov cl, byte ptr [rsi];  mov byte ptr [rdi], cl;  ret ;  
0x432f96: mov eax, eax;  ret ;  
0x432f95: mov rax, r8;  ret ;  
0x432fb8: movsb byte ptr [rdi], byte ptr [rsi];  ret ;  
0x432fb7: rep movsb byte ptr [rdi], byte ptr [rsi];  ret ;  
0x432fb6: sal ebx, 1;  movsb byte ptr [rdi], byte ptr [rsi];  ret ;  
0x432fb5: mov ecx, edx;  rep movsb byte ptr [rdi], byte ptr [rsi];  ret ;  
0x432fb4: mov rcx, rdx;  rep movsb byte ptr [rdi], byte ptr [rsi];  ret ;  
0x433081: vmovdqu xmmword ptr [rcx - 0x10], xmm12;  ret ;  
0x43311d: ret 0x7280;  
0x43314b: vmovdqu xmmword ptr [rax + 0x70], xmm12;  ret ;  
0x433150: ret ;  
0x4331c6: vmovdqu xmmword ptr [rax + 0x70], xmm12;  ret ;  
0x4346f3: ret ;  
0x434e3d: movq qword ptr [rdi - 0x10], mm0;  ret ;  
0x434e3c: movdqu xmmword ptr [rdi - 0x10], xmm0;  ret ;  
0x434ead: movq qword ptr [rdi - 0x10], mm1;  ret ;  
0x434eac: movdqu xmmword ptr [rdi - 0x10], xmm1;  ret ;  
0x434ed0: clc ;  ret ;  
0x434ecf: clc ;  ret ;  
0x434ece: mov dword ptr [rdi - 8], ecx;  ret ;  
0x434ecd: mov qword ptr [rdi - 8], rcx;  ret ;  
0x434ecc: int1 ;  mov qword ptr [rdi - 8], rcx;  ret ;  
0x434f3d: movq qword ptr [rdi - 0x10], mm1;  ret ;  
0x434f3c: movdqu xmmword ptr [rdi - 0x10], xmm1;  ret ;  
0x434f60: clc ;  ret ;  
0x434f5f: clc ;  ret ;  
0x434f5e: mov dword ptr [rdi - 8], ecx;  ret ;  
0x434f5d: mov qword ptr [rdi - 8], rcx;  ret ;  
0x434f5c: mov qword ptr [rdi - 8], rcx;  ret ;  
0x434fac: ret ;  
0x434fb1: ret ;  
0x434fb0: jg 0x434ff9;  ret ;  
0x434fcd: movq qword ptr [rdi - 0x10], mm1;  ret ;  
0x434fcc: movdqu xmmword ptr [rdi - 0x10], xmm1;  ret ;  
0x434ff0: clc ;  ret ;  
0x434fef: clc ;  ret ;  
0x434fee: mov dword ptr [rdi - 8], ecx;  ret ;  
0x434fed: mov qword ptr [rdi - 8], rcx;  ret ;  
0x434fec: mov qword ptr [rdi - 8], rcx;  ret ;  
0x43505d: movq qword ptr [rdi - 0x10], mm1;  ret ;  
0x43505c: movdqu xmmword ptr [rdi - 0x10], xmm1;  ret ;  
0x43507e: cld ;  ret ;  
0x43507d: cld ;  ret ;  
0x43507c: mov dword ptr [rdi - 4], ecx;  ret ;  
0x43507b: hlt ;  mov dword ptr [rdi - 4], ecx;  ret ;  
0x43507a: push rdi;  hlt ;  mov dword ptr [rdi - 4], ecx;  ret ;  
0x4350dd: movq qword ptr [rdi - 0x10], mm1;  ret ;  
0x4350dc: movdqu xmmword ptr [rdi - 0x10], xmm1;  ret ;  
0x4350fe: cld ;  ret ;  
0x4350fd: cld ;  ret ;  
0x4350fc: mov dword ptr [rdi - 4], ecx;  ret ;  
0x4350fb: cmc ;  mov dword ptr [rdi - 4], ecx;  ret ;  
0x4350fa: push rdi;  cmc ;  mov dword ptr [rdi - 4], ecx;  ret ;  
0x43515d: movq qword ptr [rdi - 0x10], mm1;  ret ;  
0x43515c: movdqu xmmword ptr [rdi - 0x10], xmm1;  ret ;  
0x43517e: cld ;  ret ;  
0x43517d: cld ;  ret ;  
0x43517c: mov dword ptr [rdi - 4], ecx;  ret ;  
0x4351dd: movq qword ptr [rdi - 0x10], mm1;  ret ;  
0x4351dc: movdqu xmmword ptr [rdi - 0x10], xmm1;  ret ;  
0x4351fe: cld ;  ret ;  
0x4351fd: cld ;  ret ;  
0x4351fc: mov dword ptr [rdi - 4], ecx;  ret ;  
0x43525d: movq qword ptr [rdi - 0x10], mm1;  ret ;  
0x43525c: movdqu xmmword ptr [rdi - 0x10], xmm1;  ret ;  
0x435278: clc ;  ret ;  
0x435277: push rdi;  clc ;  ret ;  
0x435276: mov dword ptr [rdi - 8], edx;  ret ;  
0x435275: mov qword ptr [rdi - 8], rdx;  ret ;  
0x435274: clc ;  mov qword ptr [rdi - 8], rdx;  ret ;  
0x4352dd: movq qword ptr [rdi - 0x10], mm1;  ret ;  
0x4352dc: movdqu xmmword ptr [rdi - 0x10], xmm1;  ret ;  
0x4352fc: cld ;  ret ;  
0x4352fb: cld ;  ret ;  
0x4352fa: mov dword ptr [rdi - 4], ecx;  ret ;  
0x4352f9: stc ;  mov dword ptr [rdi - 4], ecx;  ret ;  
0x4352f8: push rdi;  stc ;  mov dword ptr [rdi - 4], ecx;  ret ;  
0x43535d: movq qword ptr [rdi - 0x10], mm1;  ret ;  
0x43535c: movdqu xmmword ptr [rdi - 0x10], xmm1;  ret ;  
0x43537c: cld ;  ret ;  
0x43537b: cld ;  ret ;  
0x43537a: mov dword ptr [rdi - 4], ecx;  ret ;  
0x435379: cli ;  mov dword ptr [rdi - 4], ecx;  ret ;  
0x435378: push rdi;  cli ;  mov dword ptr [rdi - 4], ecx;  ret ;  
0x4353dd: movq qword ptr [rdi - 0x10], mm1;  ret ;  
0x4353dc: movdqu xmmword ptr [rdi - 0x10], xmm1;  ret ;  
0x4353fc: cld ;  ret ;  
0x4353fb: cld ;  ret ;  
0x4353fa: mov dword ptr [rdi - 4], ecx;  ret ;  
0x4353f9: sti ;  mov dword ptr [rdi - 4], ecx;  ret ;  
0x4353f8: push rdi;  sti ;  mov dword ptr [rdi - 4], ecx;  ret ;  
0x43545d: movq qword ptr [rdi - 0x10], mm1;  ret ;  
0x43545c: movdqu xmmword ptr [rdi - 0x10], xmm1;  ret ;  
0x435476: cld ;  ret ;  
0x435475: push rdi;  cld ;  ret ;  
0x435474: mov dword ptr [rdi - 4], edx;  ret ;  
0x435473: cld ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x435472: push rsi;  cld ;  mov dword ptr [rdi - 4], edx;  ret ;  
0x4354dd: movq qword ptr [rdi - 0x10], mm1;  ret ;  
0x4354dc: movdqu xmmword ptr [rdi - 0x10], xmm1;  ret ;  
0x4354fe: mov dword ptr [rdi - 2], ecx;  ret ;  
0x4354fd: mov word ptr [rdi - 2], cx;  ret ;  
0x4354fc: std ;  mov word ptr [rdi - 2], cx;  ret ;  
0x43556d: movq qword ptr [rdi - 0x10], mm1;  ret ;  
0x43556c: movdqu xmmword ptr [rdi - 0x10], xmm1;  ret ;  
0x435586: mov dword ptr [rdi - 2], edx;  ret ;  
0x435585: mov word ptr [rdi - 2], dx;  ret ;  
0x4355ed: movq qword ptr [rdi - 0x10], mm1;  ret ;  
0x4355ec: movdqu xmmword ptr [rdi - 0x10], xmm1;  ret ;  
0x435605: mov byte ptr [rdi - 1], dl;  ret ;  
0x43565d: jg 0x435666;  ret ;  
0x43565c: movq qword ptr [rdi], mm0;  ret ;  
0x43565b: movdqu xmmword ptr [rdi], xmm0;  ret ;  
0x4356b7: jg 0x4356c8;  ret ;  
0x4356b6: movq qword ptr [rdi], mm1;  ret ;  
0x4356b5: movdqu xmmword ptr [rdi], xmm1;  ret ;  
0x4356b4: psllq mm1, qword ptr [rdi];  jg 0x4356c8;  ret ;  
0x4356cd: mov dword ptr [rdi], ecx;  ret ;  
0x4356cc: mov qword ptr [rdi], rcx;  ret ;  
0x435727: jg 0x435738;  ret ;  
0x435726: movq qword ptr [rdi], mm1;  ret ;  
0x435725: movdqu xmmword ptr [rdi], xmm1;  ret ;  
0x43573d: mov dword ptr [rdi], ecx;  ret ;  
0x43573c: mov qword ptr [rdi], rcx;  ret ;  
0x435797: jg 0x4357a8;  ret ;  
0x435796: movq qword ptr [rdi], mm1;  ret ;  
0x435795: movdqu xmmword ptr [rdi], xmm1;  ret ;  
0x435794: or eax, 0xf7f0ff3;  ret ;  
0x4357ad: mov dword ptr [rdi], ecx;  ret ;  
0x4357ac: mov qword ptr [rdi], rcx;  ret ;  
0x435807: jg 0x435818;  ret ;  
0x435806: movq qword ptr [rdi], mm1;  ret ;  
0x435805: movdqu xmmword ptr [rdi], xmm1;  ret ;  
0x435804: or al, 0xf3;  movq qword ptr [rdi], mm1;  ret ;  
0x43581d: mov dword ptr [rdi], ecx;  ret ;  
0x43581c: mov qword ptr [rdi], rcx;  ret ;  
0x43581b: add al, 0x48;  mov dword ptr [rdi], ecx;  ret ;  
0x43581a: push rdi;  add al, 0x48;  mov dword ptr [rdi], ecx;  ret ;  
0x435877: jg 0x435888;  ret ;  
0x435876: movq qword ptr [rdi], mm1;  ret ;  
0x435875: movdqu xmmword ptr [rdi], xmm1;  ret ;  
0x435874: or esi, ebx;  movq qword ptr [rdi], mm1;  ret ;  
0x43588d: mov dword ptr [rdi], ecx;  ret ;  
0x43588c: mov qword ptr [rdi], rcx;  ret ;  
0x4358e7: jg 0x4358f8;  ret ;  
0x4358e6: movq qword ptr [rdi], mm1;  ret ;  
0x4358e5: movdqu xmmword ptr [rdi], xmm1;  ret ;  
0x4358e4: or dh, bl;  movq qword ptr [rdi], mm1;  ret ;  
0x4358fd: mov dword ptr [rdi], ecx;  ret ;  
0x4358fc: mov qword ptr [rdi], rcx;  ret ;  
0x435957: jg 0x435968;  ret ;  
0x435956: movq qword ptr [rdi], mm1;  ret ;  
0x435955: movdqu xmmword ptr [rdi], xmm1;  ret ;  
0x435954: or ebx, esi;  movq qword ptr [rdi], mm1;  ret ;  
0x43596d: mov dword ptr [rdi], ecx;  ret ;  
0x43596c: mov qword ptr [rdi], rcx;  ret ;  
0x4359c7: jg 0x4359d8;  ret ;  
0x4359c6: movq qword ptr [rdi], mm1;  ret ;  
0x4359c5: movdqu xmmword ptr [rdi], xmm1;  ret ;  
0x4359c4: or bl, dh;  movq qword ptr [rdi], mm1;  ret ;  
0x4359d5: mov dword ptr [rdi], edx;  ret ;  
0x4359d4: mov qword ptr [rdi], rdx;  ret ;  
0x4359d2: mov edx, dword ptr [rsi];  mov qword ptr [rdi], rdx;  ret ;  
0x435a37: jg 0x435a48;  ret ;  
0x435a36: movq qword ptr [rdi], mm1;  ret ;  
0x435a35: movdqu xmmword ptr [rdi], xmm1;  ret ;  
0x435a49: mov dword ptr [rdi], ecx;  ret ;  
0x435a46: mov dword ptr [rdi + 3], edx;  mov dword ptr [rdi], ecx;  ret ;  
0x435aa7: jg 0x435ab8;  ret ;  
0x435aa6: movq qword ptr [rdi], mm1;  ret ;  
0x435aa5: movdqu xmmword ptr [rdi], xmm1;  ret ;  
0x435ab9: mov dword ptr [rdi], ecx;  ret ;  
0x435ab6: mov dword ptr [rdi + 2], edx;  mov dword ptr [rdi], ecx;  ret ;  
0x435b17: jg 0x435b28;  ret ;  
0x435b16: movq qword ptr [rdi], mm1;  ret ;  
0x435b15: movdqu xmmword ptr [rdi], xmm1;  ret ;  
0x435b14: add eax, 0xf7f0ff3;  ret ;  
0x435b29: mov dword ptr [rdi], ecx;  ret ;  
0x435b26: mov dword ptr [rdi + 1], edx;  mov dword ptr [rdi], ecx;  ret ;  
0x435b87: jg 0x435b98;  ret ;  
0x435b86: movq qword ptr [rdi], mm1;  ret ;  
0x435b85: movdqu xmmword ptr [rdi], xmm1;  ret ;  
0x435b84: add al, 0xf3;  movq qword ptr [rdi], mm1;  ret ;  
0x435b93: mov dword ptr [rdi], edx;  ret ;  
0x435b91: mov edx, dword ptr [rsi];  mov dword ptr [rdi], edx;  ret ;  
0x435bf7: jg 0x435c08;  ret ;  
0x435bf6: movq qword ptr [rdi], mm1;  ret ;  
0x435bf5: movdqu xmmword ptr [rdi], xmm1;  ret ;  
0x435bf4: add esi, ebx;  movq qword ptr [rdi], mm1;  ret ;  
0x435c0d: mov dword ptr [rdi], ecx;  ret ;  
0x435c0c: mov word ptr [rdi], cx;  ret ;  
0x435c67: jg 0x435c78;  ret ;  
0x435c66: movq qword ptr [rdi], mm1;  ret ;  
0x435c65: movdqu xmmword ptr [rdi], xmm1;  ret ;  
0x435c64: add dh, bl;  movq qword ptr [rdi], mm1;  ret ;  
0x435c75: mov dword ptr [rdi], edx;  ret ;  
0x435c74: mov word ptr [rdi], dx;  ret ;  
0x435c72: mov bh, 0x16;  mov word ptr [rdi], dx;  ret ;  
0x435cd7: jg 0x435ce8;  ret ;  
0x435cd6: movq qword ptr [rdi], mm1;  ret ;  
0x435cd5: movdqu xmmword ptr [rdi], xmm1;  ret ;  
0x435cd4: add ebx, esi;  movq qword ptr [rdi], mm1;  ret ;  
0x435ce4: mov byte ptr [rdi], dl;  ret ;  
0x435ce2: mov dh, 0x16;  mov byte ptr [rdi], dl;  ret ;  
0x435ce1: movzx edx, byte ptr [rsi];  mov byte ptr [rdi], dl;  ret ;  
0x435d98: jns 0x435d99;  ret ;  
0x435d97: adc dword ptr [rcx - 1], edi;  ret ;  
0x435d96: adc qword ptr [rcx - 1], rdi;  ret ;  
0x435d95: jl 0x435ddf;  adc dword ptr [rcx - 1], edi;  ret ;  
0x435dd3: adc dword ptr [rcx - 1], ebx;  ret ;  
0x435dd2: adc qword ptr [rcx - 1], rbx;  ret ;  
0x435dd1: jl 0x435e1b;  adc dword ptr [rcx - 1], ebx;  ret ;  
0x435e44: clc ;  ret ;  
0x435e43: clc ;  ret ;  
0x435e42: mov dword ptr [rcx - 8], ecx;  ret ;  
0x435e41: mov qword ptr [r9 - 8], rcx;  ret ;  
0x435e55: cld ;  ret ;  
0x435e54: cld ;  ret ;  
0x435e53: mov dword ptr [rcx - 4], ecx;  ret ;  
0x435e52: mov dword ptr [r9 - 4], ecx;  ret ;  
0x435e68: mov dword ptr [rcx - 2], ecx;  ret ;  
0x435e67: mov dword ptr [r9 - 2], ecx;  ret ;  
0x435e66: mov word ptr [r9 - 2], cx;  ret ;  
0x435e73: mov byte ptr [rdi], cl;  ret ;  
0x435e71: mov cl, byte ptr [rsi];  mov byte ptr [rdi], cl;  ret ;  
0x435fd2: jns 0x435fd3;  ret ;  
0x435fd1: adc dword ptr [rcx - 1], edi;  ret ;  
0x435fd0: adc qword ptr [rcx - 1], rdi;  ret ;  
0x435fcf: jl 0x436019;  adc dword ptr [rcx - 1], edi;  ret ;  
0x436139: jns 0x436142;  ret ;  
0x436138: adc dword ptr [rcx + 7], edi;  ret ;  
0x436137: adc qword ptr [rcx + 7], rdi;  ret ;  
0x436136: jl 0x436180;  adc dword ptr [rcx + 7], edi;  ret ;  
0x43629c: clc ;  ret ;  
0x43629b: jg 0x436295;  ret ;  
0x43629a: adc dword ptr [rdi - 8], edi;  ret ;  
0x436299: adc qword ptr [rdi - 8], rdi;  ret ;  
0x436298: jl 0x4362e2;  adc dword ptr [rdi - 8], edi;  ret ;  
0x43856a: sub eax, ecx;  ret ;  
0x438568: add al, 0x82;  sub eax, ecx;  ret ;  
0x438567: mov eax, dword ptr [rdx + rax*4];  sub eax, ecx;  ret ;  
0x43856d: xor eax, eax;  ret ;  
0x43856c: ret ;  xor eax, eax;  ret ;  
0x43856b: enter 0x31c3, -0x40;  ret ;  
0x43856a: sub eax, ecx;  ret ;  xor eax, eax;  ret ;  
0x438584: sub eax, ecx;  ret ;  
0x438582: add al, 0x82;  sub eax, ecx;  ret ;  
0x438581: mov eax, dword ptr [rdx + rax*4];  sub eax, ecx;  ret ;  
0x4387a7: ror byte ptr [rdi], 0x85;  ret ;  
0x438818: xlatb ;  ret ;  
0x438815: fsub dword ptr [rsi + 0xf];  xlatb ;  ret ;  
0x439bc9: clc ;  ret ;  
0x439bc8: mov eax, edi;  ret ;  
0x439bc7: mov rax, rdi;  ret ;  
0x439bc6: add cl, byte ptr [rax - 0x77];  clc ;  ret ;  
0x439bc5: mov dword ptr [rdx], eax;  mov rax, rdi;  ret ;  
0x439c21: clc ;  ret ;  
0x439c20: mov eax, edi;  ret ;  
0x439c1f: mov rax, rdi;  ret ;  
0x439c1e: or byte ptr [rax - 0x77], cl;  clc ;  ret ;  
0x439c1d: or byte ptr [rax - 0x77], cl;  clc ;  ret ;  
0x439c37: clc ;  ret ;  
0x439c36: mov eax, edi;  ret ;  
0x439c35: mov rax, rdi;  ret ;  
0x439c34: add cl, byte ptr [rax - 0x77];  clc ;  ret ;  
0x439c33: mov byte ptr [rdx], al;  mov rax, rdi;  ret ;  
0x439c49: clc ;  ret ;  
0x439c48: mov eax, edi;  ret ;  
0x439c47: mov rax, rdi;  ret ;  
0x439c46: add cl, byte ptr [rax - 0x77];  clc ;  ret ;  
0x439c45: mov dword ptr [rdx], eax;  mov rax, rdi;  ret ;  
0x439c5f: clc ;  ret ;  
0x439c5e: mov eax, edi;  ret ;  
0x439c5d: mov rax, rdi;  ret ;  
0x439c5c: add cl, byte ptr [rax - 0x77];  clc ;  ret ;  
0x439c5b: add cl, byte ptr [rax - 0x77];  clc ;  ret ;  
0x439c67: clc ;  ret ;  
0x439c66: mov eax, edi;  ret ;  
0x439c65: mov rax, rdi;  ret ;  
0x439c64: add cl, byte ptr [rax - 0x77];  clc ;  ret ;  
0x439c63: mov dword ptr [rdx], eax;  mov rax, rdi;  ret ;  
0x439c7d: clc ;  ret ;  
0x439c7c: mov eax, edi;  ret ;  
0x439c7b: mov rax, rdi;  ret ;  
0x439c7a: add al, 0x48;  mov eax, edi;  ret ;  
0x439c79: add al, 0x48;  mov eax, edi;  ret ;  
0x439c8f: clc ;  ret ;  
0x439c8e: mov eax, edi;  ret ;  
0x439c8d: mov rax, rdi;  ret ;  
0x439c8c: add al, 0x48;  mov eax, edi;  ret ;  
0x439c8b: add al, 0x48;  mov eax, edi;  ret ;  
0x439c9d: clc ;  ret ;  
0x439c9c: mov eax, edi;  ret ;  
0x439c9b: mov rax, rdi;  ret ;  
0x439c9a: add ecx, dword ptr [rax - 0x77];  clc ;  ret ;  
0x439c99: add ecx, dword ptr [rax - 0x77];  clc ;  ret ;  
0x439caf: clc ;  ret ;  
0x439cae: mov eax, edi;  ret ;  
0x439cad: mov rax, rdi;  ret ;  
0x439cbf: clc ;  ret ;  
0x439cbe: mov eax, edi;  ret ;  
0x439cbd: mov rax, rdi;  ret ;  
0x439ccf: clc ;  ret ;  
0x439cce: mov eax, edi;  ret ;  
0x439ccd: mov rax, rdi;  ret ;  
0x439cdf: clc ;  ret ;  
0x439cde: mov eax, edi;  ret ;  
0x439cdd: mov rax, rdi;  ret ;  
0x439cdc: or byte ptr [rax - 0x77], cl;  clc ;  ret ;  
0x439cdb: or byte ptr [rax - 0x77], cl;  clc ;  ret ;  
0x439cf1: clc ;  ret ;  
0x439cf0: mov eax, edi;  ret ;  
0x439cef: mov rax, rdi;  ret ;  
0x439d11: clc ;  ret ;  
0x439d10: mov eax, edi;  ret ;  
0x439d0f: mov rax, rdi;  ret ;  
0x439d31: clc ;  ret ;  
0x439d30: mov eax, edi;  ret ;  
0x439d2f: mov rax, rdi;  ret ;  
0x439f57: ror byte ptr [rdi], 0x85;  ret ;  
0x439fc8: xlatb ;  ret ;  
0x439fc5: fsub dword ptr [rsi + 0xf];  xlatb ;  ret ;  
0x43b378: lea eax, [rdx + 7];  ret ;  
0x43b377: lea rax, [rdx + 7];  ret ;  
0x43b3d0: lea eax, [rdx + 0xf];  ret ;  
0x43b3cf: lea rax, [rdx + 0xf];  ret ;  
0x43b3e6: lea eax, [rdx];  ret ;  
0x43b3e5: lea rax, [rdx];  ret ;  
0x43b3e3: mov byte ptr [rdx], al;  lea rax, [rdx];  ret ;  
0x43b3f8: lea eax, [rdx + 1];  ret ;  
0x43b3f7: lea rax, [rdx + 1];  ret ;  
0x43b40e: lea eax, [rdx + 2];  ret ;  
0x43b40d: lea rax, [rdx + 2];  ret ;  
0x43b426: lea eax, [rdx + 3];  ret ;  
0x43b425: lea rax, [rdx + 3];  ret ;  
0x43b43c: lea eax, [rdx + 4];  ret ;  
0x43b43b: lea rax, [rdx + 4];  ret ;  
0x43b43a: add al, 0x48;  lea eax, [rdx + 4];  ret ;  
0x43b44e: lea eax, [rdx + 5];  ret ;  
0x43b44d: lea rax, [rdx + 5];  ret ;  
0x43b44c: add al, 0x48;  lea eax, [rdx + 5];  ret ;  
0x43b46c: lea eax, [rdx + 6];  ret ;  
0x43b46b: lea rax, [rdx + 6];  ret ;  
0x43b47e: lea eax, [rdx + 8];  ret ;  
0x43b47d: lea rax, [rdx + 8];  ret ;  
0x43b47c: add eax, 0x8428d48;  ret ;  
0x43b49e: lea eax, [rdx + 9];  ret ;  
0x43b49d: lea rax, [rdx + 9];  ret ;  
0x43b4be: lea eax, [rdx + 0xa];  ret ;  
0x43b4bd: lea rax, [rdx + 0xa];  ret ;  
0x43b4de: lea eax, [rdx + 0xb];  ret ;  
0x43b4dd: lea rax, [rdx + 0xb];  ret ;  
0x43b500: lea eax, [rdx + 0xc];  ret ;  
0x43b4ff: lea rax, [rdx + 0xc];  ret ;  
0x43b4fe: add eax, 0xc428d48;  ret ;  
0x43b520: lea eax, [rdx + 0xd];  ret ;  
0x43b51f: lea rax, [rdx + 0xd];  ret ;  
0x43b540: lea eax, [rdx + 0xe];  ret ;  
0x43b53f: lea rax, [rdx + 0xe];  ret ;  
0x43b8b1: mov byte ptr [rdi], dh;  ret ;  
0x43b8af: add byte ptr [rax], al;  mov byte ptr [rdi], dh;  ret ;  
0x43b8c5: mov dword ptr [rdi], edx;  ret ;  
0x43b8c4: mov word ptr [rdi], dx;  ret ;  
0x43b8c2: mov edx, dword ptr [rsi];  mov word ptr [rdi], dx;  ret ;  
0x43b8d8: ja 0x43b8dc;  ret ;  
0x43b8d7: mov byte ptr [rdi + 2], dh;  ret ;  
0x43b8d5: mov dword ptr [rdi], ecx;  mov byte ptr [rdi + 2], dh;  ret ;  
0x43b8e3: mov dword ptr [rdi], edx;  ret ;  
0x43b8e1: mov edx, dword ptr [rsi];  mov dword ptr [rdi], edx;  ret ;  
0x43b8f6: mov dword ptr [rdi], ecx;  ret ;  
0x43b8f4: ja 0x43b8fa;  mov dword ptr [rdi], ecx;  ret ;  
0x43b8f3: mov byte ptr [rdi + 4], dh;  mov dword ptr [rdi], ecx;  ret ;  
0x43b90a: mov dword ptr [rdi + 4], edx;  ret ;  
0x43b909: mov word ptr [rdi + 4], dx;  ret ;  
0x43b918: mov dword ptr [rdi + 3], edx;  ret ;  
0x43b916: mov dword ptr [rdi], ecx;  mov dword ptr [rdi + 3], edx;  ret ;  
0x43b925: mov dword ptr [rdi], edx;  ret ;  
0x43b924: mov qword ptr [rdi], rdx;  ret ;  
0x43b922: mov edx, dword ptr [rsi];  mov qword ptr [rdi], rdx;  ret ;  
0x43b938: mov dword ptr [rdi], ecx;  ret ;  
0x43b937: mov qword ptr [rdi], rcx;  ret ;  
0x43b935: ja 0x43b93f;  mov qword ptr [rdi], rcx;  ret ;  
0x43b94c: mov dword ptr [rdi + 8], edx;  ret ;  
0x43b94b: mov word ptr [rdi + 8], dx;  ret ;  
0x43b95a: mov dword ptr [rdi + 7], edx;  ret ;  
0x43b958: mov dword ptr [rdi], ecx;  mov dword ptr [rdi + 7], edx;  ret ;  
0x43b96a: mov dword ptr [rdi + 8], edx;  ret ;  
0x43b968: mov dword ptr [rdi], ecx;  mov dword ptr [rdi + 8], edx;  ret ;  
0x43b97c: mov dword ptr [rdi + 5], edx;  ret ;  
0x43b97b: mov qword ptr [rdi + 5], rdx;  ret ;  
0x43b98c: mov dword ptr [rdi + 6], edx;  ret ;  
0x43b98b: mov qword ptr [rdi + 6], rdx;  ret ;  
0x43b99c: mov dword ptr [rdi + 7], edx;  ret ;  
0x43b99b: mov qword ptr [rdi + 7], rdx;  ret ;  
0x43b9a7: jg 0x43b9b0;  ret ;  
0x43b9a6: movq qword ptr [rdi], mm0;  ret ;  
0x43b9a5: movdqu xmmword ptr [rdi], xmm0;  ret ;  
0x43b9ba: ja 0x43b9cc;  ret ;  
0x43b9b9: mov byte ptr [rdi + 0x10], dh;  ret ;  
0x43b9b7: jg 0x43b9c0;  mov byte ptr [rdi + 0x10], dh;  ret ;  
0x43b9ce: mov dword ptr [rdi + 0x10], ecx;  ret ;  
0x43b9cd: mov word ptr [rdi + 0x10], cx;  ret ;  
0x43b9ec: mov dword ptr [rdi + 0xf], ecx;  ret ;  
0x43b9ea: jg 0x43b9f3;  mov dword ptr [rdi + 0xf], ecx;  ret ;  
0x43b9fc: mov dword ptr [rdi + 0x10], ecx;  ret ;  
0x43b9fa: jg 0x43ba03;  mov dword ptr [rdi + 0x10], ecx;  ret ;  
0x43ba10: ja 0x43ba26;  ret ;  
0x43ba0f: mov byte ptr [rdi + 0x14], dh;  ret ;  
0x43ba2e: mov dword ptr [rdi + 0xe], ecx;  ret ;  
0x43ba2d: mov qword ptr [rdi + 0xe], rcx;  ret ;  
0x43ba4e: mov dword ptr [rdi + 0xf], ecx;  ret ;  
0x43ba4d: mov qword ptr [rdi + 0xf], rcx;  ret ;  
0x43ba6e: mov dword ptr [rdi + 0x10], ecx;  ret ;  
0x43ba6d: mov qword ptr [rdi + 0x10], rcx;  ret ;  
0x43ba92: ja 0x43baac;  ret ;  
0x43ba91: mov byte ptr [rdi + 0x18], dh;  ret ;  
0x43bab6: mov dword ptr [rdi + 0x18], ecx;  ret ;  
0x43bab5: mov word ptr [rdi + 0x18], cx;  ret ;  
0x43bad4: mov dword ptr [rdi + 0x17], ecx;  ret ;  
0x43baf4: mov dword ptr [rdi + 0x18], ecx;  ret ;  
0x43bb0f: movq qword ptr [rdi + 0xd], mm2;  ret ;  
0x43bb0e: movdqu xmmword ptr [rdi + 0xd], xmm2;  ret ;  
0x43bb2f: movq qword ptr [rdi + 0xe], mm2;  ret ;  
0x43bb2e: movdqu xmmword ptr [rdi + 0xe], xmm2;  ret ;  
0x43bb4f: movq qword ptr [rdi + 0xf], mm2;  ret ;  
0x43bb4e: movdqu xmmword ptr [rdi + 0xf], xmm2;  ret ;  
0x43bb6f: movq qword ptr [rdi + 0x10], mm2;  ret ;  
0x43bb6e: movdqu xmmword ptr [rdi + 0x10], xmm2;  ret ;  
0x43bed4: lea eax, [rdi];  ret ;  
0x43bed3: lea rax, [rdi];  ret ;  
0x43bed1: mov byte ptr [rdi], dh;  lea rax, [rdi];  ret ;  
0x43bee8: lea eax, [rdi + 1];  ret ;  
0x43bee7: lea rax, [rdi + 1];  ret ;  
0x43befb: lea eax, [rdi + 2];  ret ;  
0x43befa: lea rax, [rdi + 2];  ret ;  
0x43bf06: lea eax, [rdi + 3];  ret ;  
0x43bf05: lea rax, [rdi + 3];  ret ;  
0x43bf19: lea eax, [rdi + 4];  ret ;  
0x43bf18: lea rax, [rdi + 4];  ret ;  
0x43bf2e: lea eax, [rdi + 5];  ret ;  
0x43bf2d: lea rax, [rdi + 5];  ret ;  
0x43bf2c: add al, 0x48;  lea eax, [rdi + 5];  ret ;  
0x43bf4c: lea eax, [rdi + 6];  ret ;  
0x43bf4b: lea rax, [rdi + 6];  ret ;  
0x43bf58: lea eax, [rdi + 7];  ret ;  
0x43bf57: lea rax, [rdi + 7];  ret ;  
0x43bf6b: lea eax, [rdi + 8];  ret ;  
0x43bf6a: lea rax, [rdi + 8];  ret ;  
0x43bf80: lea eax, [rdi + 9];  ret ;  
0x43bf7f: lea rax, [rdi + 9];  ret ;  
0x43bf9e: lea eax, [rdi + 0xa];  ret ;  
0x43bf9d: lea rax, [rdi + 0xa];  ret ;  
0x43bfbe: lea eax, [rdi + 0xb];  ret ;  
0x43bfbd: lea rax, [rdi + 0xb];  ret ;  
0x43bfe0: lea eax, [rdi + 0xc];  ret ;  
0x43bfdf: lea rax, [rdi + 0xc];  ret ;  
0x43bfde: add eax, 0xc478d48;  ret ;  
0x43c000: lea eax, [rdi + 0xd];  ret ;  
0x43bfff: lea rax, [rdi + 0xd];  ret ;  
0x43c020: lea eax, [rdi + 0xe];  ret ;  
0x43c01f: lea rax, [rdi + 0xe];  ret ;  
0x43c03a: lea eax, [rdi + 0xf];  ret ;  
0x43c039: lea rax, [rdi + 0xf];  ret ;  
0x43c04d: lea eax, [rdi + 0x10];  ret ;  
0x43c04c: lea rax, [rdi + 0x10];  ret ;  
0x43c062: lea eax, [rdi + 0x11];  ret ;  
0x43c061: lea rax, [rdi + 0x11];  ret ;  
0x43c080: lea eax, [rdi + 0x12];  ret ;  
0x43c07f: lea rax, [rdi + 0x12];  ret ;  
0x43c0a0: lea eax, [rdi + 0x13];  ret ;  
0x43c09f: lea rax, [rdi + 0x13];  ret ;  
0x43c0c3: lea eax, [rdi + 0x14];  ret ;  
0x43c0c2: lea rax, [rdi + 0x14];  ret ;  
0x43c0c1: adc al, 0x48;  lea eax, [rdi + 0x14];  ret ;  
0x43c0e2: lea eax, [rdi + 0x15];  ret ;  
0x43c0e1: lea rax, [rdi + 0x15];  ret ;  
0x43c102: lea eax, [rdi + 0x16];  ret ;  
0x43c101: lea rax, [rdi + 0x16];  ret ;  
0x43c122: lea eax, [rdi + 0x17];  ret ;  
0x43c121: lea rax, [rdi + 0x17];  ret ;  
0x43c145: lea eax, [rdi + 0x18];  ret ;  
0x43c144: lea rax, [rdi + 0x18];  ret ;  
0x43c16a: lea eax, [rdi + 0x19];  ret ;  
0x43c169: lea rax, [rdi + 0x19];  ret ;  
0x43c188: lea eax, [rdi + 0x1a];  ret ;  
0x43c187: lea rax, [rdi + 0x1a];  ret ;  
0x43c1a8: lea eax, [rdi + 0x1b];  ret ;  
0x43c1a7: lea rax, [rdi + 0x1b];  ret ;  
0x43c1c4: lea eax, [rdi + 0x1c];  ret ;  
0x43c1c3: lea rax, [rdi + 0x1c];  ret ;  
0x43c1c2: or eax, 0x1c478d48;  ret ;  
0x43c1e4: lea eax, [rdi + 0x1d];  ret ;  
0x43c1e3: lea rax, [rdi + 0x1d];  ret ;  
0x43c204: lea eax, [rdi + 0x1e];  ret ;  
0x43c203: lea rax, [rdi + 0x1e];  ret ;  
0x43c224: lea eax, [rdi + 0x1f];  ret ;  
0x43c223: lea rax, [rdi + 0x1f];  ret ;  
0x43c2b2: xor eax, eax;  ret ;  
0x43c2b1: xor rax, rax;  ret ;  
0x43c2af: add byte ptr [rax], al;  xor rax, rax;  ret ;  
0x43c2fb: lea eax, [rdi + 7];  ret ;  
0x43c2fa: lea rax, [rdi + 7];  ret ;  
0x43c2f9: mov bh, 0x48;  lea eax, [rdi + 7];  ret ;  
0x43c329: lea eax, [rdi + 3];  ret ;  
0x43c328: lea rax, [rdi + 3];  ret ;  
0x43c382: lea eax, [rdi + 0xf];  ret ;  
0x43c381: lea rax, [rdi + 0xf];  ret ;  
0x43c3c8: lea eax, [rdi + 0xb];  ret ;  
0x43c3c7: lea rax, [rdi + 0xb];  ret ;  
0x43c40e: lea eax, [rdi + 7];  ret ;  
0x43c40d: lea rax, [rdi + 7];  ret ;  
0x43c461: lea eax, [rdi + 0xf];  ret ;  
0x43c460: lea rax, [rdi + 0xf];  ret ;  
0x43c472: lea eax, [rdi];  ret ;  
0x43c471: lea rax, [rdi];  ret ;  
0x43c46f: add byte ptr [rax], al;  lea rax, [rdi];  ret ;  
0x43c482: lea eax, [rdi + 1];  ret ;  
0x43c481: lea rax, [rdi + 1];  ret ;  
0x43c492: lea eax, [rdi + 2];  ret ;  
0x43c491: lea rax, [rdi + 2];  ret ;  
0x43c4a2: lea eax, [rdi + 3];  ret ;  
0x43c4a1: lea rax, [rdi + 3];  ret ;  
0x43c4b2: lea eax, [rdi + 4];  ret ;  
0x43c4b1: lea rax, [rdi + 4];  ret ;  
0x43c4c2: lea eax, [rdi + 5];  ret ;  
0x43c4c1: lea rax, [rdi + 5];  ret ;  
0x43c4d2: lea eax, [rdi + 6];  ret ;  
0x43c4d1: lea rax, [rdi + 6];  ret ;  
0x43c4e2: lea eax, [rdi + 8];  ret ;  
0x43c4e1: lea rax, [rdi + 8];  ret ;  
0x43c4f2: lea eax, [rdi + 9];  ret ;  
0x43c4f1: lea rax, [rdi + 9];  ret ;  
0x43c502: lea eax, [rdi + 0xa];  ret ;  
0x43c501: lea rax, [rdi + 0xa];  ret ;  
0x43c512: lea eax, [rdi + 0xb];  ret ;  
0x43c511: lea rax, [rdi + 0xb];  ret ;  
0x43c522: lea eax, [rdi + 0xc];  ret ;  
0x43c521: lea rax, [rdi + 0xc];  ret ;  
0x43c532: lea eax, [rdi + 0xd];  ret ;  
0x43c531: lea rax, [rdi + 0xd];  ret ;  
0x43c542: lea eax, [rdi + 0xe];  ret ;  
0x43c541: lea rax, [rdi + 0xe];  ret ;  
0x43d736: ret 0x7501;  
0x43d73b: ret 0x7502;  
0x43d740: ret 0x7504;  
0x43d760: sub eax, edx;  ret ;  
0x43d779: sub eax, edx;  ret ;  
0x43d789: sub eax, edx;  ret ;  
0x43d788: int1 ;  sub eax, edx;  ret ;  
0x43d787: push rsi;  int1 ;  sub eax, edx;  ret ;  
0x43d786: mov dh, 0x56;  int1 ;  sub eax, edx;  ret ;  
0x43d799: sub eax, edx;  ret ;  
0x43d798: sub eax, edx;  ret ;  
0x43d797: push rsi;  sub eax, edx;  ret ;  
0x43d796: mov dh, 0x56;  sub eax, edx;  ret ;  
0x43d7a9: sub eax, edx;  ret ;  
0x43d7a8: sub eax, edx;  ret ;  
0x43d7a7: push rsi;  sub eax, edx;  ret ;  
0x43d7a6: mov dh, 0x56;  sub eax, edx;  ret ;  
0x43d7b9: sub eax, edx;  ret ;  
0x43d7b8: hlt ;  sub eax, edx;  ret ;  
0x43d7b7: push rsi;  hlt ;  sub eax, edx;  ret ;  
0x43d7b6: mov dh, 0x56;  hlt ;  sub eax, edx;  ret ;  
0x43d7c9: sub eax, edx;  ret ;  
0x43d7c8: cmc ;  sub eax, edx;  ret ;  
0x43d7c7: push rsi;  cmc ;  sub eax, edx;  ret ;  
0x43d7c6: mov dh, 0x56;  cmc ;  sub eax, edx;  ret ;  
0x43d7d9: sub eax, edx;  ret ;  
0x43d814: sub eax, edx;  ret ;  
0x43da8b: xor eax, eax;  ret ;  
0x43da89: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x43db38: xor eax, eax;  ret ;  
0x43db36: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x43dbf3: xor eax, eax;  ret ;  
0x43dbf1: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x43dc8c: xor eax, eax;  ret ;  
0x43dc8a: jne 0x43dca6;  xor eax, eax;  ret ;  
0x43dc89: push qword ptr [rbp + 0x1a];  xor eax, eax;  ret ;  
0x43dca9: fdivr st(7);  ret ;  
0x43dca8: sbb eax, -1;  ret ;  
0x43dca6: sbb eax, eax;  sbb eax, -1;  ret ;  
0x43dcb1: xor eax, eax;  ret ;  
0x43dcaf: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x43dcae: add byte ptr [rax], r8b;  xor eax, eax;  ret ;  
0x43dd4c: shl dword ptr [rsi + 0xf], 0xda;  ret ;  
0x43ddb3: in eax, dx;  ret ;  
0x43ddb2: jne 0x43dda1;  ret ;  
0x43ddb1: leave ;  jne 0x43dda1;  ret ;  
0x43ddb0: test cl, cl;  jne 0x43dda1;  ret ;  
0x43ddb5: xor eax, eax;  ret ;  
0x43ddb4: ret ;  xor eax, eax;  ret ;  
0x43ddb3: in eax, dx;  ret ;  xor eax, eax;  ret ;  
0x43ddb2: jne 0x43dda1;  ret ;  xor eax, eax;  ret ;  
0x43de10: shl dword ptr [rsi + 0xf], 0xda;  ret ;  
0x43de63: in eax, dx;  ret ;  
0x43de62: jne 0x43de51;  ret ;  
0x43de61: leave ;  jne 0x43de51;  ret ;  
0x43de60: test cl, cl;  jne 0x43de51;  ret ;  
0x43de65: xor eax, eax;  ret ;  
0x43de64: ret ;  xor eax, eax;  ret ;  
0x43de63: in eax, dx;  ret ;  xor eax, eax;  ret ;  
0x43de62: jne 0x43de51;  ret ;  xor eax, eax;  ret ;  
0x43de6a: clc ;  ret ;  
0x43de69: mov eax, edi;  ret ;  
0x43de68: mov rax, rdi;  ret ;  
0x43de67: ret ;  mov rax, rdi;  ret ;  
0x43de66: rol bl, 0x48;  mov eax, edi;  ret ;  
0x43de9d: outsd dx, dword ptr [rsi];  ret ;  
0x43dfd5: lea eax, [rcx - 1];  ret ;  
0x43dfd4: lea rax, [rcx - 1];  ret ;  
0x43dfd3: in eax, dx;  lea rax, [rcx - 1];  ret ;  
0x43dfe0: add byte ptr [rcx + 1], cl;  ret ;  
0x43dfde: add byte ptr [rax], al;  add byte ptr [rcx + 1], cl;  ret ;  
0x43e028: outsd dx, dword ptr [rsi];  ret ;  
0x43e125: sub eax, 1;  ret ;  
0x43e124: sub rax, 1;  ret ;  
0x43e123: in eax, dx;  sub rax, 1;  ret ;  
0x43e141: ret ;  
0x43e140: nop ;  ret ;  
0x43e13f: nop ;  ret ;  
0x43e13e: jmp qword ptr [rsi - 0x70];  ret ;  
0x43e151: xor eax, eax;  ret ;  
0x43e14f: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x43e1db: vmovdqu xmmword ptr [rsi - 0x10], xmm0;  ret ;  
0x43e208: vmovdqu xmmword ptr [rsi - 0x10], xmm0;  ret ;  
0x43e224: vmovdqu xmmword ptr [rsi - 0x10], xmm0;  ret ;  
0x43e235: vmovdqu xmmword ptr [rsi - 0x10], xmm0;  ret ;  
0x43e24e: clc ;  ret ;  
0x43e24d: clc ;  ret ;  
0x43e24a: vmovq qword ptr [rsi - 8], xmm0;  ret ;  
0x43e25e: cld ;  ret ;  
0x43e25d: cld ;  ret ;  
0x43e25c: mov dword ptr [rsi - 4], ecx;  ret ;  
0x43e25a: mov dword ptr [rdi], ecx;  mov dword ptr [rsi - 4], ecx;  ret ;  
0x43e26a: mov dword ptr [rsi - 2], ecx;  ret ;  
0x43e269: mov word ptr [rsi - 2], cx;  ret ;  
0x43e276: mov byte ptr [rdi], cl;  ret ;  
0x43e274: jb 0x43e278;  mov byte ptr [rdi], cl;  ret ;  
0x43e273: add dword ptr [rdx + 2], esi;  mov byte ptr [rdi], cl;  ret ;  
0x43e2da: vzeroupper ;  ret ;  
0x43e2d8: sub eax, edx;  vzeroupper ;  ret ;  
0x43e2f1: vzeroupper ;  ret ;  
0x43e2ef: sub eax, edx;  vzeroupper ;  ret ;  
0x43e36f: adc dword ptr [rsi - 1], edx;  ret ;  
0x43e36e: adc qword ptr [rsi - 1], rdx;  ret ;  
0x43e36d: jl 0x43e3b7;  adc dword ptr [rsi - 1], edx;  ret ;  
0x43e390: adc dword ptr [rsi - 1], edx;  ret ;  
0x43e38f: adc qword ptr [rsi - 1], rdx;  ret ;  
0x43e38e: jl 0x43e3d8;  adc dword ptr [rsi - 1], edx;  ret ;  
0x43e3a3: adc dword ptr [rsi - 1], edx;  ret ;  
0x43e3a2: adc qword ptr [rsi - 1], rdx;  ret ;  
0x43e3a1: jl 0x43e3eb;  adc dword ptr [rsi - 1], edx;  ret ;  
0x43e3b0: vmovdqu ymmword ptr [rsi - 0x20], ymm2;  ret ;  
0x43e3ba: vmovdqu xmmword ptr [rsi - 0x10], xmm0;  ret ;  
0x43e3cd: clc ;  ret ;  
0x43e3cc: clc ;  ret ;  
0x43e3c9: vmovq qword ptr [rsi - 8], xmm0;  ret ;  
0x43e3dc: cld ;  ret ;  
0x43e3db: cld ;  ret ;  
0x43e3da: mov dword ptr [rsi - 4], ecx;  ret ;  
0x43e3d8: mov dword ptr [rdi], ecx;  mov dword ptr [rsi - 4], ecx;  ret ;  
0x43e3e7: mov dword ptr [rsi - 2], ecx;  ret ;  
0x43e3e6: mov word ptr [rsi - 2], cx;  ret ;  
0x43e3f0: mov byte ptr [rdi], cl;  ret ;  
0x43e3ee: jb 0x43e3f2;  mov byte ptr [rdi], cl;  ret ;  
0x43e3ed: add dword ptr [rdx + 2], esi;  mov byte ptr [rdi], cl;  ret ;  
0x43e478: adc dword ptr [rsi - 1], edx;  ret ;  
0x43e477: adc qword ptr [rsi - 1], rdx;  ret ;  
0x43e476: jl 0x43e4c0;  adc dword ptr [rsi - 1], edx;  ret ;  
0x43e4d0: adc dword ptr [rsi + 3], edx;  ret ;  
0x43e4cf: adc qword ptr [rsi + 3], rdx;  ret ;  
0x43e4ce: jl 0x43e518;  adc dword ptr [rsi + 3], edx;  ret ;  
0x43e56d: adc dword ptr [rsi + 7], edx;  ret ;  
0x43e56c: adc qword ptr [rsi + 7], rdx;  ret ;  
0x43e56b: jl 0x43e5b5;  adc dword ptr [rsi + 7], edx;  ret ;  
0x43e66d: pop rbp;  ret ;  
0x43e66c: pop r13;  ret ;  
0x43e66b: pop rsp;  pop r13;  ret ;  
0x43e66a: pop r12;  pop r13;  ret ;  
0x43e669: pop rbp;  pop r12;  pop r13;  ret ;  
0x43e78d: pop rbp;  ret ;  
0x43e78c: pop r13;  ret ;  
0x43e78b: pop rsp;  pop r13;  ret ;  
0x43e78a: pop r12;  pop r13;  ret ;  
0x43e789: pop rbp;  pop r12;  pop r13;  ret ;  
0x43e78f: xor eax, eax;  ret ;  
0x43e78e: ret ;  xor eax, eax;  ret ;  
0x43e78d: pop rbp;  ret ;  xor eax, eax;  ret ;  
0x43e78c: pop r13;  ret ;  xor eax, eax;  ret ;  
0x43e7be: pop rbp;  ret ;  
0x43e7bd: pop r13;  ret ;  
0x43e7bc: pop rsp;  pop r13;  ret ;  
0x43e7bb: pop r12;  pop r13;  ret ;  
0x43e7ba: pop rbp;  pop r12;  pop r13;  ret ;  
0x43e7d7: ret 0xaf0f;  
0x43e937: pop rdi;  ret ;  
0x43e936: pop r15;  ret ;  
0x43e935: pop rsi;  pop r15;  ret ;  
0x43e934: pop r14;  pop r15;  ret ;  
0x43e933: pop rbp;  pop r14;  pop r15;  ret ;  
0x43e941: xor eax, eax;  ret ;  
0x43e93f: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x43e958: pop rdi;  ret ;  
0x43e957: pop r15;  ret ;  
0x43e956: pop rsi;  pop r15;  ret ;  
0x43e955: pop r14;  pop r15;  ret ;  
0x43e954: pop rbp;  pop r14;  pop r15;  ret ;  
0x43e9b3: pop rbx;  ret ;  
0x43e9b1: xor eax, eax;  pop rbx;  ret ;  
0x43e9af: add byte ptr [rax], al;  xor eax, eax;  pop rbx;  ret ;  
0x43e9cb: pop rbx;  ret ;  
0x43e9c9: mov dh, 0xc1;  pop rbx;  ret ;  
0x43e9c8: movzx eax, cl;  pop rbx;  ret ;  
0x43e9c7: jmp 0x43e9d8;  mov dh, 0xc1;  pop rbx;  ret ;  
0x43e9e2: pop rbx;  ret ;  
0x43e9e0: inc dword ptr [rbx];  pop rbx;  ret ;  
0x43e9df: cld ;  inc dword ptr [rbx];  pop rbx;  ret ;  
0x43e9de: add ah, bh;  inc dword ptr [rbx];  pop rbx;  ret ;  
0x43e9f3: pop rbx;  ret ;  
0x43e9f2: ret 0xc35b;  
0x43e9f1: mov dh, 0xc2;  pop rbx;  ret ;  
0x43e9f0: movzx eax, dl;  pop rbx;  ret ;  
0x43e9ef: ret ;  movzx eax, dl;  pop rbx;  ret ;  
0x43ea03: pop rbx;  ret ;  
0x43ea01: add eax, dword ptr [rax];  pop rbx;  ret ;  
0x43ea00: cld ;  add eax, dword ptr [rax];  pop rbx;  ret ;  
0x43e9ff: add ah, bh;  add eax, dword ptr [rax];  pop rbx;  ret ;  
0x43ea21: add eax, dword ptr [rax];  ret ;  
0x43ea20: cld ;  add eax, dword ptr [rax];  ret ;  
0x43ea1f: add ah, bh;  add eax, dword ptr [rax];  ret ;  
0x43ea1e: and eax, 0x3fc00;  ret ;  
0x43ea51: and eax, 0x7ff80000;  ret ;  
0x43ea75: pop rbx;  ret ;  
0x43ea73: add byte ptr [rax], al;  pop rbx;  ret ;  
0x43ea71: or byte ptr [rax], al;  add byte ptr [rax], al;  pop rbx;  ret ;  
0x43ea7c: pop rbx;  ret ;  
0x43ea7a: add byte ptr [rax], al;  pop rbx;  ret ;  
0x43ea83: pop rbx;  ret ;  
0x43ea81: add byte ptr [rax], al;  pop rbx;  ret ;  
0x43ea8a: pop rbx;  ret ;  
0x43ea88: add byte ptr [rax], al;  pop rbx;  ret ;  
0x43ea91: pop rbx;  ret ;  
0x43ea8f: add byte ptr [rax], al;  pop rbx;  ret ;  
0x43ea8d: xor byte ptr [rax], al;  add byte ptr [rax], al;  pop rbx;  ret ;  
0x43ea98: pop rbx;  ret ;  
0x43ea96: add byte ptr [rax], al;  pop rbx;  ret ;  
0x43ea94: and byte ptr [rax], al;  add byte ptr [rax], al;  pop rbx;  ret ;  
0x43ea9f: pop rbx;  ret ;  
0x43ea9d: add byte ptr [rax], al;  pop rbx;  ret ;  
0x43ea9b: adc byte ptr [rax], al;  add byte ptr [rax], al;  pop rbx;  ret ;  
0x43eab5: mov eax, eax;  ret ;  
0x43eab4: pop rbx;  mov eax, eax;  ret ;  
0x43eab3: int1 ;  pop rbx;  mov eax, eax;  ret ;  
0x43eab2: div ecx;  pop rbx;  mov eax, eax;  ret ;  
0x43eabb: pop rbx;  ret ;  
0x43eab9: mov eax, edx;  pop rbx;  ret ;  
0x43eab8: mov rax, rdx;  pop rbx;  ret ;  
0x43eab7: ret ;  mov rax, rdx;  pop rbx;  ret ;  
0x43eace: mov eax, eax;  ret ;  
0x43eacd: pop rbx;  mov eax, eax;  ret ;  
0x43eacc: int1 ;  pop rbx;  mov eax, eax;  ret ;  
0x43eacb: div ecx;  pop rbx;  mov eax, eax;  ret ;  
0x43eb01: xor eax, eax;  ret ;  
0x43eaff: je 0x43eb09;  xor eax, eax;  ret ;  
0x43eb50: ret ;  
0x43eb4f: loope 0x43eb44;  ret ;  
0x43eb4e: je 0x43eb31;  ret ;  
0x43eb4d: mov dh, byte ptr [rcx - 0xd];  ret ;  
0x43eb4c: add al, 0x8a;  je 0x43eb31;  ret ;  
0x43eb59: xor eax, eax;  ret ;  
0x43eb57: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x43ebb1: pop rbx;  ret ;  
0x43ebad: nop dword ptr [rax];  pop rbx;  ret ;  
0x43ebf7: pop rbx;  ret ;  
0x43ebf5: xor eax, eax;  pop rbx;  ret ;  
0x43ec0d: pop rbx;  ret ;  
0x43ec0a: add esp, 0x10;  pop rbx;  ret ;  
0x43ec09: add rsp, 0x10;  pop rbx;  ret ;  
0x43ec17: pop rbx;  ret ;  
0x43ec15: xor eax, eax;  pop rbx;  ret ;  
0x43ec63: pop rbp;  ret ;  
0x43ec62: pop rbp;  pop rbp;  ret ;  
0x43ec61: pop r13;  pop rbp;  ret ;  
0x43ec60: pop rsp;  pop r13;  pop rbp;  ret ;  
0x43ec5f: pop r12;  pop r13;  pop rbp;  ret ;  
0x43eecc: pop rbp;  ret ;  
0x43eecb: pop rbx;  pop rbp;  ret ;  
0x43eeca: or byte ptr [rbx + 0x5d], bl;  ret ;  
0x43eec8: add esp, 8;  pop rbx;  pop rbp;  ret ;  
0x43ef3f: pop rbp;  ret ;  
0x43ef3e: pop rbx;  pop rbp;  ret ;  
0x43ef3d: sbb byte ptr [rbx + 0x5d], bl;  ret ;  
0x43ef3b: add esp, 0x18;  pop rbx;  pop rbp;  ret ;  
0x43efb8: pop rbp;  ret ;  
0x43efb7: pop rbx;  pop rbp;  ret ;  
0x43efb6: sbb byte ptr [rbx + 0x5d], bl;  ret ;  
0x43efb4: add esp, 0x18;  pop rbx;  pop rbp;  ret ;  
0x43efd2: pop rbp;  ret ;  
0x43efd1: pop rbx;  pop rbp;  ret ;  
0x43efd0: add byte ptr [rbx + 0x5d], bl;  ret ;  
0x43efcf: add byte ptr [rax], al;  pop rbx;  pop rbp;  ret ;  
0x43efce: add byte ptr [rax], al;  add byte ptr [rbx + 0x5d], bl;  ret ;  
0x43f090: dec dword ptr [rax - 0x77];  ret ;  
0x43f115: pop rbp;  ret ;  
0x43f114: pop rdi;  pop rbp;  ret ;  
0x43f113: pop r15;  pop rbp;  ret ;  
0x43f112: pop rsi;  pop r15;  pop rbp;  ret ;  
0x43f111: pop r14;  pop r15;  pop rbp;  ret ;  
0x43f255: pop rbp;  ret ;  
0x43f254: pop rbx;  pop rbp;  ret ;  
0x43f253: cmp byte ptr [rbx + 0x5d], bl;  ret ;  
0x43f251: add esp, 0x38;  pop rbx;  pop rbp;  ret ;  
0x43f26d: pop rbp;  ret ;  
0x43f26c: pop rbx;  pop rbp;  ret ;  
0x43f26b: cmp byte ptr [rbx + 0x5d], bl;  ret ;  
0x43f269: add esp, 0x38;  pop rbx;  pop rbp;  ret ;  
0x43f862: add byte ptr [rax], al;  ret ;  
0x43f861: push rdx;  add byte ptr [rax], al;  ret ;  
0x43f860: pop rbp;  push rdx;  add byte ptr [rax], al;  ret ;  
0x43f891: add esp, 0x18;  ret ;  
0x43f890: add rsp, 0x18;  ret ;  
0x43f88f: and al, 0x48;  add esp, 0x18;  ret ;  
0x43f8be: ret ;  
0x43f8bd: add esi, ebx;  ret ;  
0x43f8bc: ja 0x43f8c1;  ret ;  
0x43f8bb: push qword ptr [rdi + 3];  ret ;  
0x43f8cd: mov eax, 0xffffffff;  ret ;  
0x43f8e7: mov eax, 0xffffffff;  ret ;  
0x43f90d: ret ;  
0x43f90c: add al, 0xf3;  ret ;  
0x43f90b: ja 0x43f911;  ret ;  
0x43f90a: push qword ptr [rdi + 4];  ret ;  
0x43f91d: mov eax, 0xffffffff;  ret ;  
0x43f937: mov eax, 0xffffffff;  ret ;  
0x43f95b: add byte ptr [rax], al;  ret ;  
0x43f95a: push rcx;  add byte ptr [rax], al;  ret ;  
0x43f959: push rcx;  add byte ptr [rax], al;  ret ;  
0x43f958: and dword ptr [rcx + rdx*2], 0;  ret ;  
0x43f98f: add byte ptr [rax], al;  ret ;  
0x43f98e: push rcx;  add byte ptr [rax], al;  ret ;  
0x43f98c: xor dword ptr [rax], 0x51;  add byte ptr [rax], al;  ret ;  
0x43f9bb: add byte ptr [rax], al;  ret ;  
0x43f9ba: push rcx;  add byte ptr [rax], al;  ret ;  
0x43f9b9: add al, 0x51;  add byte ptr [rax], al;  ret ;  
0x43f9d8: ret 0xc3e8;  
0x43f9ef: add byte ptr [rax], al;  ret ;  
0x43f9ee: push rax;  add byte ptr [rax], al;  ret ;  
0x43f9ec: adc eax, 0x50;  add byte ptr [rax], al;  ret ;  
0x43fa1b: add byte ptr [rax], al;  ret ;  
0x43fa1a: push rax;  add byte ptr [rax], al;  ret ;  
0x43fa19: movsb byte ptr [rdi], byte ptr [rsi];  push rax;  add byte ptr [rax], al;  ret ;  
0x43fa4f: add byte ptr [rax], al;  ret ;  
0x43fa4e: push rax;  add byte ptr [rax], al;  ret ;  
0x43fa4d: jo 0x43fa9f;  add byte ptr [rax], al;  ret ;  
0x43fa9c: ret ;  
0x43fa9a: ja 0x43fad1;  ret ;  
0x43fa99: push qword ptr [rdi + 0x35];  ret ;  
0x43fac9: cmove eax, edx;  ret ;  
0x43fac7: test al, 2;  cmove eax, edx;  ret ;  
0x43fadd: mov eax, 0xffffffff;  ret ;  
0x43fb44: pop rbx;  ret ;  
0x43fb41: add esp, 0x60;  pop rbx;  ret ;  
0x43fb40: add rsp, 0x60;  pop rbx;  ret ;  
0x43fb78: pop rbx;  ret ;  
0x43fb75: add esp, 0x60;  pop rbx;  ret ;  
0x43fb74: add rsp, 0x60;  pop rbx;  ret ;  
0x43fc63: pop rdi;  ret ;  
0x43fc62: pop r15;  ret ;  
0x43fc61: pop rsi;  pop r15;  ret ;  
0x43fc60: pop r14;  pop r15;  ret ;  
0x43fc5f: pop rbp;  pop r14;  pop r15;  ret ;  
0x43fce2: and byte ptr [rax - 0x77], cl;  ret ;  
0x44006d: dec dword ptr [rax - 0x77];  ret ;  
0x44006c: std ;  dec dword ptr [rax - 0x77];  ret ;  
0x44006b: out 0xfd, eax;  dec dword ptr [rax - 0x77];  ret ;  
0x44007b: ret ;  
0x440078: fisttp dword ptr [rax + 0xf];  ret ;  
0x4400c4: add byte ptr [rax - 0x77], cl;  ret ;  
0x4400c2: add byte ptr [rax], al;  add byte ptr [rax - 0x77], cl;  ret ;  
0x44018d: or byte ptr [rax + 0x29], cl;  ret ;  
0x44018b: jl 0x4401b1;  or byte ptr [rax + 0x29], cl;  ret ;  
0x440302: add byte ptr [rax], al;  ret ;  
0x440301: add byte ptr [r8], r8b;  ret ;  
0x440352: add byte ptr [rax - 0x39], cl;  ret ;  
0x440350: add byte ptr [rax], al;  add byte ptr [rax - 0x39], cl;  ret ;  
0x440362: pop rbp;  ret ;  
0x440361: pop rbx;  pop rbp;  ret ;  
0x440360: fcomp dword ptr [rbx + 0x5d];  ret ;  
0x44035f: mov eax, ebx;  pop rbx;  pop rbp;  ret ;  
0x44035e: mov rax, rbx;  pop rbx;  pop rbp;  ret ;  
0x440396: pop rbp;  ret ;  
0x440395: pop rbx;  pop rbp;  ret ;  
0x440394: fcomp dword ptr [rbx + 0x5d];  ret ;  
0x440393: mov eax, ebx;  pop rbx;  pop rbp;  ret ;  
0x440392: mov rax, rbx;  pop rbx;  pop rbp;  ret ;  
0x4403a6: fmul dword ptr [rax + 0x39];  ret ;  
0x4403bd: ret ;  
0x4403bc: add dh, bl;  ret ;  
0x4403bb: je 0x4403bf;  ret ;  
0x4403b9: test eax, eax;  je 0x4403bf;  ret ;  
0x440401: mov eax, edx;  ret ;  
0x4403fe: add esp, 0x18;  mov eax, edx;  ret ;  
0x44045c: pop rdi;  ret ;  
0x44045b: pop r15;  ret ;  
0x44045a: pop rsi;  pop r15;  ret ;  
0x440459: pop r14;  pop r15;  ret ;  
0x440458: pop rbp;  pop r14;  pop r15;  ret ;  
0x4404e2: add byte ptr [rax], al;  ret ;  
0x4404e1: add byte ptr [r8], r8b;  ret ;  
0x4404df: sbb ebp, 0x45;  add byte ptr [rax], al;  ret ;  
0x440502: add byte ptr [rax], al;  ret ;  
0x440501: add byte ptr [r8], r8b;  ret ;  
0x440522: add byte ptr [rax], al;  ret ;  
0x440521: add byte ptr [r8], r8b;  ret ;  
0x440520: popfq ;  add byte ptr [r8], r8b;  ret ;  
0x440bb9: lahf ;  ret ;  
0x440bb6: add byte ptr [rcx + 0xf], al;  lahf ;  ret ;  
0x440ca6: lahf ;  ret ;  
0x440ca3: add byte ptr [rcx + 0xf], al;  lahf ;  ret ;  
0x440ca2: push rbp;  add byte ptr [rcx + 0xf], al;  lahf ;  ret ;  
0x440cfd: pop rdi;  ret ;  
0x440cfc: pop r15;  ret ;  
0x440cfb: pop rsi;  pop r15;  ret ;  
0x440cfa: pop r14;  pop r15;  ret ;  
0x440cf9: pop rbp;  pop r14;  pop r15;  ret ;  
0x440d8d: pop rdi;  ret ;  
0x440d8c: pop r15;  ret ;  
0x440d8b: pop rsi;  pop r15;  ret ;  
0x440d8a: pop r14;  pop r15;  ret ;  
0x440d89: pop rbp;  pop r14;  pop r15;  ret ;  
0x440da1: pop rdi;  ret ;  
0x440da0: pop r15;  ret ;  
0x440d9f: pop rsi;  pop r15;  ret ;  
0x440d9e: pop r14;  pop r15;  ret ;  
0x440d9d: pop rbp;  pop r14;  pop r15;  ret ;  
0x440e48: or byte ptr [rax - 0x7d], cl;  ret ;  
0x440e60: pop rsp;  ret ;  
0x440e5f: pop r12;  ret ;  
0x440e5e: pop rbp;  pop r12;  ret ;  
0x440e5d: rcr byte ptr [rbp + 0x41], 0x5c;  ret ;  
0x440e5c: xor eax, eax;  pop rbp;  pop r12;  ret ;  
0x440e6f: pop rsp;  ret ;  
0x440e6e: pop r12;  ret ;  
0x440e6d: pop rbp;  pop r12;  ret ;  
0x440e6c: pop rbx;  pop rbp;  pop r12;  ret ;  
0x440e6b: fcomp dword ptr [rbx + 0x5d];  pop r12;  ret ;  
0x440e71: xor eax, eax;  ret ;  
0x440e70: ret ;  xor eax, eax;  ret ;  
0x440e6f: pop rsp;  ret ;  xor eax, eax;  ret ;  
0x440e6e: pop r12;  ret ;  xor eax, eax;  ret ;  
0x440ed4: adc byte ptr [rax - 0x7d], cl;  ret ;  
0x440ed3: adc byte ptr [r8 - 0x7d], r9b;  ret ;  
0x440f19: or byte ptr [rax - 0x7d], cl;  ret ;  
0x440f18: or byte ptr [r8 - 0x7d], r9b;  ret ;  
0x440f36: pop rbp;  ret ;  
0x440f35: pop rdi;  pop rbp;  ret ;  
0x440f34: pop r15;  pop rbp;  ret ;  
0x440f33: pop rsi;  pop r15;  pop rbp;  ret ;  
0x440f32: pop r14;  pop r15;  pop rbp;  ret ;  
0x441122: pop rbp;  ret ;  
0x441121: pop rdi;  pop rbp;  ret ;  
0x441120: pop r15;  pop rbp;  ret ;  
0x44111f: pop rsi;  pop r15;  pop rbp;  ret ;  
0x44111e: pop r14;  pop r15;  pop rbp;  ret ;  
0x441d76: pop rdi;  ret ;  
0x441d75: pop r15;  ret ;  
0x441d74: pop rsi;  pop r15;  ret ;  
0x441d73: pop r14;  pop r15;  ret ;  
0x441d72: pop rbp;  pop r14;  pop r15;  ret ;  
0x4421d3: cli ;  ret ;  
0x442608: imul eax;  ret ;  
0x442649: ret ;  
0x442648: add bl, dh;  ret ;  
0x442646: nop dword ptr [rax];  ret ;  
0x4426b9: pop rdi;  ret ;  
0x4426b8: pop r15;  ret ;  
0x4426b7: pop rsi;  pop r15;  ret ;  
0x4426b6: pop r14;  pop r15;  ret ;  
0x4426b5: pop rbp;  pop r14;  pop r15;  ret ;  
0x4429b4: pop rbp;  ret ;  
0x4429b3: pop rdi;  pop rbp;  ret ;  
0x4429b2: pop r15;  pop rbp;  ret ;  
0x4429b1: pop rsi;  pop r15;  pop rbp;  ret ;  
0x4429b0: pop r14;  pop r15;  pop rbp;  ret ;  
0x4429b5: ret ;  
0x4429b4: pop rbp;  ret ;  
0x4429b3: pop rdi;  pop rbp;  ret ;  
0x442ace: pop rbp;  ret ;  
0x442acd: pop rdi;  pop rbp;  ret ;  
0x442acc: pop r15;  pop rbp;  ret ;  
0x442acb: pop rsi;  pop r15;  pop rbp;  ret ;  
0x442aca: pop r14;  pop r15;  pop rbp;  ret ;  
0x442bc6: or byte ptr [rax + 0x39], cl;  ret ;  
0x442bf3: pop rsp;  ret ;  
0x442bf2: pop r12;  ret ;  
0x442bf1: pop rbp;  pop r12;  ret ;  
0x442bf0: pop rbx;  pop rbp;  pop r12;  ret ;  
0x442bef: adc byte ptr [rbx + 0x5d], bl;  pop r12;  ret ;  
0x442c62: pop rbp;  ret ;  
0x442c61: pop rbx;  pop rbp;  ret ;  
0x442c60: js 0x442cbd;  pop rbp;  ret ;  
0x442c5e: add esp, 0x78;  pop rbx;  pop rbp;  ret ;  
0x442cd2: pop rbp;  ret ;  
0x442cd1: pop rbx;  pop rbp;  ret ;  
0x442cd0: js 0x442d2d;  pop rbp;  ret ;  
0x442cce: add esp, 0x78;  pop rbx;  pop rbp;  ret ;  
0x442cee: cmove eax, edx;  ret ;  
0x442cec: test eax, eax;  cmove eax, edx;  ret ;  
0x442d46: ret ;  
0x442d45: pop rbp;  ret ;  
0x442d44: pop rbx;  pop rbp;  ret ;  
0x442d43: or byte ptr [rbx + 0x5d], bl;  ret ;  
0x442d62: add byte ptr [rax], al;  ret ;  
0x442d85: add byte ptr [rax], al;  ret ;  
0x442d82: cmp dword ptr [rdx], 0x1d;  add byte ptr [rax], al;  ret ;  
0x442da2: add byte ptr [rax], al;  ret ;  
0x442ded: setae al;  ret ;  
0x442dec: cli ;  setae al;  ret ;  
0x442deb: cmp edx, edi;  setae al;  ret ;  
0x442e17: pop rdx;  ret ;  
0x442e16: pop r10;  ret ;  
0x442e15: pop rdx;  pop r10;  ret ;  
0x442e13: jne 0x442e05;  pop rdx;  pop r10;  ret ;  
0x442e3b: pop rsi;  ret ;  
0x442e3a: pop rdx;  pop rsi;  ret ;  
0x442e38: syscall ;  pop rdx;  pop rsi;  ret ;  
0x442e48: add byte ptr [rcx - 0x77], al;  ret ;  
0x442e46: add eax, dword ptr [rax];  add byte ptr [rcx - 0x77], al;  ret ;  
0x442e4b: ret ;  
0x442e4f: add al, byte ptr [rcx + 0x39];  ret ;  
0x442e4e: retf ;  add al, byte ptr [rcx + 0x39];  ret ;  
0x442e6a: je 0x442e6d;  ret ;  
0x442e67: cmp ebx, 0xa;  je 0x442e6d;  ret ;  
0x442eb0: add byte ptr [rcx - 0x77], al;  ret ;  
0x442eae: add eax, dword ptr [rax];  add byte ptr [rcx - 0x77], al;  ret ;  
0x442ece: je 0x442ed1;  ret ;  
0x442ecb: cmp eax, 4;  je 0x442ed1;  ret ;  
0x442f67: pop rbp;  ret ;  
0x442f66: pop rbp;  pop rbp;  ret ;  
0x442f65: pop r13;  pop rbp;  ret ;  
0x442f64: pop rsp;  pop r13;  pop rbp;  ret ;  
0x442f63: pop r12;  pop r13;  pop rbp;  ret ;  
0x442f85: pop rbp;  ret ;  
0x442f84: pop rbp;  pop rbp;  ret ;  
0x442f83: pop r13;  pop rbp;  ret ;  
0x442f82: pop rsp;  pop r13;  pop rbp;  ret ;  
0x442f81: pop r12;  pop r13;  pop rbp;  ret ;  
0x442fd9: leave ;  ret ;  
0x442fd8: add cl, cl;  ret ;  
0x442fd7: fadd dword ptr [rax];  leave ;  ret ;  
0x442fd6: sbb eax, 0;  leave ;  ret ;  
0x442fe8: leave ;  ret ;  
0x442fe6: xor eax, eax;  leave ;  ret ;  
0x442fe5: xor eax, eax;  leave ;  ret ;  
0x442fe4: jne 0x442fd9;  xor eax, eax;  leave ;  ret ;  
0x4431bf: add byte ptr [rax - 0x7d], cl;  ret ;  
0x4431bd: add byte ptr [rax], al;  add byte ptr [rax - 0x7d], cl;  ret ;  
0x443242: ret ;  
0x443241: pop rdi;  ret ;  
0x443240: pop r15;  ret ;  
0x44323f: pop rsi;  pop r15;  ret ;  
0x44323e: pop r14;  pop r15;  ret ;  
0x443341: ret ;  
0x443340: nop ;  ret ;  
0x44333f: nop ;  ret ;  
0x44333e: add byte ptr [rsi - 0x70], ah;  ret ;  
0x44333d: add byte ptr [rax], al;  nop ;  ret ;  
0x443397: mov dword ptr [rax + 8], edx;  ret ;  
0x443396: mov qword ptr [rax + 8], rdx;  ret ;  
0x4433a1: ret ;  
0x4433a0: add bl, dh;  ret ;  
0x44339f: add byte ptr [rax], al;  ret ;  
0x44339e: add byte ptr [rax], r8b;  ret ;  
0x4434dd: pop rdi;  ret ;  
0x4434dc: pop r15;  ret ;  
0x4434db: pop rsi;  pop r15;  ret ;  
0x4434da: pop r14;  pop r15;  ret ;  
0x4434d9: pop rbp;  pop r14;  pop r15;  ret ;  
0x44369f: add byte ptr [rcx - 0x77], al;  ret ;  
0x443b45: ret ;  
0x443b44: pop rdi;  ret ;  
0x443b43: pop r15;  ret ;  
0x443b42: pop rsi;  pop r15;  ret ;  
0x443b41: pop r14;  pop r15;  ret ;  
0x44419f: ret ;  
0x44419c: add byte ptr [rax + 0xf], cl;  ret ;  
0x44419b: add byte ptr [rax + 0xf], cl;  ret ;  
0x4441bf: ret ;  
0x4441bc: add byte ptr [rax + 0xf], cl;  ret ;  
0x4441bb: add byte ptr [rax + 0xf], cl;  ret ;  
0x4441df: ret ;  
0x4441dc: add byte ptr [rax + 0xf], cl;  ret ;  
0x4441db: add byte ptr [rax + 0xf], cl;  ret ;  
0x444317: pop rbp;  ret ;  
0x444316: pop r13;  ret ;  
0x444315: pop rsp;  pop r13;  ret ;  
0x444314: pop r12;  pop r13;  ret ;  
0x444313: pop rbp;  pop r12;  pop r13;  ret ;  
0x44447b: pop rbp;  ret ;  
0x44447a: pop r13;  ret ;  
0x444479: pop rsp;  pop r13;  ret ;  
0x444478: pop r12;  pop r13;  ret ;  
0x444477: pop rbp;  pop r12;  pop r13;  ret ;  
0x44475a: pop rdi;  ret ;  
0x444759: pop r15;  ret ;  
0x444758: pop rsi;  pop r15;  ret ;  
0x444757: pop r14;  pop r15;  ret ;  
0x444756: pop rbp;  pop r14;  pop r15;  ret ;  
0x444788: add byte ptr [rcx - 0x7d], cl;  ret ;  
0x444787: add byte ptr [rcx - 0x7d], cl;  ret ;  
0x4448aa: add byte ptr [rax], al;  ret ;  
0x4448a8: add dword ptr [rax], eax;  add byte ptr [rax], al;  ret ;  
0x4448a7: mov eax, 1;  ret ;  
0x4448b1: xor eax, eax;  ret ;  
0x4448c9: je 0x4448d1;  ret ;  
0x4448c7: test eax, eax;  je 0x4448d1;  ret ;  
0x4448dd: add byte ptr [rcx], bh;  ret ;  
0x4448ed: pop rbx;  ret ;  
0x4448eb: sub byte ptr [rax], al;  pop rbx;  ret ;  
0x4448ea: pop rbx;  sub byte ptr [rax], al;  pop rbx;  ret ;  
0x4448e9: lodsb al, byte ptr [rsi];  pop rbx;  sub byte ptr [rax], al;  pop rbx;  ret ;  
0x4448fe: sar byte ptr [rcx], cl;  ret ;  
0x4448fc: add byte ptr [rcx], dh;  sar byte ptr [rcx], cl;  ret ;  
0x444998: pop rbp;  ret ;  
0x444997: pop rbx;  pop rbp;  ret ;  
0x444996: add byte ptr [rbx + 0x5d], bl;  ret ;  
0x444995: add byte ptr [rax], al;  pop rbx;  pop rbp;  ret ;  
0x444994: add dword ptr [rax], eax;  add byte ptr [rbx + 0x5d], bl;  ret ;  
0x4449b5: pop rbp;  ret ;  
0x4449b4: pop rbx;  pop rbp;  ret ;  
0x4449b3: loopne 0x444a10;  pop rbp;  ret ;  
0x4449b2: shl eax, cl;  pop rbx;  pop rbp;  ret ;  
0x4449b1: add edx, ebx;  loopne 0x444a10;  pop rbp;  ret ;  
0x444acd: or eax, 0xffffffff;  ret ;  
0x444acc: or rax, 0xffffffffffffffff;  ret ;  
0x444c52: pop rbp;  ret ;  
0x444c51: pop rdi;  pop rbp;  ret ;  
0x444c50: pop r15;  pop rbp;  ret ;  
0x444c4f: pop rsi;  pop r15;  pop rbp;  ret ;  
0x444c4e: pop r14;  pop r15;  pop rbp;  ret ;  
0x44511c: pop rdi;  ret ;  
0x44511b: pop r15;  ret ;  
0x44511a: pop rsi;  pop r15;  ret ;  
0x445119: pop r14;  pop r15;  ret ;  
0x445118: pop rbp;  pop r14;  pop r15;  ret ;  
0x445126: mov eax, edx;  ret ;  
0x445124: add byte ptr [rax], al;  mov eax, edx;  ret ;  
0x44524c: retf 0x8348;  ret ;  
0x4452a6: pop rbp;  ret ;  
0x4452a5: pop rbx;  pop rbp;  ret ;  
0x4452a4: or byte ptr [rbx + 0x5d], bl;  ret ;  
0x4452a2: add esp, 8;  pop rbx;  pop rbp;  ret ;  
0x4458f7: xchg dword ptr [rbp + rcx*4 + 0x24], ecx;  ret ;  
0x445936: ret ;  
0x445933: add byte ptr [rax - 0x75], cl;  ret ;  
0x445a1e: add dword ptr [rax + 0x39], ecx;  ret ;  
0x445a1d: ret ;  add dword ptr [rax + 0x39], ecx;  ret ;  
0x445c1a: pop rbp;  ret ;  
0x445c19: pop rdi;  pop rbp;  ret ;  
0x445c18: pop r15;  pop rbp;  ret ;  
0x445c17: pop rsi;  pop r15;  pop rbp;  ret ;  
0x445c16: pop r14;  pop r15;  pop rbp;  ret ;  
0x445d60: ret ;  
0x445d5d: xchg dword ptr [rax - 0x39], ecx;  ret ;  
0x445dbb: add byte ptr [rax - 0x7d], cl;  ret ;  
0x445db9: add byte ptr [rax], al;  add byte ptr [rax - 0x7d], cl;  ret ;  
0x445e16: sub byte ptr [rax], al;  ret ;  
0x445e14: mov cl, 0x79;  sub byte ptr [rax], al;  ret ;  
0x445e13: add eax, 0x2879b1;  ret ;  
0x445e26: sub byte ptr [rax], al;  ret ;  
0x445e24: mov cl, 0x79;  sub byte ptr [rax], al;  ret ;  
0x445e23: add eax, 0x2879b1;  ret ;  
0x445e7f: pop rbp;  ret ;  
0x445e7e: pop rbx;  pop rbp;  ret ;  
0x445e7d: or byte ptr [rbx + 0x5d], bl;  ret ;  
0x445e7b: add esp, 8;  pop rbx;  pop rbp;  ret ;  
0x445ed8: pop rsp;  ret ;  
0x445ed7: pop r12;  ret ;  
0x445ed6: pop rbp;  pop r12;  ret ;  
0x445ed5: pop rbx;  pop rbp;  pop r12;  ret ;  
0x445ed4: and byte ptr [rbx + 0x5d], bl;  pop r12;  ret ;  
0x445f48: pop rsp;  ret ;  
0x445f47: pop r12;  ret ;  
0x445f46: pop rbp;  pop r12;  ret ;  
0x445f45: pop rbx;  pop rbp;  pop r12;  ret ;  
0x445f44: and byte ptr [rbx + 0x5d], bl;  pop r12;  ret ;  
0x445f73: fucomip st(3);  ret ;  
0x446057: pop rdi;  ret ;  
0x446056: pop r15;  ret ;  
0x446055: pop rsi;  pop r15;  ret ;  
0x446054: pop r14;  pop r15;  ret ;  
0x446053: pop rbp;  pop r14;  pop r15;  ret ;  
0x44619e: pop rdi;  ret ;  
0x44619d: pop r15;  ret ;  
0x44619c: pop rsi;  pop r15;  ret ;  
0x44619b: pop r14;  pop r15;  ret ;  
0x44619a: pop rbp;  pop r14;  pop r15;  ret ;  
0x44636b: pop rsi;  ret ;  
0x44636a: pop r14;  ret ;  
0x446369: pop rbp;  pop r14;  ret ;  
0x446368: pop r13;  pop r14;  ret ;  
0x446367: pop rsp;  pop r13;  pop r14;  ret ;  
0x44639f: and byte ptr [rax - 0x7d], cl;  ret ;  
0x4463be: pop rsi;  ret ;  
0x4463bd: pop r14;  ret ;  
0x4463bc: pop rbp;  pop r14;  ret ;  
0x4463bb: pop r13;  pop r14;  ret ;  
0x4463ba: pop rsp;  pop r13;  pop r14;  ret ;  
0x446480: add byte ptr [rax - 0x7d], cl;  ret ;  
0x44647e: add al, byte ptr [rax];  add byte ptr [rax - 0x7d], cl;  ret ;  
0x4464d2: pop rbp;  ret ;  
0x4464d1: pop rdi;  pop rbp;  ret ;  
0x4464d0: pop r15;  pop rbp;  ret ;  
0x4464cf: pop rsi;  pop r15;  pop rbp;  ret ;  
0x4464ce: pop r14;  pop r15;  pop rbp;  ret ;  
0x44657f: add byte ptr [rcx - 0x7d], cl;  ret ;  
0x44657d: add dword ptr [rax], eax;  add byte ptr [rcx - 0x7d], cl;  ret ;  
0x44684e: pop rbp;  ret ;  
0x44684d: pop rdi;  pop rbp;  ret ;  
0x44684c: pop r15;  pop rbp;  ret ;  
0x44684b: pop rsi;  pop r15;  pop rbp;  ret ;  
0x44684a: pop r14;  pop r15;  pop rbp;  ret ;  
0x446d83: add byte ptr [rax - 0x7d], cl;  ret ;  
0x446d81: add al, byte ptr [rax];  add byte ptr [rax - 0x7d], cl;  ret ;  
0x446e66: pop rbp;  ret ;  
0x446e65: pop rdi;  pop rbp;  ret ;  
0x446e64: pop r15;  pop rbp;  ret ;  
0x446e63: pop rsi;  pop r15;  pop rbp;  ret ;  
0x446e62: pop r14;  pop r15;  pop rbp;  ret ;  
0x44723e: push rsp;  ret ;  
0x44723d: push rax;  push rsp;  ret ;  
0x44723c: mov dword ptr [rax + 0x54], edx;  ret ;  
0x44723b: push rax;  mov dword ptr [rax + 0x54], edx;  ret ;  
0x44723a: push rax;  mov dword ptr [rax + 0x54], edx;  ret ;  
0x4472fd: cmovs eax, edx;  ret ;  
0x44731a: retf 0x894d;  ret ;  
0x447390: pop rdi;  ret ;  
0x44738f: pop r15;  ret ;  
0x44738e: pop rsi;  pop r15;  ret ;  
0x44738d: pop r14;  pop r15;  ret ;  
0x44738c: pop rbp;  pop r14;  pop r15;  ret ;  
0x447570: pop rdi;  ret ;  
0x44756f: pop r15;  ret ;  
0x44756e: pop rsi;  pop r15;  ret ;  
0x44756d: pop r14;  pop r15;  ret ;  
0x44756c: pop rbp;  pop r14;  pop r15;  ret ;  
0x447613: pop rdi;  ret ;  
0x447612: pop r15;  ret ;  
0x447611: pop rsi;  pop r15;  ret ;  
0x447610: pop r14;  pop r15;  ret ;  
0x44760f: pop rbp;  pop r14;  pop r15;  ret ;  
0x44766d: pop rdi;  ret ;  
0x44766c: pop r15;  ret ;  
0x44766b: pop rsi;  pop r15;  ret ;  
0x44766a: pop r14;  pop r15;  ret ;  
0x447669: pop rbp;  pop r14;  pop r15;  ret ;  
0x447686: pop rdi;  ret ;  
0x447685: pop r15;  ret ;  
0x447684: pop rsi;  pop r15;  ret ;  
0x447683: pop r14;  pop r15;  ret ;  
0x447682: pop rbp;  pop r14;  pop r15;  ret ;  
0x447789: pop rdi;  ret ;  
0x447788: pop r15;  ret ;  
0x447787: pop rsi;  pop r15;  ret ;  
0x447786: pop r14;  pop r15;  ret ;  
0x447785: pop rbp;  pop r14;  pop r15;  ret ;  
0x4477ca: pop rdi;  ret ;  
0x4477c9: pop r15;  ret ;  
0x4477c8: pop rsi;  pop r15;  ret ;  
0x4477c7: pop r14;  pop r15;  ret ;  
0x4477c6: pop rbp;  pop r14;  pop r15;  ret ;  
0x447949: mov byte ptr [rax + rcx*2], 0x83;  ret ;  
0x447a01: mov byte ptr [rax + rcx*2], 0x83;  ret ;  
0x447a42: adc ecx, dword ptr [rax - 0x7d];  ret ;  
0x447b89: mov byte ptr [rax + rcx*2], 0x83;  ret ;  
0x447d03: pop rdi;  ret ;  
0x447d02: pop r15;  ret ;  
0x447d01: pop rsi;  pop r15;  ret ;  
0x447d00: pop r14;  pop r15;  ret ;  
0x447cff: pop rbp;  pop r14;  pop r15;  ret ;  
0x447eed: pop rdi;  ret ;  
0x447eec: pop r15;  ret ;  
0x447eeb: pop rsi;  pop r15;  ret ;  
0x447eea: pop r14;  pop r15;  ret ;  
0x447ee9: pop rbp;  pop r14;  pop r15;  ret ;  
0x447f89: pop rdi;  ret ;  
0x447f88: pop r15;  ret ;  
0x447f87: pop rsi;  pop r15;  ret ;  
0x447f86: pop r14;  pop r15;  ret ;  
0x447f85: pop rbp;  pop r14;  pop r15;  ret ;  
0x447ff1: pop rdi;  ret ;  
0x447ff0: pop r15;  ret ;  
0x447fef: pop rsi;  pop r15;  ret ;  
0x447fee: pop r14;  pop r15;  ret ;  
0x447fed: pop rbp;  pop r14;  pop r15;  ret ;  
0x448010: pop rdi;  ret ;  
0x44800f: pop r15;  ret ;  
0x44800e: pop rsi;  pop r15;  ret ;  
0x44800d: pop r14;  pop r15;  ret ;  
0x44800c: pop rbp;  pop r14;  pop r15;  ret ;  
0x448129: pop rdi;  ret ;  
0x448128: pop r15;  ret ;  
0x448127: pop rsi;  pop r15;  ret ;  
0x448126: pop r14;  pop r15;  ret ;  
0x448125: pop rbp;  pop r14;  pop r15;  ret ;  
0x44816a: pop rdi;  ret ;  
0x448169: pop r15;  ret ;  
0x448168: pop rsi;  pop r15;  ret ;  
0x448167: pop r14;  pop r15;  ret ;  
0x448166: pop rbp;  pop r14;  pop r15;  ret ;  
0x4482c9: rol byte ptr [rax + rcx*2], 0x83;  ret ;  
0x448379: rol byte ptr [rax + rcx*2], 0x83;  ret ;  
0x4483aa: cmp ecx, dword ptr [rax - 0x7d];  ret ;  
0x4484f9: rol byte ptr [rax + rcx*2], 0x83;  ret ;  
0x44866f: pop rdi;  ret ;  
0x44866e: pop r15;  ret ;  
0x44866d: pop rsi;  pop r15;  ret ;  
0x44866c: pop r14;  pop r15;  ret ;  
0x44866b: pop rbp;  pop r14;  pop r15;  ret ;  
0x4486dc: ret 0x8949;  ret ;  
0x4486db: ret 0x8949;  ret ;  
0x448722: xor ecx, dword ptr [rax - 0x77];  ret ;  
0x4489ec: pop rdi;  ret ;  
0x4489eb: pop r15;  ret ;  
0x4489ea: pop rsi;  pop r15;  ret ;  
0x4489e9: pop r14;  pop r15;  ret ;  
0x4489e8: pop rbp;  pop r14;  pop r15;  ret ;  
0x448a30: pop rdi;  ret ;  
0x448a2f: pop r15;  ret ;  
0x448a2e: pop rsi;  pop r15;  ret ;  
0x448a2d: pop r14;  pop r15;  ret ;  
0x448a2c: pop rbp;  pop r14;  pop r15;  ret ;  
0x448db3: ret ;  
0x448db7: add dword ptr [rax - 0x7d], ecx;  ret ;  
0x448db6: ret 0x4801;  
0x44912a: or byte ptr [rcx - 0xa], al;  ret ;  
0x4491a7: pop rdi;  ret ;  
0x4491a6: pop r15;  ret ;  
0x4491a5: pop rsi;  pop r15;  ret ;  
0x4491a4: pop r14;  pop r15;  ret ;  
0x4491a3: pop rbp;  pop r14;  pop r15;  ret ;  
0x449b81: add byte ptr [rcx - 0xa], al;  ret ;  
0x449b7f: add dword ptr [rax], eax;  add byte ptr [rcx - 0xa], al;  ret ;  
0x449e26: pop rdi;  ret ;  
0x449e25: pop r15;  ret ;  
0x449e24: pop rsi;  pop r15;  ret ;  
0x449e23: pop r14;  pop r15;  ret ;  
0x449e22: pop rbp;  pop r14;  pop r15;  ret ;  
0x449e70: pop rdi;  ret ;  
0x449e6f: pop r15;  ret ;  
0x449e6e: pop rsi;  pop r15;  ret ;  
0x449e6d: pop r14;  pop r15;  ret ;  
0x449e6c: pop rbp;  pop r14;  pop r15;  ret ;  
0x44a0e8: add dword ptr [rax + 0x39], ecx;  ret ;  
0x44a0e7: add dword ptr [rax + 0x39], ecx;  ret ;  
0x44a104: add cl, byte ptr [rax + 0x39];  ret ;  
0x44a103: add cl, byte ptr [rax + 0x39];  ret ;  
0x44a120: add ecx, dword ptr [rax + 0x39];  ret ;  
0x44a11f: add ecx, dword ptr [rax + 0x39];  ret ;  
0x44a168: add cl, ch;  ret ;  
0x44a166: add byte ptr [rax], al;  add cl, ch;  ret ;  
0x44a448: add dword ptr [rax + 0x39], ecx;  ret ;  
0x44a447: add dword ptr [r8 + 0x39], r9d;  ret ;  
0x44a465: add cl, byte ptr [rax + 0x39];  ret ;  
0x44a464: add r9b, byte ptr [r8 + 0x39];  ret ;  
0x44a482: add ecx, dword ptr [rax + 0x39];  ret ;  
0x44a481: add r9d, dword ptr [r8 + 0x39];  ret ;  
0x44a4b7: ret 0x8348;  
0x44a4b6: xchg eax, esp;  ret 0x8348;  
0x44af4c: pop rdi;  ret ;  
0x44af4b: pop r15;  ret ;  
0x44af4a: pop rsi;  pop r15;  ret ;  
0x44af49: pop r14;  pop r15;  ret ;  
0x44af48: pop rbp;  pop r14;  pop r15;  ret ;  
0x44af8c: pop rdi;  ret ;  
0x44af8b: pop r15;  ret ;  
0x44af8a: pop rsi;  pop r15;  ret ;  
0x44af89: pop r14;  pop r15;  ret ;  
0x44af88: pop rbp;  pop r14;  pop r15;  ret ;  
0x44b5a4: pop rdi;  ret ;  
0x44b5a3: pop r15;  ret ;  
0x44b5a2: pop rsi;  pop r15;  ret ;  
0x44b5a1: pop r14;  pop r15;  ret ;  
0x44b5a0: pop rbp;  pop r14;  pop r15;  ret ;  
0x44b5e8: pop rdi;  ret ;  
0x44b5e7: pop r15;  ret ;  
0x44b5e6: pop rsi;  pop r15;  ret ;  
0x44b5e5: pop r14;  pop r15;  ret ;  
0x44b5e4: pop rbp;  pop r14;  pop r15;  ret ;  
0x44bdac: pop rdi;  ret ;  
0x44bdab: pop r15;  ret ;  
0x44bdaa: pop rsi;  pop r15;  ret ;  
0x44bda9: pop r14;  pop r15;  ret ;  
0x44bda8: pop rbp;  pop r14;  pop r15;  ret ;  
0x44bded: pop rdi;  ret ;  
0x44bdec: pop r15;  ret ;  
0x44bdeb: pop rsi;  pop r15;  ret ;  
0x44bdea: pop r14;  pop r15;  ret ;  
0x44bde9: pop rbp;  pop r14;  pop r15;  ret ;  
0x44c404: pop rdi;  ret ;  
0x44c403: pop r15;  ret ;  
0x44c402: pop rsi;  pop r15;  ret ;  
0x44c401: pop r14;  pop r15;  ret ;  
0x44c400: pop rbp;  pop r14;  pop r15;  ret ;  
0x44c448: pop rdi;  ret ;  
0x44c447: pop r15;  ret ;  
0x44c446: pop rsi;  pop r15;  ret ;  
0x44c445: pop r14;  pop r15;  ret ;  
0x44c444: pop rbp;  pop r14;  pop r15;  ret ;  
0x44cc2c: rol byte ptr [rcx + rcx*2], 0x39;  ret ;  
0x44ccb8: rol byte ptr [rcx + rcx*2], 0x39;  ret ;  
0x44ccd5: adc byte ptr [rcx + 0x39], cl;  ret ;  
0x44ccd8: ret ;  
0x44cd8d: pop rdi;  ret ;  
0x44cd8c: pop r15;  ret ;  
0x44cd8b: pop rsi;  pop r15;  ret ;  
0x44cd8a: pop r14;  pop r15;  ret ;  
0x44cd89: pop rbp;  pop r14;  pop r15;  ret ;  
0x44cf80: rol byte ptr [rcx + rcx*2], 0x39;  ret ;  
0x44cfa9: shr byte ptr [rcx], cl;  ret ;  
0x44d164: pop rbp;  ret ;  
0x44d163: pop rdi;  pop rbp;  ret ;  
0x44d162: pop r15;  pop rbp;  ret ;  
0x44d161: pop rsi;  pop r15;  pop rbp;  ret ;  
0x44d160: pop r14;  pop r15;  pop rbp;  ret ;  
0x44d17b: pop rbp;  ret ;  
0x44d17a: pop rdi;  pop rbp;  ret ;  
0x44d179: pop r15;  pop rbp;  ret ;  
0x44d178: pop rsi;  pop r15;  pop rbp;  ret ;  
0x44d177: pop r14;  pop r15;  pop rbp;  ret ;  
0x44d183: add eax, 0x27fa79;  ret ;  
0x44d1cf: dec dword ptr [rax - 0x77];  ret ;  
0x44d29e: pop rbp;  ret ;  
0x44d29d: pop r13;  ret ;  
0x44d29c: pop rsp;  pop r13;  ret ;  
0x44d29b: pop r12;  pop r13;  ret ;  
0x44d29a: pop rbp;  pop r12;  pop r13;  ret ;  
0x44d2be: pop rbp;  ret ;  
0x44d2bd: pop r13;  ret ;  
0x44d2bc: pop rsp;  pop r13;  ret ;  
0x44d2bb: pop r12;  pop r13;  ret ;  
0x44d2ba: pop rbp;  pop r12;  pop r13;  ret ;  
0x44d2fa: pop rbp;  ret ;  
0x44d2f9: pop r13;  ret ;  
0x44d2f8: pop rsp;  pop r13;  ret ;  
0x44d2f7: pop r12;  pop r13;  ret ;  
0x44d2f6: pop rbp;  pop r12;  pop r13;  ret ;  
0x44d381: pop rbp;  ret ;  
0x44d380: pop r13;  ret ;  
0x44d37f: pop rsp;  pop r13;  ret ;  
0x44d37e: pop r12;  pop r13;  ret ;  
0x44d37d: pop rbp;  pop r12;  pop r13;  ret ;  
0x44d485: pop rdi;  ret ;  
0x44d484: pop r15;  ret ;  
0x44d483: pop rsi;  pop r15;  ret ;  
0x44d482: pop r14;  pop r15;  ret ;  
0x44d481: pop rbp;  pop r14;  pop r15;  ret ;  
0x44d54e: pop rdi;  ret ;  
0x44d54d: pop r15;  ret ;  
0x44d54c: pop rsi;  pop r15;  ret ;  
0x44d54b: pop r14;  pop r15;  ret ;  
0x44d54a: pop rbp;  pop r14;  pop r15;  ret ;  
0x44d662: pop rdi;  ret ;  
0x44d661: pop r15;  ret ;  
0x44d660: pop rsi;  pop r15;  ret ;  
0x44d65f: pop r14;  pop r15;  ret ;  
0x44d65e: pop rbp;  pop r14;  pop r15;  ret ;  
0x44db51: ret ;  
0x44db50: nop ;  ret ;  
0x44db7b: pop rbx;  ret ;  
0x44db79: je 0x44db81;  pop rbx;  ret ;  
0x44db78: add esi, dword ptr [rsi + rax + 0x5b];  ret ;  
0x44db77: inc byte ptr [rbx];  je 0x44db81;  pop rbx;  ret ;  
0x44dbb9: pop rbx;  ret ;  
0x44dbb7: add byte ptr [rax], al;  pop rbx;  ret ;  
0x44dbb5: add byte ptr [rax], al;  add byte ptr [rax], al;  pop rbx;  ret ;  
0x44dbcb: pop rbx;  ret ;  
0x44dbc8: mov dword ptr [rbx + 8], eax;  pop rbx;  ret ;  
0x44dcf4: pop rbp;  ret ;  
0x44dcf3: pop r13;  ret ;  
0x44dcf2: pop rsp;  pop r13;  ret ;  
0x44dcf1: pop r12;  pop r13;  ret ;  
0x44dcf0: pop rbp;  pop r12;  pop r13;  ret ;  
0x44dd1c: pop rbp;  ret ;  
0x44dd1b: pop r13;  ret ;  
0x44dd1a: pop rsp;  pop r13;  ret ;  
0x44dd19: pop r12;  pop r13;  ret ;  
0x44dd18: pop rbp;  pop r12;  pop r13;  ret ;  
0x44dd9a: pop rbp;  ret ;  
0x44dd99: pop r13;  ret ;  
0x44dd98: pop rsp;  pop r13;  ret ;  
0x44dd97: pop r12;  pop r13;  ret ;  
0x44dd96: pop rbp;  pop r12;  pop r13;  ret ;  
0x44def2: pop rdi;  ret ;  
0x44def1: pop r15;  ret ;  
0x44def0: pop rsi;  pop r15;  ret ;  
0x44deef: pop r14;  pop r15;  ret ;  
0x44deee: pop rbp;  pop r14;  pop r15;  ret ;  
0x44e154: pop rdi;  ret ;  
0x44e153: pop r15;  ret ;  
0x44e152: pop rsi;  pop r15;  ret ;  
0x44e151: pop r14;  pop r15;  ret ;  
0x44e150: pop rbp;  pop r14;  pop r15;  ret ;  
0x44e2bf: xor eax, eax;  ret ;  
0x44e2bd: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x44e38b: add byte ptr [rax - 0x77], cl;  ret ;  
0x44e389: add eax, dword ptr [rax];  add byte ptr [rax - 0x77], cl;  ret ;  
0x44e993: pop rbp;  ret ;  
0x44e992: pop rdi;  pop rbp;  ret ;  
0x44e991: pop r15;  pop rbp;  ret ;  
0x44e990: pop rsi;  pop r15;  pop rbp;  ret ;  
0x44e98f: pop r14;  pop r15;  pop rbp;  ret ;  
0x44e9cd: pop rbp;  ret ;  
0x44e9cc: pop rdi;  pop rbp;  ret ;  
0x44e9cb: pop r15;  pop rbp;  ret ;  
0x44e9ca: pop rsi;  pop r15;  pop rbp;  ret ;  
0x44e9c9: pop r14;  pop r15;  pop rbp;  ret ;  
0x44eb0b: inc dword ptr [rcx - 0x77];  ret ;  
0x44eb0a: clc ;  inc dword ptr [rcx - 0x77];  ret ;  
0x44ecf2: add byte ptr [rax - 0x7d], cl;  ret ;  
0x44ecf0: add dword ptr [rax], eax;  add byte ptr [rax - 0x7d], cl;  ret ;  
0x44f0d9: ret ;  
0x44f0d8: add bl, dh;  ret ;  
0x44f0d7: add byte ptr [rax], al;  ret ;  
0x44f0d6: add byte ptr [rax], al;  add bl, dh;  ret ;  
0x44f0d5: add byte ptr [rax], al;  add byte ptr [rax], al;  ret ;  
0x44f208: add al, ch;  ret ;  
0x44f22e: pop rdi;  ret ;  
0x44f22d: pop r15;  ret ;  
0x44f22c: pop rsi;  pop r15;  ret ;  
0x44f22b: pop r14;  pop r15;  ret ;  
0x44f22a: pop rbp;  pop r14;  pop r15;  ret ;  
0x44f373: pop rbp;  ret ;  
0x44f372: pop rdi;  pop rbp;  ret ;  
0x44f371: pop r15;  pop rbp;  ret ;  
0x44f370: pop rsi;  pop r15;  pop rbp;  ret ;  
0x44f36f: pop r14;  pop r15;  pop rbp;  ret ;  
0x44f43d: pop rbp;  ret ;  
0x44f43c: pop rdi;  pop rbp;  ret ;  
0x44f43b: pop r15;  pop rbp;  ret ;  
0x44f43a: pop rsi;  pop r15;  pop rbp;  ret ;  
0x44f439: pop r14;  pop r15;  pop rbp;  ret ;  
0x44f458: pop rbp;  ret ;  
0x44f457: pop rdi;  pop rbp;  ret ;  
0x44f456: pop r15;  pop rbp;  ret ;  
0x44f455: pop rsi;  pop r15;  pop rbp;  ret ;  
0x44f454: pop r14;  pop r15;  pop rbp;  ret ;  
0x44f786: pop rbp;  ret ;  
0x44f785: pop rdi;  pop rbp;  ret ;  
0x44f784: pop r15;  pop rbp;  ret ;  
0x44f783: pop rsi;  pop r15;  pop rbp;  ret ;  
0x44f782: pop r14;  pop r15;  pop rbp;  ret ;  
0x44f988: add dword ptr [rax - 0x7d], ecx;  ret ;  
0x44fa00: pop rbp;  ret ;  
0x44f9ff: pop rdi;  pop rbp;  ret ;  
0x44f9fe: pop r15;  pop rbp;  ret ;  
0x44f9fd: pop rsi;  pop r15;  pop rbp;  ret ;  
0x44f9fc: pop r14;  pop r15;  pop rbp;  ret ;  
0x44fbee: pop rbp;  ret ;  
0x44fbed: pop rdi;  pop rbp;  ret ;  
0x44fbec: pop r15;  pop rbp;  ret ;  
0x44fbeb: pop rsi;  pop r15;  pop rbp;  ret ;  
0x44fbea: pop r14;  pop r15;  pop rbp;  ret ;  
0x44fc6e: ret ;  
0x44fc6d: add esi, ebx;  ret ;  
0x44fc6c: je 0x44fc71;  ret ;  
0x44fc6b: add byte ptr [rbx + rax - 0xd], dh;  ret ;  
0x44fc90: mov dword ptr [rdx], eax;  ret ;  
0x44fc8f: mov qword ptr [rdx], rax;  ret ;  
0x44fc8e: mov qword ptr fs:[rdx], rax;  ret ;  
0x44fcb5: add byte ptr [rax], al;  ret ;  
0x44fccf: add byte ptr [rax], al;  ret ;  
0x44fccd: add byte ptr [rax], al;  add byte ptr [rax], al;  ret ;  
0x44fccc: and eax, 0;  ret ;  
0x44fcef: add byte ptr [rax], al;  ret ;  
0x44fced: add byte ptr [rax], al;  add byte ptr [rax], al;  ret ;  
0x44fcec: and eax, 0;  ret ;  
0x44fd0f: add byte ptr [rax], al;  ret ;  
0x44fd0d: add byte ptr [rax], al;  add byte ptr [rax], al;  ret ;  
0x44fd0c: and eax, 0;  ret ;  
0x44fd74: mov dword ptr [rdx], eax;  ret ;  
0x44fd73: mov qword ptr [rdx], rax;  ret ;  
0x44fd72: mov qword ptr fs:[rdx], rax;  ret ;  
0x44fd9c: and al, 0xfe;  ret ;  
0x44fd9b: insb byte ptr [rdi], dx;  and al, 0xfe;  ret ;  
0x44fd9a: fldcw word ptr [rsp - 2];  ret ;  
0x44fe25: pop rbx;  ret ;  
0x44fe23: xor eax, eax;  pop rbx;  ret ;  
0x44fe22: xor eax, eax;  pop rbx;  ret ;  
0x44fe21: xor eax, eax;  pop rbx;  ret ;  
0x45002e: add byte ptr [rax], al;  ret ;  
0x45002c: rol byte ptr [rax], 1;  add byte ptr [rax], al;  ret ;  
0x45006f: add byte ptr [rax], al;  ret ;  
0x45006d: rol byte ptr [rax], 1;  add byte ptr [rax], al;  ret ;  
0x450088: or cl, ch;  ret ;  
0x45009f: mov eax, 0xffffffff;  ret ;  
0x4500c9: ret ;  
0x4500c8: or bl, dh;  ret ;  
0x4500c7: ja 0x4500d1;  ret ;  
0x4500c6: push qword ptr [rdi + 8];  ret ;  
0x4500dd: mov eax, 0xffffffff;  ret ;  
0x4501a9: scasd eax, dword ptr [rdi];  ret ;  
0x450228: adc byte ptr [rax + 0x39], cl;  ret ;  
0x450227: adc byte ptr [r8 + 0x39], r9b;  ret ;  
0x450719: ret ;  
0x450718: pop rdi;  ret ;  
0x450717: pop r15;  ret ;  
0x450716: pop rsi;  pop r15;  ret ;  
0x450715: pop r14;  pop r15;  ret ;  
0x451ed3: pop rbp;  ret ;  
0x451ed2: pop rdi;  pop rbp;  ret ;  
0x451ed1: pop r15;  pop rbp;  ret ;  
0x451ed0: pop rsi;  pop r15;  pop rbp;  ret ;  
0x451ecf: pop r14;  pop r15;  pop rbp;  ret ;  
0x452117: pop rsp;  ret ;  
0x452116: pop r12;  ret ;  
0x452115: pop rbp;  pop r12;  ret ;  
0x452114: pop rbx;  pop rbp;  pop r12;  ret ;  
0x452113: lcall [rbx + 0x5d];  pop r12;  ret ;  
0x452219: pop rbp;  ret ;  
0x452218: pop r13;  ret ;  
0x452217: pop rsp;  pop r13;  ret ;  
0x452216: pop r12;  pop r13;  ret ;  
0x452215: pop rbp;  pop r12;  pop r13;  ret ;  
0x45225d: pop rbp;  ret ;  
0x45225c: pop r13;  ret ;  
0x45225b: pop rsp;  pop r13;  ret ;  
0x45225a: pop r12;  pop r13;  ret ;  
0x452259: pop rbp;  pop r12;  pop r13;  ret ;  
0x45230d: add esp, 8;  ret ;  
0x45230c: add rsp, 8;  ret ;  
0x452321: xor eax, eax;  ret ;  
0x452320: nop ;  xor eax, eax;  ret ;  
0x4523b4: and byte ptr [rax - 0x77], cl;  ret ;  
0x4523ce: and byte ptr [rax - 0x77], cl;  ret ;  
0x45247e: pop rdi;  ret ;  
0x45247d: pop r15;  ret ;  
0x45247c: pop rsi;  pop r15;  ret ;  
0x45247b: pop r14;  pop r15;  ret ;  
0x45247a: pop rbp;  pop r14;  pop r15;  ret ;  
0x4524da: pop rdi;  ret ;  
0x4524d9: pop r15;  ret ;  
0x4524d8: pop rsi;  pop r15;  ret ;  
0x4524d7: pop r14;  pop r15;  ret ;  
0x4524d6: pop rbp;  pop r14;  pop r15;  ret ;  
0x4524db: ret ;  
0x4524da: pop rdi;  ret ;  
0x4524d9: pop r15;  ret ;  
0x4524d8: pop rsi;  pop r15;  ret ;  
0x45272d: add ecx, ebp;  ret ;  
0x452865: mov eax, esi;  ret ;  
0x452864: mov rax, rsi;  ret ;  
0x452863: in eax, 0x48;  mov eax, esi;  ret ;  
0x452862: jne 0x452849;  mov rax, rsi;  ret ;  
0x4528e9: mov eax, esi;  ret ;  
0x4528e8: mov rax, rsi;  ret ;  
0x4528e6: jne 0x4528c1;  mov rax, rsi;  ret ;  
0x45297a: pop rbx;  ret ;  
0x452978: mov eax, eax;  pop rbx;  ret ;  
0x452977: mov rax, r8;  pop rbx;  ret ;  
0x452976: and byte ptr [rcx + rcx*4 - 0x40], cl;  pop rbx;  ret ;  
0x452a50: pop rbp;  ret ;  
0x452a4f: pop r13;  ret ;  
0x452a4e: pop rsp;  pop r13;  ret ;  
0x452a4d: pop r12;  pop r13;  ret ;  
0x452a4c: pop rbp;  pop r12;  pop r13;  ret ;  
0x452b16: pop rbp;  ret ;  
0x452b15: pop rdi;  pop rbp;  ret ;  
0x452b14: pop r15;  pop rbp;  ret ;  
0x452b13: pop rsi;  pop r15;  pop rbp;  ret ;  
0x452b12: pop r14;  pop r15;  pop rbp;  ret ;  
0x452beb: pop rbp;  ret ;  
0x452bea: pop rdi;  pop rbp;  ret ;  
0x452be9: pop r15;  pop rbp;  ret ;  
0x452be8: pop rsi;  pop r15;  pop rbp;  ret ;  
0x452be7: pop r14;  pop r15;  pop rbp;  ret ;  
0x452de0: pop rbp;  ret ;  
0x452ddf: pop rdi;  pop rbp;  ret ;  
0x452dde: pop r15;  pop rbp;  ret ;  
0x452ddd: pop rsi;  pop r15;  pop rbp;  ret ;  
0x452ddc: pop r14;  pop r15;  pop rbp;  ret ;  
0x452f4f: and byte ptr [rax + 1], cl;  ret ;  
0x452f4d: jl 0x452f73;  and byte ptr [rax + 1], cl;  ret ;  
0x45382a: pop rbp;  ret ;  
0x453829: pop rdi;  pop rbp;  ret ;  
0x453828: pop r15;  pop rbp;  ret ;  
0x453827: pop rsi;  pop r15;  pop rbp;  ret ;  
0x453826: pop r14;  pop r15;  pop rbp;  ret ;  
0x4543f7: add byte ptr [rcx - 0x77], cl;  ret ;  
0x4543f5: jge 0x454427;  add byte ptr [rcx - 0x77], cl;  ret ;  
0x454434: dec dword ptr [rcx - 0x77];  ret ;  
0x454469: dec dword ptr [rcx - 0x77];  ret ;  
0x45535a: pop rbp;  ret ;  
0x455359: pop rdi;  pop rbp;  ret ;  
0x455358: pop r15;  pop rbp;  ret ;  
0x455357: pop rsi;  pop r15;  pop rbp;  ret ;  
0x455356: pop r14;  pop r15;  pop rbp;  ret ;  
0x45541b: pop rbp;  ret ;  
0x45541a: pop rdi;  pop rbp;  ret ;  
0x455419: pop r15;  pop rbp;  ret ;  
0x455418: pop rsi;  pop r15;  pop rbp;  ret ;  
0x455417: pop r14;  pop r15;  pop rbp;  ret ;  
0x45573d: dec dword ptr [rcx - 0x77];  ret ;  
0x45573c: clc ;  dec dword ptr [rcx - 0x77];  ret ;  
0x455844: dec dword ptr [rcx + 0x39];  ret ;  
0x455a41: ret ;  
0x455a3f: add al, ch;  ret ;  
0x455a3e: add r8b, bpl;  ret ;  
0x455a3d: sub al, 0x4b;  add al, ch;  ret ;  
0x455c35: dec dword ptr [rcx + 0x29];  ret ;  
0x455c4a: ret ;  
0x455c47: add byte ptr [rcx + 0xf], cl;  ret ;  
0x457290: dec dword ptr [rcx - 0x77];  ret ;  
0x457420: ret 0x850f;  ret ;  
0x457f02: pop rbp;  ret ;  
0x457f01: pop r13;  ret ;  
0x457f00: pop rsp;  pop r13;  ret ;  
0x457eff: pop r12;  pop r13;  ret ;  
0x457efe: pop rbp;  pop r12;  pop r13;  ret ;  
0x457fe6: pop rbp;  ret ;  
0x457fe5: pop rbx;  pop rbp;  ret ;  
0x457fe3: mov eax, ebp;  pop rbx;  pop rbp;  ret ;  
0x45806a: pop rbp;  ret ;  
0x458069: pop rbx;  pop rbp;  ret ;  
0x458067: mov eax, ebp;  pop rbx;  pop rbp;  ret ;  
0x45809f: pop rbp;  ret ;  
0x45809e: pop rbx;  pop rbp;  ret ;  
0x45809c: mov eax, ebp;  pop rbx;  pop rbp;  ret ;  
0x4580be: pop rbp;  ret ;  
0x4580bd: pop rbx;  pop rbp;  ret ;  
0x4580bb: mov eax, ebp;  pop rbx;  pop rbp;  ret ;  
0x458288: pop rbp;  ret ;  
0x458287: pop rdi;  pop rbp;  ret ;  
0x458286: pop r15;  pop rbp;  ret ;  
0x458285: pop rsi;  pop r15;  pop rbp;  ret ;  
0x458284: pop r14;  pop r15;  pop rbp;  ret ;  
0x458800: add byte ptr [rax - 0x7d], cl;  ret ;  
0x4587fe: add byte ptr [rax], al;  add byte ptr [rax - 0x7d], cl;  ret ;  
0x458b5e: pop rbp;  ret ;  
0x458b5d: pop rdi;  pop rbp;  ret ;  
0x458b5c: pop r15;  pop rbp;  ret ;  
0x458b5b: pop rsi;  pop r15;  pop rbp;  ret ;  
0x458b5a: pop r14;  pop r15;  pop rbp;  ret ;  
0x458ce9: pop rbp;  ret ;  
0x458ce8: pop rdi;  pop rbp;  ret ;  
0x458ce7: pop r15;  pop rbp;  ret ;  
0x458ce6: pop rsi;  pop r15;  pop rbp;  ret ;  
0x458ce5: pop r14;  pop r15;  pop rbp;  ret ;  
0x458d14: pop rbp;  ret ;  
0x458d13: pop rdi;  pop rbp;  ret ;  
0x458d12: pop r15;  pop rbp;  ret ;  
0x458d11: pop rsi;  pop r15;  pop rbp;  ret ;  
0x458d10: pop r14;  pop r15;  pop rbp;  ret ;  
0x458d7b: add cl, ch;  ret ;  
0x458d79: mov al, 0;  add cl, ch;  ret ;  
0x459175: xchg eax, esp;  ret ;  
0x459173: xor byte ptr [rdi], cl;  xchg eax, esp;  ret ;  
0x459172: std ;  xor byte ptr [rdi], cl;  xchg eax, esp;  ret ;  
0x4591ae: xchg eax, esp;  ret ;  
0x4591ac: xor byte ptr [rdi], cl;  xchg eax, esp;  ret ;  
0x4591ab: std ;  xor byte ptr [rdi], cl;  xchg eax, esp;  ret ;  
0x459432: xchg eax, esp;  ret ;  
0x459430: xor byte ptr [rdi], cl;  xchg eax, esp;  ret ;  
0x45942f: std ;  xor byte ptr [rdi], cl;  xchg eax, esp;  ret ;  
0x45980f: add dword ptr [rax - 0x7d], ecx;  ret ;  
0x45ab4d: ret ;  
0x45ab4b: mov eax, eax;  ret ;  
0x45ab4a: mov eax, r8d;  ret ;  
0x45ab49: fild word ptr [rcx + rcx*4 - 0x40];  ret ;  
0x45ab59: add eax, eax;  ret ;  
0x45ab58: add eax, r8d;  ret ;  
0x45ab57: int1 ;  add eax, r8d;  ret ;  
0x45ab56: div ecx;  add eax, r8d;  ret ;  
0x45ac15: pop rsp;  ret ;  
0x45ac14: pop r12;  ret ;  
0x45ac13: pop rbp;  pop r12;  ret ;  
0x45ac12: rcr byte ptr [rbp + 0x41], 0x5c;  ret ;  
0x45ac11: mov eax, eax;  pop rbp;  pop r12;  ret ;  
0x45ac67: mov eax, 0xffffffff;  ret ;  
0x45ad25: pop rsp;  ret ;  
0x45ad24: pop r12;  ret ;  
0x45ad23: pop rbp;  pop r12;  ret ;  
0x45ad22: rcr byte ptr [rbp + 0x41], 0x5c;  ret ;  
0x45ad21: mov eax, eax;  pop rbp;  pop r12;  ret ;  
0x45ad77: mov eax, 0xffffffff;  ret ;  
0x45b0d4: pop rdi;  ret ;  
0x45b0d3: pop r15;  ret ;  
0x45b0d2: pop rsi;  pop r15;  ret ;  
0x45b0d1: pop r14;  pop r15;  ret ;  
0x45b0d0: pop rbp;  pop r14;  pop r15;  ret ;  
0x45b562: ret ;  
0x45b55f: fmul dword ptr [rcx + 0xf];  ret ;  
0x45b56a: ret ;  
0x45b8b7: ret 0xc283;  
0x45b8b6: xchg eax, ebp;  ret 0xc283;  
0x45ba37: jrcxz 0x45baae;  ret ;  
0x45c3f8: add byte ptr [rax - 0x7d], cl;  ret ;  
0x45c3f6: add dword ptr [rax], eax;  add byte ptr [rax - 0x7d], cl;  ret ;  
0x45c8eb: add byte ptr [rax - 0x7d], cl;  ret ;  
0x45c8e9: add dword ptr [rax], eax;  add byte ptr [rax - 0x7d], cl;  ret ;  
0x45ca02: pop rbp;  ret ;  
0x45ca01: pop r13;  ret ;  
0x45ca00: pop rsp;  pop r13;  ret ;  
0x45c9ff: pop r12;  pop r13;  ret ;  
0x45c9fe: pop rbp;  pop r12;  pop r13;  ret ;  
0x45ca25: pop rbp;  ret ;  
0x45ca24: pop r13;  ret ;  
0x45ca23: pop rsp;  pop r13;  ret ;  
0x45ca22: pop r12;  pop r13;  ret ;  
0x45ca21: pop rbp;  pop r12;  pop r13;  ret ;  
0x45cb2e: pop rsi;  ret ;  
0x45cb2d: pop r14;  ret ;  
0x45cb2c: pop rbp;  pop r14;  ret ;  
0x45cb2b: pop r13;  pop r14;  ret ;  
0x45cb2a: pop rsp;  pop r13;  pop r14;  ret ;  
0x45cb46: pop rsi;  ret ;  
0x45cb45: pop r14;  ret ;  
0x45cb44: pop rbp;  pop r14;  ret ;  
0x45cb43: pop r13;  pop r14;  ret ;  
0x45cb42: pop rsp;  pop r13;  pop r14;  ret ;  
0x45cbfe: pop rbp;  ret ;  
0x45cbfd: pop r13;  ret ;  
0x45cbfc: pop rsp;  pop r13;  ret ;  
0x45cbfb: pop r12;  pop r13;  ret ;  
0x45cbfa: pop rbp;  pop r12;  pop r13;  ret ;  
0x45cc14: pop rbp;  ret ;  
0x45cc13: pop r13;  ret ;  
0x45cc12: pop rsp;  pop r13;  ret ;  
0x45cc11: pop r12;  pop r13;  ret ;  
0x45cc10: pop rbp;  pop r12;  pop r13;  ret ;  
0x45ccc7: pop rbx;  ret ;  
0x45ccc5: mov eax, edx;  pop rbx;  ret ;  
0x45ccc3: add byte ptr [rax], al;  mov eax, edx;  pop rbx;  ret ;  
0x45cd9d: add byte ptr [rax], al;  ret ;  
0x45cd9b: fadd dword ptr [rax];  add byte ptr [rax], al;  ret ;  
0x45cde9: pop rbp;  ret ;  
0x45cde8: pop r13;  ret ;  
0x45cde7: pop rsp;  pop r13;  ret ;  
0x45cde6: pop r12;  pop r13;  ret ;  
0x45cde5: pop rbp;  pop r12;  pop r13;  ret ;  
0x45ce3e: add byte ptr [rax + 0x29], cl;  ret ;  
0x45ce3c: add byte ptr [rax], al;  add byte ptr [rax + 0x29], cl;  ret ;  
0x45ceaf: pop rbp;  ret ;  
0x45ceae: pop rdi;  pop rbp;  ret ;  
0x45cead: pop r15;  pop rbp;  ret ;  
0x45ceac: pop rsi;  pop r15;  pop rbp;  ret ;  
0x45ceab: pop r14;  pop r15;  pop rbp;  ret ;  
0x45cf9a: add byte ptr [rax - 0x77], cl;  ret ;  
0x45cf98: add byte ptr [rax], al;  add byte ptr [rax - 0x77], cl;  ret ;  
0x45cfbc: loop 0x45cf47;  ret ;  
0x45d0cd: pop rbp;  ret ;  
0x45d0cc: pop rdi;  pop rbp;  ret ;  
0x45d0cb: pop r15;  pop rbp;  ret ;  
0x45d0ca: pop rsi;  pop r15;  pop rbp;  ret ;  
0x45d0c9: pop r14;  pop r15;  pop rbp;  ret ;  
0x45d10e: pop rbp;  ret ;  
0x45d10d: pop rdi;  pop rbp;  ret ;  
0x45d10c: pop r15;  pop rbp;  ret ;  
0x45d10b: pop rsi;  pop r15;  pop rbp;  ret ;  
0x45d10a: pop r14;  pop r15;  pop rbp;  ret ;  
0x45d1cf: and byte ptr [rax + 1], cl;  ret ;  
0x45d1cd: jl 0x45d1f3;  and byte ptr [rax + 1], cl;  ret ;  
0x45d5be: ret ;  
0x45d5bc: fmul dword ptr [rdi];  ret ;  
0x45d65f: add byte ptr [rax + 0x63], cl;  ret ;  
0x45da8a: or al, 0x83;  ret ;  
0x45da89: push rdi;  or al, 0x83;  ret ;  
0x45da88: mov dh, 0x57;  or al, 0x83;  ret ;  
0x45dac2: sub eax, 0x83000000;  ret ;  
0x45dcd7: dec dword ptr [rax - 0x39];  ret ;  
0x45dd5a: pop rbp;  ret ;  
0x45dd59: pop rdi;  pop rbp;  ret ;  
0x45dd58: pop r15;  pop rbp;  ret ;  
0x45dd57: pop rsi;  pop r15;  pop rbp;  ret ;  
0x45dd56: pop r14;  pop r15;  pop rbp;  ret ;  
0x45e3bf: add cl, byte ptr [rax + 0x29];  ret ;  
0x45e3be: clc ;  add cl, byte ptr [rax + 0x29];  ret ;  
0x45e5a7: cmp byte ptr [rax + 0x39], cl;  ret ;  
0x45e5a6: push rax;  cmp byte ptr [rax + 0x39], cl;  ret ;  
0x45e6b2: add byte ptr [rax - 0x7d], cl;  ret ;  
0x45e6b0: or eax, dword ptr [rax];  add byte ptr [rax - 0x7d], cl;  ret ;  
0x45e809: add byte ptr [rax + 0x39], cl;  ret ;  
0x45f3b8: shr cl, cl;  ret ;  
0x45f8a2: add cl, ch;  ret ;  
0x45f8a0: add byte ptr [rax], al;  add cl, ch;  ret ;  
0x45fcbd: pop rbp;  ret ;  
0x45fcbc: pop rdi;  pop rbp;  ret ;  
0x45fcbb: pop r15;  pop rbp;  ret ;  
0x45fcba: pop rsi;  pop r15;  pop rbp;  ret ;  
0x45fcb9: pop r14;  pop r15;  pop rbp;  ret ;  
0x45fcdc: pop rbp;  ret ;  
0x45fcdb: pop rdi;  pop rbp;  ret ;  
0x45fcda: pop r15;  pop rbp;  ret ;  
0x45fcd9: pop rsi;  pop r15;  pop rbp;  ret ;  
0x45fcd8: pop r14;  pop r15;  pop rbp;  ret ;  
0x45fd81: pop rbp;  ret ;  
0x45fd80: pop rdi;  pop rbp;  ret ;  
0x45fd7f: pop r15;  pop rbp;  ret ;  
0x45fd7e: pop rsi;  pop r15;  pop rbp;  ret ;  
0x45fd7d: pop r14;  pop r15;  pop rbp;  ret ;  
0x45ffbe: dec dword ptr [rcx + 0x39];  ret ;  
0x4600a7: dec dword ptr [rcx + 0x39];  ret ;  
0x4605cd: dec dword ptr [rcx - 0x77];  ret ;  
0x4605cc: clc ;  dec dword ptr [rcx - 0x77];  ret ;  
0x4606bb: dec dword ptr [rcx + 0x39];  ret ;  
0x4607df: dec dword ptr [rcx + 0x39];  ret ;  
0x460868: add byte ptr [rcx - 0x77], cl;  ret ;  
0x460866: add byte ptr [rax], al;  add byte ptr [rcx - 0x77], cl;  ret ;  
0x460dd7: dec dword ptr [rcx + 0x39];  ret ;  
0x461018: dec dword ptr [rcx + 0x39];  ret ;  
0x461286: sbb al, byte ptr [rcx - 0x7d];  ret ;  
0x46145a: sbb al, byte ptr [rcx - 0x7d];  ret ;  
0x461ed7: push rsi;  ret ;  
0x461f37: add byte ptr [rcx - 0x77], cl;  ret ;  
0x461f35: add byte ptr [rax], al;  add byte ptr [rcx - 0x77], cl;  ret ;  
0x462502: pop rbp;  ret ;  
0x462501: pop r13;  ret ;  
0x462500: pop rsp;  pop r13;  ret ;  
0x4624ff: pop r12;  pop r13;  ret ;  
0x4624fe: pop rbp;  pop r12;  pop r13;  ret ;  
0x4625b0: ret ;  
0x4625af: add bl, dh;  ret ;  
0x4625ae: add byte ptr [rax], al;  ret ;  
0x4625ad: add byte ptr [rax], al;  add bl, dh;  ret ;  
0x4625ac: add byte ptr [rax], 0;  add bl, dh;  ret ;  
0x4628b8: pop rsp;  ret ;  
0x4628b7: pop r12;  ret ;  
0x4628b6: pop rbp;  pop r12;  ret ;  
0x4628b5: pop rbx;  pop rbp;  pop r12;  ret ;  
0x4628b4: loopne 0x462911;  pop rbp;  pop r12;  ret ;  
0x4628e2: pop rsp;  ret ;  
0x4628e1: pop r12;  ret ;  
0x4628e0: pop rbp;  pop r12;  ret ;  
0x4628df: pop rbx;  pop rbp;  pop r12;  ret ;  
0x4628de: loopne 0x46293b;  pop rbp;  pop r12;  ret ;  
0x462b0b: or al, 0x7e;  ret ;  
0x462b0a: int3 ;  or al, 0x7e;  ret ;  
0x462b09: int3 ;  int3 ;  or al, 0x7e;  ret ;  
0x462b08: int3 ;  int3 ;  int3 ;  or al, 0x7e;  ret ;  
0x462c9b: or al, 0x7e;  ret ;  
0x462c9a: int3 ;  or al, 0x7e;  ret ;  
0x462c99: int3 ;  int3 ;  or al, 0x7e;  ret ;  
0x462c98: int3 ;  int3 ;  int3 ;  or al, 0x7e;  ret ;  
0x462fa0: pop rsp;  ret ;  
0x462f9f: pop r12;  ret ;  
0x462f9e: pop rbp;  pop r12;  ret ;  
0x462f9d: pop rbx;  pop rbp;  pop r12;  ret ;  
0x462f9c: loopne 0x462ff9;  pop rbp;  pop r12;  ret ;  
0x463012: pop rsp;  ret ;  
0x463011: pop r12;  ret ;  
0x463010: pop rbp;  pop r12;  ret ;  
0x46300f: pop rbx;  pop rbp;  pop r12;  ret ;  
0x46300e: loopne 0x46306b;  pop rbp;  pop r12;  ret ;  
0x4634a3: pop rsp;  ret ;  
0x4634a2: pop r12;  ret ;  
0x4634a1: pop rbp;  pop r12;  ret ;  
0x4634a0: pop rbx;  pop rbp;  pop r12;  ret ;  
0x46349f: add byte ptr [rbx + 0x5d], bl;  pop r12;  ret ;  
0x4634e0: add byte ptr [rax - 0x39], cl;  ret ;  
0x4634de: add byte ptr [rax], al;  add byte ptr [rax - 0x39], cl;  ret ;  
0x4635b0: pop rsp;  ret ;  
0x4635af: pop r12;  ret ;  
0x4635ae: pop rbp;  pop r12;  ret ;  
0x4635ad: rcr byte ptr [rbp + 0x41], 1;  pop rsp;  ret ;  
0x4635ac: mov eax, edx;  pop rbp;  pop r12;  ret ;  
0x46360f: pop rsp;  ret ;  
0x46360e: pop r12;  ret ;  
0x46360d: pop rbp;  pop r12;  ret ;  
0x46360c: rcr byte ptr [rbp + 0x41], 1;  pop rsp;  ret ;  
0x46360b: mov eax, edx;  pop rbp;  pop r12;  ret ;  
0x4636d0: pop rbp;  ret ;  
0x4636cf: pop rbx;  pop rbp;  ret ;  
0x4636ce: or byte ptr [rbx + 0x5d], bl;  ret ;  
0x4636cc: add esp, 8;  pop rbx;  pop rbp;  ret ;  
0x4637af: pop rsi;  ret ;  
0x4637ae: pop r14;  ret ;  
0x4637ad: pop rbp;  pop r14;  ret ;  
0x4637ac: pop r13;  pop r14;  ret ;  
0x4637ab: pop rsp;  pop r13;  pop r14;  ret ;  
0x4637f4: pop rsi;  ret ;  
0x4637f3: pop r14;  ret ;  
0x4637f2: pop rbp;  pop r14;  ret ;  
0x4637f1: pop r13;  pop r14;  ret ;  
0x4637f0: pop rsp;  pop r13;  pop r14;  ret ;  
0x463802: pop rsi;  ret ;  
0x463801: pop r14;  ret ;  
0x463800: pop rbp;  pop r14;  ret ;  
0x4637ff: pop r13;  pop r14;  ret ;  
0x4637fe: pop rsp;  pop r13;  pop r14;  ret ;  
0x4639cd: pop rdi;  ret ;  
0x4639cc: pop r15;  ret ;  
0x4639cb: pop rsi;  pop r15;  ret ;  
0x4639ca: pop r14;  pop r15;  ret ;  
0x4639c9: pop rbp;  pop r14;  pop r15;  ret ;  
0x463cb6: pop rdi;  ret ;  
0x463cb5: pop r15;  ret ;  
0x463cb4: pop rsi;  pop r15;  ret ;  
0x463cb3: pop r14;  pop r15;  ret ;  
0x463cb2: pop rbp;  pop r14;  pop r15;  ret ;  
0x463d0f: pop rdi;  ret ;  
0x463d0e: pop r15;  ret ;  
0x463d0d: pop rsi;  pop r15;  ret ;  
0x463d0c: pop r14;  pop r15;  ret ;  
0x463d0b: pop rbp;  pop r14;  pop r15;  ret ;  
0x463e14: pop rbp;  ret ;  
0x463e13: pop r13;  ret ;  
0x463e12: pop rsp;  pop r13;  ret ;  
0x463e11: pop r12;  pop r13;  ret ;  
0x463e10: pop rbp;  pop r12;  pop r13;  ret ;  
0x463e40: pop rbp;  ret ;  
0x463e3f: pop r13;  ret ;  
0x463e3e: pop rsp;  pop r13;  ret ;  
0x463e3d: pop r12;  pop r13;  ret ;  
0x463e3c: pop rbp;  pop r12;  pop r13;  ret ;  
0x463ee4: pop rbp;  ret ;  
0x463ee3: pop r13;  ret ;  
0x463ee2: pop rsp;  pop r13;  ret ;  
0x463ee1: pop r12;  pop r13;  ret ;  
0x463ee0: pop rbp;  pop r12;  pop r13;  ret ;  
0x463f10: pop rbp;  ret ;  
0x463f0f: pop r13;  ret ;  
0x463f0e: pop rsp;  pop r13;  ret ;  
0x463f0d: pop r12;  pop r13;  ret ;  
0x463f0c: pop rbp;  pop r12;  pop r13;  ret ;  
0x463fdb: pop rdi;  ret ;  
0x463fda: pop r15;  ret ;  
0x463fd9: pop rsi;  pop r15;  ret ;  
0x463fd8: pop r14;  pop r15;  ret ;  
0x463fd7: pop rbp;  pop r14;  pop r15;  ret ;  
0x464174: ret ;  
0x464173: in eax, dx;  ret ;  
0x464172: jne 0x464161;  ret ;  
0x464171: sal byte ptr [rbp - 0x13], cl;  ret ;  
0x464170: test edx, edx;  jne 0x464161;  ret ;  
0x4641b0: ret ;  
0x4641af: ret ;  
0x4641ae: mov dword ptr [rax + 0x40], ecx;  ret ;  
0x4641ad: mov qword ptr [rax + 0x40], rcx;  ret ;  
0x4641ac: adc byte ptr [rax - 0x77], cl;  ret ;  
0x4641f0: ret ;  
0x4641ef: ret ;  
0x4641ee: mov dword ptr [rax + 0x40], ecx;  ret ;  
0x4641ed: mov qword ptr [rax + 0x40], rcx;  ret ;  
0x4641ec: adc byte ptr [rax - 0x77], cl;  ret ;  
0x46423c: pop rbx;  ret ;  
0x464239: add esp, 0x20;  pop rbx;  ret ;  
0x464238: add rsp, 0x20;  pop rbx;  ret ;  
0x4642f5: pop rdi;  ret ;  
0x4642f4: pop r15;  ret ;  
0x4642f3: pop rsi;  pop r15;  ret ;  
0x4642f2: pop r14;  pop r15;  ret ;  
0x4642f1: pop rbp;  pop r14;  pop r15;  ret ;  
0x46439c: pop rdi;  ret ;  
0x46439b: pop r15;  ret ;  
0x46439a: pop rsi;  pop r15;  ret ;  
0x464399: pop r14;  pop r15;  ret ;  
0x464398: pop rbp;  pop r14;  pop r15;  ret ;  
0x4644fd: pop rbx;  ret ;  
0x4644fb: mov eax, edx;  pop rbx;  ret ;  
0x4644f9: mov edx, dword ptr [rax];  mov eax, edx;  pop rbx;  ret ;  
0x4645e1: mov eax, 0xffffffff;  ret ;  
0x464609: pop rbx;  ret ;  
0x46461a: pop rbx;  ret ;  
0x464618: mov eax, dword ptr [rsi];  pop rbx;  ret ;  
0x464616: mov dword ptr [rax], edx;  mov eax, dword ptr [rsi];  pop rbx;  ret ;  
0x4646da: pop rbx;  ret ;  
0x4646d8: mov eax, dword ptr [rdx];  pop rbx;  ret ;  
0x4646d6: mov dword ptr [rax], ecx;  mov eax, dword ptr [rdx];  pop rbx;  ret ;  
0x4647a1: mov eax, 0xffffffff;  ret ;  
0x4647c9: pop rbx;  ret ;  
0x464803: pop rbx;  ret ;  
0x464801: mov eax, dword ptr [rsi];  pop rbx;  ret ;  
0x464a81: or byte ptr [rcx - 0x77], cl;  ret ;  
0x464a80: or byte ptr [r9 - 0x77], r9b;  ret ;  
0x464b76: pop rdi;  ret ;  
0x464b75: pop r15;  ret ;  
0x464b74: pop rsi;  pop r15;  ret ;  
0x464b73: pop r14;  pop r15;  ret ;  
0x464b72: pop rbp;  pop r14;  pop r15;  ret ;  
0x464ce6: pop rdi;  ret ;  
0x464ce5: pop r15;  ret ;  
0x464ce4: pop rsi;  pop r15;  ret ;  
0x464ce3: pop r14;  pop r15;  ret ;  
0x464ce2: pop rbp;  pop r14;  pop r15;  ret ;  
0x46501d: je 0x465021;  ret ;  
0x46501b: xor byte ptr [rax], al;  je 0x465021;  ret ;  
0x46504f: pop rsp;  ret ;  
0x46504e: pop r12;  ret ;  
0x46504d: pop rbp;  pop r12;  ret ;  
0x46504c: pop rbx;  pop rbp;  pop r12;  ret ;  
0x46504b: je 0x4650a8;  pop rbp;  pop r12;  ret ;  
0x4650f4: pop rsp;  ret ;  
0x4650f3: pop r12;  ret ;  
0x4650f2: pop rbp;  pop r12;  ret ;  
0x4650f1: pop rbx;  pop rbp;  pop r12;  ret ;  
0x4650f0: je 0x46514d;  pop rbp;  pop r12;  ret ;  
0x465151: pop rbx;  ret ;  
0x46514f: xor eax, eax;  pop rbx;  ret ;  
0x46514d: mov dword ptr [rbx], ecx;  xor eax, eax;  pop rbx;  ret ;  
0x4651ef: pop rbx;  ret ;  
0x4651ed: add byte ptr [rax], al;  pop rbx;  ret ;  
0x4651eb: add byte ptr [rax], al;  add byte ptr [rax], al;  pop rbx;  ret ;  
0x465233: pop rbx;  ret ;  
0x465232: out dx, eax;  pop rbx;  ret ;  
0x465231: and ebp, edi;  pop rbx;  ret ;  
0x465230: and dword ptr [rbx], 0xffffffef;  pop rbx;  ret ;  
0x465277: pop rbx;  ret ;  
0x465276: out dx, eax;  pop rbx;  ret ;  
0x465275: and ebp, edi;  pop rbx;  ret ;  
0x465274: and dword ptr [rbx], 0xffffffef;  pop rbx;  ret ;  
0x4652d0: add al, 0x3a;  ret ;  
0x4652cf: lea eax, [rdx + rdi];  ret ;  
0x4652ce: lea eax, [rdx + rdi];  ret ;  
0x4652cd: jb 0x4652c1;  lea eax, [rdx + rdi];  ret ;  
0x4652e1: lea eax, [rax - 1];  ret ;  
0x4652e0: lea eax, [r8 - 1];  ret ;  
0x465333: pop rbp;  ret ;  
0x465332: pop rbx;  pop rbp;  ret ;  
0x465331: or byte ptr [rbx + 0x5d], bl;  ret ;  
0x46532f: add esp, 8;  pop rbx;  pop rbp;  ret ;  
0x4653e7: sub eax, edx;  ret ;  
0x4653e4: shr edx, 2;  sub eax, edx;  ret ;  
0x4653fc: sub eax, edx;  ret ;  
0x4653f9: shr edx, 2;  sub eax, edx;  ret ;  
0x4653ff: mov eax, 0xffffffff;  ret ;  
0x465466: ret ;  
0x465464: xor eax, eax;  ret ;  
0x465462: mov dword ptr [rax], edx;  xor eax, eax;  ret ;  
0x465520: or cl, byte ptr [rax - 0x77];  ret ;  
0x465549: ret ;  
0x465548: pop rbx;  ret ;  
0x465547: add byte ptr [rbx - 0xd], bl;  ret ;  
0x465546: add byte ptr [rax], al;  pop rbx;  ret ;  
0x465545: add byte ptr [rax], al;  add byte ptr [rbx - 0xd], bl;  ret ;  
0x465572: cmove eax, ecx;  ret ;  
0x465571: cmove r8, rcx;  ret ;  
0x465570: cmove r8, rcx;  ret ;  
0x465579: mov eax, 0xffffffff;  ret ;  
0x465581: xor eax, eax;  ret ;  
0x465580: nop ;  xor eax, eax;  ret ;  
0x46557f: nop ;  xor eax, eax;  ret ;  
0x46557e: ret ;  nop ;  xor eax, eax;  ret ;  
0x465597: ret ;  
0x465596: ret ;  
0x465595: mov eax, dword ptr [rax + 0x4c];  ret ;  
0x465594: mov rax, qword ptr [rax + 0x4c];  ret ;  
0x465593: mov rax, qword ptr [rax + 0x4c];  ret ;  
0x465646: pop rsi;  ret ;  
0x465645: pop r14;  ret ;  
0x465644: pop rbp;  pop r14;  ret ;  
0x465643: pop r13;  pop r14;  ret ;  
0x465642: pop rsp;  pop r13;  pop r14;  ret ;  
0x465661: pop rsi;  ret ;  
0x465660: pop r14;  ret ;  
0x46565f: pop rbp;  pop r14;  ret ;  
0x46565e: pop r13;  pop r14;  ret ;  
0x46565d: pop rsp;  pop r13;  pop r14;  ret ;  
0x46567a: pop rsi;  ret ;  
0x465679: pop r14;  ret ;  
0x465678: pop rbp;  pop r14;  ret ;  
0x465677: pop r13;  pop r14;  ret ;  
0x465676: pop rsp;  pop r13;  pop r14;  ret ;  
0x465716: pop rbp;  ret ;  
0x465715: pop r13;  ret ;  
0x465714: pop rsp;  pop r13;  ret ;  
0x465713: pop r12;  pop r13;  ret ;  
0x465712: pop rbp;  pop r12;  pop r13;  ret ;  
0x46572f: pop rbp;  ret ;  
0x46572e: pop r13;  ret ;  
0x46572d: pop rsp;  pop r13;  ret ;  
0x46572c: pop r12;  pop r13;  ret ;  
0x46572b: pop rbp;  pop r12;  pop r13;  ret ;  
0x465740: pop rbp;  ret ;  
0x46573f: pop r13;  ret ;  
0x46573e: pop rsp;  pop r13;  ret ;  
0x46573d: pop r12;  pop r13;  ret ;  
0x46573c: pop rbp;  pop r12;  pop r13;  ret ;  
0x465808: pop rsi;  ret ;  
0x465807: pop r14;  ret ;  
0x465806: pop rbp;  pop r14;  ret ;  
0x465805: pop r13;  pop r14;  ret ;  
0x465804: pop rsp;  pop r13;  pop r14;  ret ;  
0x465821: pop rsi;  ret ;  
0x465820: pop r14;  ret ;  
0x46581f: pop rbp;  pop r14;  ret ;  
0x46581e: pop r13;  pop r14;  ret ;  
0x46581d: pop rsp;  pop r13;  pop r14;  ret ;  
0x46583a: pop rsi;  ret ;  
0x465839: pop r14;  ret ;  
0x465838: pop rbp;  pop r14;  ret ;  
0x465837: pop r13;  pop r14;  ret ;  
0x465836: pop rsp;  pop r13;  pop r14;  ret ;  
0x4658d0: pop rbp;  ret ;  
0x4658cf: pop rdi;  pop rbp;  ret ;  
0x4658ce: pop r15;  pop rbp;  ret ;  
0x4658cd: pop rsi;  pop r15;  pop rbp;  ret ;  
0x4658cc: pop r14;  pop r15;  pop rbp;  ret ;  
0x465a61: pop rbp;  ret ;  
0x465a60: pop r13;  ret ;  
0x465a5f: pop rsp;  pop r13;  ret ;  
0x465a5e: pop r12;  pop r13;  ret ;  
0x465a5d: pop rbp;  pop r12;  pop r13;  ret ;  
0x465b0c: pop rsi;  ret ;  
0x465b0b: pop r14;  ret ;  
0x465b0a: pop rbp;  pop r14;  ret ;  
0x465b09: pop r13;  pop r14;  ret ;  
0x465b08: pop rsp;  pop r13;  pop r14;  ret ;  
0x465b82: add dword ptr [rax - 0x77], ecx;  ret ;  
0x465bb8: pop rbp;  ret ;  
0x465bb7: pop rbx;  pop rbp;  ret ;  
0x465bb5: xor eax, eax;  pop rbx;  pop rbp;  ret ;  
0x465c15: pop rdi;  ret ;  
0x465c14: pop r15;  ret ;  
0x465c13: pop rsi;  pop r15;  ret ;  
0x465c12: pop r14;  pop r15;  ret ;  
0x465c11: pop rbp;  pop r14;  pop r15;  ret ;  
0x465c58: add al, ch;  ret ;  
0x465c56: and al, 0x14;  add al, ch;  ret ;  
0x465c55: and al, 0x14;  add al, ch;  ret ;  
0x465cad: pop rdi;  ret ;  
0x465cac: pop r15;  ret ;  
0x465cab: pop rsi;  pop r15;  ret ;  
0x465caa: pop r14;  pop r15;  ret ;  
0x465ca9: pop rbp;  pop r14;  pop r15;  ret ;  
0x465cfe: dec byte ptr [rax - 0x77];  ret ;  
0x465d47: xor eax, eax;  ret ;  
0x465d46: xor rax, rax;  ret ;  
0x465d45: add al, 0x48;  xor eax, eax;  ret ;  
0x465d44: jne 0x465d4a;  xor rax, rax;  ret ;  
0x465de4: bsf eax, edx;  ret ;  
0x465de3: bsf rax, rdx;  ret ;  
0x465e50: bsf eax, edx;  ret ;  
0x465e4f: bsf rax, rdx;  ret ;  
0x465e61: bsf eax, edx;  ret ;  
0x465e60: bsf rax, rdx;  ret ;  
0x465eb0: add byte ptr [rcx + 0x39], cl;  ret ;  
0x465f00: clc ;  ret ;  
0x465eff: sub eax, edi;  ret ;  
0x465efe: sub rax, rdi;  ret ;  
0x465efd: ror byte ptr [rax + 0x29], 1;  clc ;  ret ;  
0x465efc: add eax, edx;  sub rax, rdi;  ret ;  
0x465f57: clc ;  ret ;  
0x465f56: sub eax, edi;  ret ;  
0x465f55: sub rax, rdi;  ret ;  
0x465f54: ror byte ptr [rax + 0x29], 1;  clc ;  ret ;  
0x465f53: add eax, edx;  sub rax, rdi;  ret ;  
0x465fbd: clc ;  ret ;  
0x465fbc: add eax, edi;  ret ;  
0x465fbb: add rax, rdi;  ret ;  
0x465fba: ror byte ptr [rax + 1], 0xf8;  ret ;  
0x465fb9: mov ebp, 0xf80148c0;  ret ;  
0x465ff7: xlatb ;  ret ;  
0x46604b: add al, 0x37;  ret ;  
0x46604a: lea eax, [rdi + rsi];  ret ;  
0x466049: lea rax, [rdi + rsi];  ret ;  
0x466090: outsd dx, dword ptr [rsi];  ret ;  
0x46608d: xor byte ptr [rsi + 0xf], ah;  outsd dx, dword ptr [rsi];  ret ;  
0x46608c: push rdi;  xor byte ptr [rsi + 0xf], ah;  outsd dx, dword ptr [rsi];  ret ;  
0x4660ca: outsd dx, dword ptr [rsi];  ret ;  
0x4660c7: shl byte ptr [rsi + 0xf], 1;  outsd dx, dword ptr [rsi];  ret ;  
0x4660c6: xlatb ;  shl byte ptr [rsi + 0xf], 1;  outsd dx, dword ptr [rsi];  ret ;  
0x46614f: add al, 0x31;  ret ;  
0x46614e: lea eax, [rcx + rsi];  ret ;  
0x46614d: lea rax, [rcx + rsi];  ret ;  
0x466171: xor eax, eax;  ret ;  
0x466241: clc ;  ret ;  
0x466240: add eax, edi;  ret ;  
0x46623f: add rax, rdi;  ret ;  
0x46623d: mov ebp, 0xf80148c6;  ret ;  
0x4664cb: pop rdi;  ret ;  
0x4664ca: pop r15;  ret ;  
0x4664c9: pop rsi;  pop r15;  ret ;  
0x4664c8: pop r14;  pop r15;  ret ;  
0x4664c7: pop rbp;  pop r14;  pop r15;  ret ;  
0x466515: or cl, ch;  ret ;  
0x466670: dec dword ptr [rax - 0x39];  ret ;  
0x46670c: xor cl, byte ptr [rax + 0x39];  ret ;  
0x466754: xor cl, byte ptr [rax + 0x39];  ret ;  
0x46683a: add dword ptr [rax + 0x39], ecx;  ret ;  
0x4668ad: pop rdi;  ret ;  
0x4668ac: pop r15;  ret ;  
0x4668ab: pop rsi;  pop r15;  ret ;  
0x4668aa: pop r14;  pop r15;  ret ;  
0x4668a9: pop rbp;  pop r14;  pop r15;  ret ;  
0x4668f3: clc ;  ret ;  
0x4668f2: mov eax, edi;  ret ;  
0x4668f1: mov rax, rdi;  ret ;  
0x4668f0: add byte ptr [rax - 0x77], cl;  clc ;  ret ;  
0x4668ef: add byte ptr [rax], al;  mov rax, rdi;  ret ;  
0x466a05: pop rdi;  ret ;  
0x466a04: pop r15;  ret ;  
0x466a03: pop rsi;  pop r15;  ret ;  
0x466a02: pop r14;  pop r15;  ret ;  
0x466a01: pop rbp;  pop r14;  pop r15;  ret ;  
0x466a62: xor eax, eax;  ret ;  
0x466abf: add dword ptr [rax - 0x7d], ecx;  ret ;  
0x466ae1: add byte ptr [rax - 0x7d], cl;  ret ;  
0x466b10: pop rsi;  ret ;  
0x466b0f: pop r14;  ret ;  
0x466b0e: pop rbp;  pop r14;  ret ;  
0x466b0d: pop r13;  pop r14;  ret ;  
0x466b0c: pop rsp;  pop r13;  pop r14;  ret ;  
0x466b3a: pop rsi;  ret ;  
0x466b39: pop r14;  ret ;  
0x466b38: pop rbp;  pop r14;  ret ;  
0x466b37: pop r13;  pop r14;  ret ;  
0x466b36: pop rsp;  pop r13;  pop r14;  ret ;  
0x466b9a: add dword ptr [rax - 0x7d], ecx;  ret ;  
0x466b99: ret 0x4801;  
0x466bc2: add dword ptr [rax - 0x7d], ecx;  ret ;  
0x466bc1: ret 0x4801;  
0x466bde: pop rsi;  ret ;  
0x466bdd: pop r14;  ret ;  
0x466bdc: pop rbp;  pop r14;  ret ;  
0x466bdb: pop r13;  pop r14;  ret ;  
0x466bda: pop rsp;  pop r13;  pop r14;  ret ;  
0x466dd1: je 0x466df1;  ret ;  
0x466dd0: pcmpeqb mm3, qword ptr [rsi];  ret ;  
0x466dcf: loope 0x466de0;  je 0x466df1;  ret ;  
0x466dce: and cl, 0xf;  je 0x466df1;  ret ;  
0x466de9: add eax, 2;  ret ;  
0x466de8: add rax, 2;  ret ;  
0x466df2: add eax, 1;  ret ;  
0x466df1: add rax, 1;  ret ;  
0x466e02: add eax, 3;  ret ;  
0x466e01: add rax, 3;  ret ;  
0x466e12: xor eax, eax;  ret ;  
0x466e11: xor rax, rax;  ret ;  
0x466e0f: add byte ptr [rax], al;  xor rax, rax;  ret ;  
0x466e26: add byte ptr [rax], al;  ret ;  
0x466e24: add dword ptr [rax], eax;  add byte ptr [rax], al;  ret ;  
0x466e23: rol byte ptr [rcx], 0;  add byte ptr [rax], al;  ret ;  
0x466e36: add byte ptr [rax], al;  ret ;  
0x466e34: add al, byte ptr [rax];  add byte ptr [rax], al;  ret ;  
0x466e33: rol byte ptr [rdx], 0;  add byte ptr [rax], al;  ret ;  
0x466e46: add byte ptr [rax], al;  ret ;  
0x466e44: add eax, dword ptr [rax];  add byte ptr [rax], al;  ret ;  
0x466e43: rol byte ptr [rbx], 0;  add byte ptr [rax], al;  ret ;  
0x466e56: add byte ptr [rax], al;  ret ;  
0x466e54: add al, 0;  add byte ptr [rax], al;  ret ;  
0x466e66: add byte ptr [rax], al;  ret ;  
0x466e76: add byte ptr [rax], al;  ret ;  
0x466e73: rol byte ptr [rsi], 0;  add byte ptr [rax], al;  ret ;  
0x466e86: add byte ptr [rax], al;  ret ;  
0x466e83: rol byte ptr [rdi], 0;  add byte ptr [rax], al;  ret ;  
0x466f1c: ret ;  
0x466f1b: or bl, dh;  ret ;  
0x466f1a: jno 0x466f24;  ret ;  
0x466f19: mov dword ptr [rcx + 8], esi;  ret ;  
0x466f18: mov dword ptr [r9 + 8], esi;  ret ;  
0x466fb4: ret ;  
0x466fb3: pop rsp;  ret ;  
0x466fb2: pop r12;  ret ;  
0x466fb1: pop rbp;  pop r12;  ret ;  
0x466fb0: pop rbx;  pop rbp;  pop r12;  ret ;  
0x466fb9: mov eax, 0xffffffff;  ret ;  
0x4671d6: pop rsp;  ret ;  
0x4671d5: pop r12;  ret ;  
0x4671d4: pop rbp;  pop r12;  ret ;  
0x4671d3: pop rbx;  pop rbp;  pop r12;  ret ;  
0x4671d2: lcall [rbx + 0x5d];  pop r12;  ret ;  
0x467250: pop rsp;  ret ;  
0x46724f: pop r12;  ret ;  
0x46724e: pop rbp;  pop r12;  ret ;  
0x46724c: sub eax, ebp;  pop rbp;  pop r12;  ret ;  
0x4673e9: pop rdi;  ret ;  
0x4673e8: pop r15;  ret ;  
0x4673e7: pop rsi;  pop r15;  ret ;  
0x4673e6: pop r14;  pop r15;  ret ;  
0x4673e5: pop rbp;  pop r14;  pop r15;  ret ;  
0x4675c1: ret ;  
0x4675c0: sal bl, 1;  ret ;  
0x4675bf: mov eax, edx;  ret ;  
0x4675be: mov rax, rdx;  ret ;  
0x4675bd: mov bl, 0x48;  mov eax, edx;  ret ;  
0x4675c9: ret ;  
0x4675c8: add bl, dh;  ret ;  
0x4675c7: add byte ptr [rax], al;  ret ;  
0x4675c6: add byte ptr [rax], r8b;  ret ;  
0x4675cb: xor eax, eax;  ret ;  
0x4675ca: ret ;  xor eax, eax;  ret ;  
0x4675c9: ret ;  xor eax, eax;  ret ;  
0x4675c8: add bl, dh;  ret ;  xor eax, eax;  ret ;  
0x4675d1: add byte ptr [rax], al;  ret ;  
0x4675cf: add dword ptr [rax], eax;  add byte ptr [rax], al;  ret ;  
0x4675ce: mov eax, 1;  ret ;  
0x4675d7: add byte ptr [rax], al;  ret ;  
0x4675d5: add al, byte ptr [rax];  add byte ptr [rax], al;  ret ;  
0x4675d4: mov eax, 2;  ret ;  
0x4675ff: ret ;  
0x4675fe: ret ;  
0x4675fd: jne 0x4675f1;  ret ;  
0x4675fc: sal byte ptr [rbp - 0xe], cl;  ret ;  
0x4675fb: test edx, edx;  jne 0x4675f1;  ret ;  
0x4677bd: pop rdi;  ret ;  
0x4677bc: pop r15;  ret ;  
0x4677bb: pop rsi;  pop r15;  ret ;  
0x4677ba: pop r14;  pop r15;  ret ;  
0x4677b9: pop rbp;  pop r14;  pop r15;  ret ;  
0x467936: syscall ;  ret ;  
0x467934: add byte ptr [rax], al;  syscall ;  ret ;  
0x467968: add eax, esi;  ret ;  
0x467965: imul esi, esi, 0x3c;  add eax, esi;  ret ;  
0x467a1e: ret 0xc269;  
0x467ba6: pop rbp;  ret ;  
0x467ba5: pop r13;  ret ;  
0x467ba4: pop rsp;  pop r13;  ret ;  
0x467ba3: pop r12;  pop r13;  ret ;  
0x467ba2: pop rbp;  pop r12;  pop r13;  ret ;  
0x467c26: ret 0xc269;  
0x467c68: add byte ptr [rax - 0x7d], cl;  ret ;  
0x467c9a: pop rdi;  ret ;  
0x467c99: pop r15;  ret ;  
0x467c98: pop rsi;  pop r15;  ret ;  
0x467c97: pop r14;  pop r15;  ret ;  
0x467c96: pop rbp;  pop r14;  pop r15;  ret ;  
0x467d9d: pop rdi;  ret ;  
0x467d9c: pop r15;  ret ;  
0x467d9b: pop rsi;  pop r15;  ret ;  
0x467d9a: pop r14;  pop r15;  ret ;  
0x467d99: pop rbp;  pop r14;  pop r15;  ret ;  
0x467e74: pop rbp;  ret ;  
0x467e73: pop r13;  ret ;  
0x467e72: pop rsp;  pop r13;  ret ;  
0x467e71: pop r12;  pop r13;  ret ;  
0x467e70: pop rbp;  pop r12;  pop r13;  ret ;  
0x467f40: pop rbp;  ret ;  
0x467f3f: pop r13;  ret ;  
0x467f3e: pop rsp;  pop r13;  ret ;  
0x467f3d: pop r12;  pop r13;  ret ;  
0x467f3c: pop rbp;  pop r12;  pop r13;  ret ;  
0x468118: add byte ptr [rax - 0x77], cl;  ret ;  
0x468116: add byte ptr [rax], al;  add byte ptr [rax - 0x77], cl;  ret ;  
0x46818c: pop rsi;  ret ;  
0x46818b: pop r14;  ret ;  
0x46818a: pop rbp;  pop r14;  ret ;  
0x468189: pop r13;  pop r14;  ret ;  
0x468188: pop rsp;  pop r13;  pop r14;  ret ;  
0x4681d2: pop rsi;  ret ;  
0x4681d1: pop r14;  ret ;  
0x4681d0: pop rbp;  pop r14;  ret ;  
0x4681cf: pop r13;  pop r14;  ret ;  
0x4681ce: pop rsp;  pop r13;  pop r14;  ret ;  
0x46824e: xor byte ptr [rax - 0x39], cl;  ret ;  
0x4682d4: scasd eax, dword ptr [rdi];  ret ;  
0x4682d1: ror byte ptr [rax + 0xf], 0xaf;  ret ;  
0x4683c1: pop rbp;  ret ;  
0x4683c0: pop r13;  ret ;  
0x4683bf: pop rsp;  pop r13;  ret ;  
0x4683be: pop r12;  pop r13;  ret ;  
0x4683bd: pop rbp;  pop r12;  pop r13;  ret ;  
0x468412: xchg eax, esp;  ret ;  
0x46843d: or byte ptr [rax - 0x39], cl;  ret ;  
0x46845d: xchg eax, esp;  ret ;  
0x4685e2: pop rbp;  ret ;  
0x4685e1: pop rbx;  pop rbp;  ret ;  
0x4685e0: or byte ptr [rbx + 0x5d], bl;  ret ;  
0x4685de: add esp, 8;  pop rbx;  pop rbp;  ret ;  
0x468625: add byte ptr [rax - 0x7d], cl;  ret ;  
0x468624: add byte ptr es:[rax - 0x7d], cl;  ret ;  
0x468623: add byte ptr es:[rax - 0x7d], cl;  ret ;  
0x46886e: xchg eax, esp;  ret ;  
0x46886c: ror dword ptr [rdi], 0x94;  ret ;  
0x46886a: add byte ptr [rcx], bh;  ror dword ptr [rdi], 0x94;  ret ;  
0x468b1e: xchg eax, esp;  ret ;  
0x468b1c: ror dword ptr [rdi], 0x94;  ret ;  
0x468b1a: add byte ptr [rcx], bh;  ror dword ptr [rdi], 0x94;  ret ;  
0x468b57: add byte ptr [rax - 0x77], cl;  ret ;  
0x468b56: add byte ptr [r8 - 0x77], cl;  ret ;  
0x468d0b: pop rdi;  ret ;  
0x468d0a: pop r15;  ret ;  
0x468d09: pop rsi;  pop r15;  ret ;  
0x468d08: pop r14;  pop r15;  ret ;  
0x468d07: pop rbp;  pop r14;  pop r15;  ret ;  
0x468e86: ret 0xc269;  
0x468f32: add byte ptr [rax - 0x77], cl;  ret ;  
0x468f30: add dword ptr [rax], eax;  add byte ptr [rax - 0x77], cl;  ret ;  
0x468f4f: add byte ptr [rax - 0x7d], cl;  ret ;  
0x468f4e: add byte ptr es:[rax - 0x7d], cl;  ret ;  
0x468f4d: add byte ptr es:[rax - 0x7d], cl;  ret ;  
0x46909a: pop rbp;  ret ;  
0x469099: pop rbx;  pop rbp;  ret ;  
0x469098: or byte ptr [rbx + 0x5d], bl;  ret ;  
0x469096: add esp, 8;  pop rbx;  pop rbp;  ret ;  
0x469310: pop rsi;  ret ;  
0x46930f: pop r14;  ret ;  
0x46930e: pop rbp;  pop r14;  ret ;  
0x46930d: pop r13;  pop r14;  ret ;  
0x46930c: pop rsp;  pop r13;  pop r14;  ret ;  
0x46943e: pop rsi;  ret ;  
0x46943d: pop r14;  ret ;  
0x46943c: pop rbp;  pop r14;  ret ;  
0x46943b: pop r13;  pop r14;  ret ;  
0x46943a: pop rsp;  pop r13;  pop r14;  ret ;  
0x469517: xor eax, eax;  ret ;  
0x469515: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x469592: pop rdi;  ret ;  
0x469591: pop r15;  ret ;  
0x469590: pop rsi;  pop r15;  ret ;  
0x46958f: pop r14;  pop r15;  ret ;  
0x46958e: pop rbp;  pop r14;  pop r15;  ret ;  
0x469bf8: ret 0x850f;  
0x469c97: fimul dword ptr [rax - 0x7d];  ret ;  
0x469d67: dec dword ptr [rcx + 0x6b];  ret ;  
0x469d93: dec dword ptr [rax + 0x39];  ret ;  
0x469d92: dec dword ptr [rax + 0x39];  ret ;  
0x469f6d: fmul dword ptr [rax - 0x7d];  ret ;  
0x469fb2: add byte ptr [rax + 0x39], cl;  ret ;  
0x469fb0: adc byte ptr [rcx], al;  add byte ptr [rax + 0x39], cl;  ret ;  
0x46a0b8: ret 0x4eb;  
0x46a40c: ret 0x2948;  
0x46a456: pop rdi;  ret ;  
0x46a455: pop r15;  ret ;  
0x46a454: pop rsi;  pop r15;  ret ;  
0x46a453: pop r14;  pop r15;  ret ;  
0x46a452: pop rbp;  pop r14;  pop r15;  ret ;  
0x46a46f: pop rdi;  ret ;  
0x46a46e: pop r15;  ret ;  
0x46a46d: pop rsi;  pop r15;  ret ;  
0x46a46c: pop r14;  pop r15;  ret ;  
0x46a46b: pop rbp;  pop r14;  pop r15;  ret ;  
0x46a529: add byte ptr [rax - 0x77], cl;  ret ;  
0x46a527: add al, byte ptr [rax];  add byte ptr [rax - 0x77], cl;  ret ;  
0x46a590: add byte ptr [rax - 0x7d], cl;  ret ;  
0x46a58e: add byte ptr [rax], al;  add byte ptr [rax - 0x7d], cl;  ret ;  
0x46a5f3: add byte ptr [rax - 0x7d], cl;  ret ;  
0x46a5f2: add byte ptr es:[rax - 0x7d], cl;  ret ;  
0x46a5f1: sub byte ptr [rsi], ah;  add byte ptr [rax - 0x7d], cl;  ret ;  
0x46a6fd: pop rdi;  ret ;  
0x46a6fc: pop r15;  ret ;  
0x46a6fb: pop rsi;  pop r15;  ret ;  
0x46a6fa: pop r14;  pop r15;  ret ;  
0x46a6f9: pop rbp;  pop r14;  pop r15;  ret ;  
0x46a761: ret ;  
0x46a7b0: add byte ptr [rax - 0x7d], cl;  ret ;  
0x46a7ae: add byte ptr [rax], al;  add byte ptr [rax - 0x7d], cl;  ret ;  
0x46a8a4: add byte ptr [rax - 0x77], cl;  ret ;  
0x46a8a2: add byte ptr [rax], al;  add byte ptr [rax - 0x77], cl;  ret ;  
0x46a8b0: add byte ptr [rax - 0x7d], cl;  ret ;  
0x46a8ae: add byte ptr [rax], al;  add byte ptr [rax - 0x7d], cl;  ret ;  
0x46aa90: add byte ptr [rax - 0x7d], cl;  ret ;  
0x46ab59: dec dword ptr [rax - 0x77];  ret ;  
0x46abeb: pop rbp;  ret ;  
0x46abea: pop rbx;  pop rbp;  ret ;  
0x46abe9: add byte ptr [rbx + 0x5d], bl;  ret ;  
0x46abe8: add byte ptr [rax], al;  pop rbx;  pop rbp;  ret ;  
0x46abe7: add byte ptr [rax], al;  add byte ptr [rbx + 0x5d], bl;  ret ;  
0x46ac2b: pop rbp;  ret ;  
0x46ac2a: pop rbx;  pop rbp;  ret ;  
0x46ac28: xor eax, eax;  pop rbx;  pop rbp;  ret ;  
0x46ac3f: xor eax, eax;  ret ;  
0x46ac3d: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x46acc6: dec dword ptr [rax - 0x77];  ret ;  
0x46ad58: pop rbp;  ret ;  
0x46ad57: pop rbx;  pop rbp;  ret ;  
0x46ad56: add byte ptr [rbx + 0x5d], bl;  ret ;  
0x46ad55: add byte ptr [rax], al;  pop rbx;  pop rbp;  ret ;  
0x46ad54: add byte ptr [rax], al;  add byte ptr [rbx + 0x5d], bl;  ret ;  
0x46ad9b: pop rbp;  ret ;  
0x46ad9a: pop rbx;  pop rbp;  ret ;  
0x46ad98: xor eax, eax;  pop rbx;  pop rbp;  ret ;  
0x46adaf: xor eax, eax;  ret ;  
0x46adad: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x46ae9a: pop rsp;  ret ;  
0x46ae99: pop r12;  ret ;  
0x46ae98: pop rbp;  pop r12;  ret ;  
0x46ae97: pop rbx;  pop rbp;  pop r12;  ret ;  
0x46ae96: adc byte ptr [rbx + 0x5d], bl;  pop r12;  ret ;  
0x46af40: pop rbx;  ret ;  
0x46af3e: ja 0x46af49;  pop rbx;  ret ;  
0x46af3d: push qword ptr [rdi + 9];  pop rbx;  ret ;  
0x46af5a: pop rbx;  ret ;  
0x46af6f: mov eax, 0xffffffff;  ret ;  
0x46b020: shr bl, cl;  ret ;  
0x46b06b: pop rbp;  ret ;  
0x46b06a: pop r13;  ret ;  
0x46b069: pop rsp;  pop r13;  ret ;  
0x46b068: pop r12;  pop r13;  ret ;  
0x46b067: pop rbp;  pop r12;  pop r13;  ret ;  
0x46b112: pop rbx;  ret ;  
0x46b110: add byte ptr [rax], al;  pop rbx;  ret ;  
0x46b193: pop rdi;  ret ;  
0x46b192: pop r15;  ret ;  
0x46b191: pop rsi;  pop r15;  ret ;  
0x46b190: pop r14;  pop r15;  ret ;  
0x46b18f: pop rbp;  pop r14;  pop r15;  ret ;  
0x46b210: pop rbx;  ret ;  
0x46b20e: add byte ptr [rax], al;  pop rbx;  ret ;  
0x46b230: pop rbx;  ret ;  
0x46b22e: xor eax, eax;  pop rbx;  ret ;  
0x46b22c: add byte ptr [rax], al;  xor eax, eax;  pop rbx;  ret ;  
0x46b276: syscall ;  ret ;  
0x46b274: add byte ptr [rax], al;  syscall ;  ret ;  
0x46b286: syscall ;  ret ;  
0x46b284: add byte ptr [rax], al;  syscall ;  ret ;  
0x46b296: syscall ;  ret ;  
0x46b294: add byte ptr [rax], al;  syscall ;  ret ;  
0x46b2a6: syscall ;  ret ;  
0x46b2a4: add byte ptr [rax], al;  syscall ;  ret ;  
0x46b2ce: ret ;  
0x46b2cd: add esi, ebx;  ret ;  
0x46b2cc: ja 0x46b2d1;  ret ;  
0x46b2cb: push qword ptr [rdi + 3];  ret ;  
0x46b2dd: mov eax, 0xffffffff;  ret ;  
0x46b2f7: mov eax, 0xffffffff;  ret ;  
0x46b323: ret ;  
0x46b321: ja 0x46b329;  ret ;  
0x46b320: push qword ptr [rdi + 6];  ret ;  
0x46b335: mov eax, 0xffffffff;  ret ;  
0x46b34f: mov eax, 0xffffffff;  ret ;  
0x46b3f7: mov dh, 0xc0;  ret ;  
0x46b3f6: movzx eax, al;  ret ;  
0x46b3f5: movzx rax, al;  ret ;  
0x46b488: pop rbx;  ret ;  
0x46b486: mov eax, ebx;  pop rbx;  ret ;  
0x46b4a8: pop rbx;  ret ;  
0x46b4a6: mov eax, ebx;  pop rbx;  ret ;  
0x46b4d3: ret ;  
0x46b4d2: ret ;  
0x46b4d1: ja 0x46b4f9;  ret ;  
0x46b4d0: xlatb ;  ja 0x46b4f9;  ret ;  
0x46b4cf: cmp edi, edx;  ja 0x46b4f9;  ret ;  
0x46b4f0: xor eax, eax;  ret ;  
0x46b4ee: mov dword ptr [rax], edx;  xor eax, eax;  ret ;  
0x46b4ed: mov dword ptr fs:[rax], edx;  xor eax, eax;  ret ;  
0x46b507: mov eax, 0xffffffff;  ret ;  
0x46b5e2: pop rbp;  ret ;  
0x46b5e1: pop r13;  ret ;  
0x46b5e0: pop rsp;  pop r13;  ret ;  
0x46b5df: pop r12;  pop r13;  ret ;  
0x46b5de: pop rbp;  pop r12;  pop r13;  ret ;  
0x46b5f4: pop rbp;  ret ;  
0x46b5f3: pop r13;  ret ;  
0x46b5f2: pop rsp;  pop r13;  ret ;  
0x46b5f1: pop r12;  pop r13;  ret ;  
0x46b5f0: pop rbp;  pop r12;  pop r13;  ret ;  
0x46b63c: add al, 0x11;  ret ;  
0x46b63b: add eax, dword ptr [rcx + rdx];  ret ;  
0x46b63a: mov es, word ptr [rbx];  add al, 0x11;  ret ;  
0x46b639: or al, 0x8e;  add eax, dword ptr [rcx + rdx];  ret ;  
0x46b643: ret ;  
0x46b642: clc ;  ret ;  
0x46b641: mov eax, edi;  ret ;  
0x46b640: nop ;  mov eax, edi;  ret ;  
0x46b63f: nop ;  mov eax, edi;  ret ;  
0x46b67e: add byte ptr [rax - 0x77], cl;  ret ;  
0x46b67c: add dword ptr [rax], eax;  add byte ptr [rax - 0x77], cl;  ret ;  
0x46b7b7: pop rsi;  ret ;  
0x46b7b6: pop r14;  ret ;  
0x46b7b5: pop rbp;  pop r14;  ret ;  
0x46b7b4: pop r13;  pop r14;  ret ;  
0x46b7b3: pop rsp;  pop r13;  pop r14;  ret ;  
0x46b84a: ret ;  
0x46b849: ret ;  
0x46b848: jne 0x46b899;  ret ;  
0x46b847: enter 0x4f75, -0xd;  ret ;  
0x46b846: mov eax, ecx;  jne 0x46b899;  ret ;  
0x46b858: ret ;  
0x46b856: je 0x46b842;  ret ;  
0x46b854: test bl, bl;  je 0x46b842;  ret ;  
0x46b896: xor eax, eax;  ret ;  
0x46b895: lodsb al, byte ptr [rsi];  xor eax, eax;  ret ;  
0x46b894: jne 0x46b842;  xor eax, eax;  ret ;  
0x46b893: leave ;  jne 0x46b842;  xor eax, eax;  ret ;  
0x46b8c2: cmove eax, ecx;  ret ;  
0x46b8c1: cmove rax, r9;  ret ;  
0x46b8c7: mov eax, ecx;  ret ;  
0x46b8c6: mov rax, r9;  ret ;  
0x46b8c5: ret ;  mov rax, r9;  ret ;  
0x46b8c4: rol ebx, 0x4c;  mov eax, ecx;  ret ;  
0x46b9e4: pop rbp;  ret ;  
0x46b9e3: pop rsp;  pop rbp;  ret ;  
0x46b9e2: pop r12;  pop rbp;  ret ;  
0x46b9e1: pop rbx;  pop r12;  pop rbp;  ret ;  
0x46ba19: xor eax, eax;  ret ;  
0x46bd66: pop rbp;  ret ;  
0x46bd65: pop rdi;  pop rbp;  ret ;  
0x46bd64: pop r15;  pop rbp;  ret ;  
0x46bd63: pop rsi;  pop r15;  pop rbp;  ret ;  
0x46bd62: pop r14;  pop r15;  pop rbp;  ret ;  
0x46bf5f: inc dword ptr [rcx - 0x47];  ret ;  
0x46c20c: pop rbp;  ret ;  
0x46c20b: pop rdi;  pop rbp;  ret ;  
0x46c20a: pop r15;  pop rbp;  ret ;  
0x46c209: pop rsi;  pop r15;  pop rbp;  ret ;  
0x46c208: pop r14;  pop r15;  pop rbp;  ret ;  
0x46c26a: pop rbp;  ret ;  
0x46c269: pop rdi;  pop rbp;  ret ;  
0x46c268: pop r15;  pop rbp;  ret ;  
0x46c267: pop rsi;  pop r15;  pop rbp;  ret ;  
0x46c266: pop r14;  pop r15;  pop rbp;  ret ;  
0x46c2de: ret 0xc283;  
0x46c2dd: xchg eax, esp;  ret 0xc283;  
0x46c2db: add byte ptr [rdi], cl;  xchg eax, esp;  ret 0xc283;  
0x46c469: dec dword ptr [rax + 0x39];  ret ;  
0x46c468: sti ;  dec dword ptr [rax + 0x39];  ret ;  
0x46c467: test eax, 0x3948fffb;  ret ;  
0x46c836: pop rbp;  ret ;  
0x46c835: pop rdi;  pop rbp;  ret ;  
0x46c834: pop r15;  pop rbp;  ret ;  
0x46c833: pop rsi;  pop r15;  pop rbp;  ret ;  
0x46c832: pop r14;  pop r15;  pop rbp;  ret ;  
0x46c95b: dec dword ptr [rax - 0x77];  ret ;  
0x46c9f7: inc dword ptr [rcx - 0x47];  ret ;  
0x46ca7f: inc dword ptr [rcx - 0x47];  ret ;  
0x46cc6a: pop rbp;  ret ;  
0x46cc69: pop rdi;  pop rbp;  ret ;  
0x46cc68: pop r15;  pop rbp;  ret ;  
0x46cc67: pop rsi;  pop r15;  pop rbp;  ret ;  
0x46cc66: pop r14;  pop r15;  pop rbp;  ret ;  
0x46d0e4: fmul dword ptr [rcx + 0x21];  ret ;  
0x46d2c2: pop rbp;  ret ;  
0x46d2c1: pop rdi;  pop rbp;  ret ;  
0x46d2c0: pop r15;  pop rbp;  ret ;  
0x46d2bf: pop rsi;  pop r15;  pop rbp;  ret ;  
0x46d2be: pop r14;  pop r15;  pop rbp;  ret ;  
0x46dc46: inc dword ptr [rcx - 0x47];  ret ;  
0x46dc45: stc ;  inc dword ptr [rcx - 0x47];  ret ;  
0x46dc44: stc ;  inc dword ptr [rcx - 0x47];  ret ;  
0x46dd52: sal byte ptr [rsp + 0x48], 0x83;  ret ;  
0x46dd7c: pop rdi;  ret ;  
0x46dd7b: pop r15;  ret ;  
0x46dd7a: pop rsi;  pop r15;  ret ;  
0x46dd79: pop r14;  pop r15;  ret ;  
0x46dd78: pop rbp;  pop r14;  pop r15;  ret ;  
0x46df5c: add byte ptr [rax - 0x7d], cl;  ret ;  
0x46df5a: add byte ptr [rax], al;  add byte ptr [rax - 0x7d], cl;  ret ;  
0x46df89: pop rdi;  ret ;  
0x46df88: pop r15;  ret ;  
0x46df87: pop rsi;  pop r15;  ret ;  
0x46df86: pop r14;  pop r15;  ret ;  
0x46df85: pop rbp;  pop r14;  pop r15;  ret ;  
0x46e18b: add dword ptr [rax + 0x39], ecx;  ret ;  
0x46e195: add byte ptr [rax - 0x7d], cl;  ret ;  
0x46e498: pop rdi;  ret ;  
0x46e497: pop r15;  ret ;  
0x46e496: pop rsi;  pop r15;  ret ;  
0x46e495: pop r14;  pop r15;  ret ;  
0x46e494: pop rbp;  pop r14;  pop r15;  ret ;  
0x46e50d: ret 0xf48;  
0x46e770: pop rdi;  ret ;  
0x46e76f: pop r15;  ret ;  
0x46e76e: pop rsi;  pop r15;  ret ;  
0x46e76d: pop r14;  pop r15;  ret ;  
0x46e76c: pop rbp;  pop r14;  pop r15;  ret ;  
0x46e780: xor eax, eax;  ret ;  
0x46e7a8: pop rdi;  ret ;  
0x46e7a7: pop r15;  ret ;  
0x46e7a6: pop rsi;  pop r15;  ret ;  
0x46e7a5: pop r14;  pop r15;  ret ;  
0x46e7a4: pop rbp;  pop r14;  pop r15;  ret ;  
0x46ea47: pop rbp;  ret ;  
0x46ea46: pop rdi;  pop rbp;  ret ;  
0x46ea45: pop r15;  pop rbp;  ret ;  
0x46ea44: pop rsi;  pop r15;  pop rbp;  ret ;  
0x46ea43: pop r14;  pop r15;  pop rbp;  ret ;  
0x46ea7b: dec dword ptr [rax - 0x77];  ret ;  
0x46ea7a: sti ;  dec dword ptr [rax - 0x77];  ret ;  
0x46eb1a: pop rbp;  ret ;  
0x46eb19: pop rdi;  pop rbp;  ret ;  
0x46eb18: pop r15;  pop rbp;  ret ;  
0x46eb17: pop rsi;  pop r15;  pop rbp;  ret ;  
0x46eb16: pop r14;  pop r15;  pop rbp;  ret ;  
0x46ec7c: pop rdi;  ret ;  
0x46ec7b: pop r15;  ret ;  
0x46ec7a: pop rsi;  pop r15;  ret ;  
0x46ec79: pop r14;  pop r15;  ret ;  
0x46ec78: pop rbp;  pop r14;  pop r15;  ret ;  
0x46f1a5: ret 0xf48;  
0x46f77f: pop rdi;  ret ;  
0x46f77e: pop r15;  ret ;  
0x46f77d: pop rsi;  pop r15;  ret ;  
0x46f77c: pop r14;  pop r15;  ret ;  
0x46f77b: pop rbp;  pop r14;  pop r15;  ret ;  
0x46f87a: ret 0x8348;  ret ;  
0x46fa2d: dec dword ptr [rax - 0x7d];  ret ;  
0x46fad2: ret 0x8348;  ret ;  
0x46fba3: ret 0x8545;  
0x46fba2: xchg eax, esp;  ret 0x8545;  
0x46fc48: pop rbp;  ret ;  
0x46fc47: pop r13;  ret ;  
0x46fc46: pop rsp;  pop r13;  ret ;  
0x46fc45: pop r12;  pop r13;  ret ;  
0x46fc44: pop rbp;  pop r12;  pop r13;  ret ;  
0x46fca3: pop rbp;  ret ;  
0x46fca2: pop r13;  ret ;  
0x46fca1: pop rsp;  pop r13;  ret ;  
0x46fca0: pop r12;  pop r13;  ret ;  
0x46fc9f: pop rbp;  pop r12;  pop r13;  ret ;  
0x46fe8a: pop rdi;  ret ;  
0x46fe89: pop r15;  ret ;  
0x46fe88: pop rsi;  pop r15;  ret ;  
0x46fe87: pop r14;  pop r15;  ret ;  
0x46fe86: pop rbp;  pop r14;  pop r15;  ret ;  
0x4703b6: add byte ptr [rax - 0x7d], cl;  ret ;  
0x4703b4: add eax, dword ptr [rax];  add byte ptr [rax - 0x7d], cl;  ret ;  
0x47095d: add byte ptr [rax - 0x7d], cl;  ret ;  
0x47095b: add eax, dword ptr [rax];  add byte ptr [rax - 0x7d], cl;  ret ;  
0x470a19: pop rbp;  ret ;  
0x470a18: pop rdi;  pop rbp;  ret ;  
0x470a17: pop r15;  pop rbp;  ret ;  
0x470a16: pop rsi;  pop r15;  pop rbp;  ret ;  
0x470a15: pop r14;  pop r15;  pop rbp;  ret ;  
0x470a5e: dec dword ptr [rax - 0x77];  ret ;  
0x470a78: add byte ptr [rax - 0x7d], cl;  ret ;  
0x47144c: add byte ptr [rax], al;  ret ;  
0x47144a: or byte ptr [rbx], al;  add byte ptr [rax], al;  ret ;  
0x47147c: ret ;  
0x47147b: add bl, dh;  ret ;  
0x47147a: add byte ptr [rax], al;  ret ;  
0x471479: add eax, dword ptr [rax];  add bl, dh;  ret ;  
0x471478: add byte ptr [rbx], al;  add byte ptr [rax], al;  ret ;  
0x471536: pop rbp;  ret ;  
0x471535: pop rbx;  pop rbp;  ret ;  
0x471534: or byte ptr [rbx + 0x5d], bl;  ret ;  
0x471532: add esp, 8;  pop rbx;  pop rbp;  ret ;  
0x4715a2: add byte ptr [rax - 0x77], cl;  ret ;  
0x4715a0: add al, byte ptr [rax];  add byte ptr [rax - 0x77], cl;  ret ;  
0x47176c: pop rdi;  ret ;  
0x47176b: pop r15;  ret ;  
0x47176a: pop rsi;  pop r15;  ret ;  
0x471769: pop r14;  pop r15;  ret ;  
0x471768: pop rbp;  pop r14;  pop r15;  ret ;  
0x47190f: xor eax, eax;  ret ;  
0x471926: add esp, 8;  ret ;  
0x471925: add rsp, 8;  ret ;  
0x471931: mov eax, 0xffffffff;  ret ;  
0x4719d4: add esp, 8;  ret ;  
0x4719d3: add rsp, 8;  ret ;  
0x4719d2: add al, 0x48;  add esp, 8;  ret ;  
0x471a86: ret ;  
0x471a85: pop rbx;  ret ;  
0x471a84: add ebx, dword ptr [rbx - 0xd];  ret ;  
0x471a83: js 0x471a88;  pop rbx;  ret ;  
0x471a82: sar byte ptr [rax + 3], 0x5b;  ret ;  
0x471de0: add byte ptr [rax - 0x7d], cl;  ret ;  
0x471dde: add byte ptr [rax], al;  add byte ptr [rax - 0x7d], cl;  ret ;  
0x471df6: adc byte ptr [rax - 0x7d], cl;  ret ;  
0x471df5: adc byte ptr [r8 - 0x7d], cl;  ret ;  
0x471e74: ret ;  
0x471e73: pop rbp;  ret ;  
0x471e72: pop rdi;  pop rbp;  ret ;  
0x471e71: pop r15;  pop rbp;  ret ;  
0x471e70: pop rsi;  pop r15;  pop rbp;  ret ;  
0x471edc: sbb byte ptr [rax + 0x39], cl;  ret ;  
0x47218b: dec dword ptr [rcx + 0x39];  ret ;  
0x4721a8: add byte ptr [rax - 0x7d], cl;  ret ;  
0x47237f: sub cl, byte ptr [rax - 0x7d];  ret ;  
0x472777: fmul dword ptr [rax + 0x39];  ret ;  
0x4727b3: ror byte ptr [rax - 0x7d], 1;  ret ;  
0x472a30: add byte ptr [rax - 0x7d], cl;  ret ;  
0x472a2e: add byte ptr [rax], al;  add byte ptr [rax - 0x7d], cl;  ret ;  
0x47333b: and al, 0x75;  ret ;  
0x473519: pop rbp;  ret ;  
0x473518: pop rdi;  pop rbp;  ret ;  
0x473517: pop r15;  pop rbp;  ret ;  
0x473516: pop rsi;  pop r15;  pop rbp;  ret ;  
0x473515: pop r14;  pop r15;  pop rbp;  ret ;  
0x47388b: fimul word ptr [rax - 0x7d];  ret ;  
0x4738d5: pop rbp;  ret ;  
0x4738d4: pop rdi;  pop rbp;  ret ;  
0x4738d3: pop r15;  pop rbp;  ret ;  
0x4738d2: pop rsi;  pop r15;  pop rbp;  ret ;  
0x4738d1: pop r14;  pop r15;  pop rbp;  ret ;  
0x473c93: sal byte ptr [rbp + 0x4b], 0x89;  ret ;  
0x473cdb: pop rbx;  ret ;  
0x473cd9: add byte ptr [rax], al;  pop rbx;  ret ;  
0x473cfb: pop rbx;  ret ;  
0x473cf9: mov eax, ebx;  pop rbx;  ret ;  
0x473cf7: add byte ptr [rax], al;  mov eax, ebx;  pop rbx;  ret ;  
0x473d27: and byte ptr [rax - 0x77], cl;  ret ;  
0x473d56: pop rdi;  ret ;  
0x473d55: pop r15;  ret ;  
0x473d54: pop rsi;  pop r15;  ret ;  
0x473d53: pop r14;  pop r15;  ret ;  
0x473d52: pop rbp;  pop r14;  pop r15;  ret ;  
0x473eaf: pop rbp;  ret ;  
0x473eae: pop rdi;  pop rbp;  ret ;  
0x473ead: pop r15;  pop rbp;  ret ;  
0x473eac: pop rsi;  pop r15;  pop rbp;  ret ;  
0x473eab: pop r14;  pop r15;  pop rbp;  ret ;  
0x47433b: pop rbp;  ret ;  
0x47433a: pop r13;  ret ;  
0x474339: pop rsp;  pop r13;  ret ;  
0x474338: pop r12;  pop r13;  ret ;  
0x474337: pop rbp;  pop r12;  pop r13;  ret ;  
0x474400: add byte ptr [rax], al;  ret ;  
0x4743fe: fadd dword ptr [rax];  add byte ptr [rax], al;  ret ;  
0x4744b0: add byte ptr [rax], al;  ret ;  
0x4744ae: fadd dword ptr [rax];  add byte ptr [rax], al;  ret ;  
0x474552: add byte ptr [rax], al;  ret ;  
0x474550: fadd dword ptr [rax];  add byte ptr [rax], al;  ret ;  
0x4745b5: pop rbp;  ret ;  
0x4745b4: pop rbx;  pop rbp;  ret ;  
0x4745b3: rcr byte ptr [rbx + 0x5d], 1;  ret ;  
0x4745b2: mov eax, edx;  pop rbx;  pop rbp;  ret ;  
0x4745ca: pop rbp;  ret ;  
0x4745c9: pop rbx;  pop rbp;  ret ;  
0x4745c8: rcr byte ptr [rbx + 0x5d], 1;  ret ;  
0x4745c7: mov eax, edx;  pop rbx;  pop rbp;  ret ;  
0x47462b: ret ;  
0x474629: jne 0x474601;  ret ;  
0x474628: sal dword ptr [rbp - 0x2a], 1;  ret ;  
0x474627: cmp ecx, edx;  jne 0x474601;  ret ;  
0x47463d: mov eax, dword ptr [rsi + 4];  ret ;  
0x47463c: lahf ;  mov eax, dword ptr [rsi + 4];  ret ;  
0x47463b: jne 0x4745dc;  mov eax, dword ptr [rsi + 4];  ret ;  
0x474671: add esp, 8;  ret ;  
0x474670: add rsp, 8;  ret ;  
0x47474c: add eax, 0x258b20;  ret ;  
0x474793: ret ;  
0x474791: jne 0x474761;  ret ;  
0x474790: sal byte ptr [rbp - 0x32], 0xf3;  ret ;  
0x47478f: test eax, eax;  jne 0x474761;  ret ;  
0x474795: ret ;  
0x474794: ret ;  ret ;  
0x474793: ret ;  ret ;  
0x474791: jne 0x474761;  ret ;  ret ;  
0x4747b3: mov dword ptr [rsi], eax;  ret ;  
0x4747b2: mov qword ptr [rsi], rax;  ret ;  
0x4747b0: and eax, 0x6894800;  ret ;  
0x474848: pop rsp;  ret ;  
0x474847: pop r12;  ret ;  
0x474846: pop rbp;  pop r12;  ret ;  
0x474845: pop rbx;  pop rbp;  pop r12;  ret ;  
0x474844: fcomp dword ptr [rbx + 0x5d];  pop r12;  ret ;  
0x474861: pop rsp;  ret ;  
0x474860: pop r12;  ret ;  
0x47485f: pop rbp;  pop r12;  ret ;  
0x47485e: pop rbx;  pop rbp;  pop r12;  ret ;  
0x47485d: fcomp dword ptr [rbx + 0x5d];  pop r12;  ret ;  
0x474a33: pop rdi;  ret ;  
0x474a32: pop r15;  ret ;  
0x474a31: pop rsi;  pop r15;  ret ;  
0x474a30: pop r14;  pop r15;  ret ;  
0x474a2f: pop rbp;  pop r14;  pop r15;  ret ;  
0x474b55: xor eax, eax;  ret ;  
0x474b52: mov edi, 0xc031fff8;  ret ;  
0x474ca4: pop rsi;  ret ;  
0x474ca3: pop r14;  ret ;  
0x474ca2: pop rbp;  pop r14;  ret ;  
0x474ca1: pop r13;  pop r14;  ret ;  
0x474ca0: pop rsp;  pop r13;  pop r14;  ret ;  
0x474d04: cmove eax, edx;  ret ;  
0x474d03: cmove rax, rdx;  ret ;  
0x474d4e: xor eax, eax;  ret ;  
0x474d4d: movsb byte ptr [rdi], byte ptr [rsi];  xor eax, eax;  ret ;  
0x474d4c: jae 0x474cf2;  xor eax, eax;  ret ;  
0x474d70: add byte ptr [rax + 0x29], cl;  ret ;  
0x474d6e: add byte ptr [rax], al;  add byte ptr [rax + 0x29], cl;  ret ;  
0x474d83: add byte ptr [rax + 0x39], cl;  ret ;  
0x474d82: add byte ptr [r8 + 0x39], r9b;  ret ;  
0x474da6: pop rsp;  ret ;  
0x474da5: pop r12;  ret ;  
0x474da4: pop rbp;  pop r12;  ret ;  
0x474da3: pop rbx;  pop rbp;  pop r12;  ret ;  
0x474da2: adc byte ptr [rbx + 0x5d], bl;  pop r12;  ret ;  
0x474e8b: dec dword ptr [rax + 0x63];  ret ;  
0x474e8a: pop rcx;  dec dword ptr [rax + 0x63];  ret ;  
0x474f28: pop rsp;  ret ;  
0x474f27: pop r12;  ret ;  
0x474f26: pop rbp;  pop r12;  ret ;  
0x474f25: pop rbx;  pop rbp;  pop r12;  ret ;  
0x474f24: call 0x5c88ac84;  ret ;  
0x474f45: pop rsp;  ret ;  
0x474f44: pop r12;  ret ;  
0x474f43: pop rbp;  pop r12;  ret ;  
0x474f42: pop rbx;  pop rbp;  pop r12;  ret ;  
0x474f41: call 0x5c88aca1;  ret ;  
0x474f82: pop rsp;  ret ;  
0x474f81: pop r12;  ret ;  
0x474f80: pop rbp;  pop r12;  ret ;  
0x474f7f: pop rbx;  pop rbp;  pop r12;  ret ;  
0x474f7e: call 0x5c88acde;  ret ;  
0x474fc2: pop rbp;  ret ;  
0x474fc1: pop rbx;  pop rbp;  ret ;  
0x474fc0: or byte ptr [rbx + 0x5d], bl;  ret ;  
0x474fbe: add esp, 8;  pop rbx;  pop rbp;  ret ;  
0x475094: and eax, 0x89485300;  ret ;  
0x4750b1: pop rbx;  ret ;  
0x4750af: add byte ptr [rcx], al;  pop rbx;  ret ;  
0x4750bc: add byte ptr [rax], al;  ret ;  
0x4750ba: add dword ptr [rax], eax;  add byte ptr [rax], al;  ret ;  
0x4750b9: mov eax, 1;  ret ;  
0x4750ca: mov eax, dword ptr [rax];  ret ;  
0x4750c9: mov eax, dword ptr fs:[rax];  ret ;  
0x4750c8: pop rbx;  mov eax, dword ptr fs:[rax];  ret ;  
0x4750c7: lcall [rbx + 0x64];  mov eax, dword ptr [rax];  ret ;  
0x47522e: pop rdi;  ret ;  
0x47522d: pop r15;  ret ;  
0x47522c: pop rsi;  pop r15;  ret ;  
0x47522b: pop r14;  pop r15;  ret ;  
0x47522a: pop rbp;  pop r14;  pop r15;  ret ;  
0x4753a0: pop rbp;  ret ;  
0x47539f: pop rbx;  pop rbp;  ret ;  
0x47539e: or byte ptr [rbx + 0x5d], bl;  ret ;  
0x47539c: add esp, 8;  pop rbx;  pop rbp;  ret ;  
0x4753a2: xor eax, eax;  ret ;  
0x4753a1: ret ;  xor eax, eax;  ret ;  
0x4753a0: pop rbp;  ret ;  xor eax, eax;  ret ;  
0x47539f: pop rbx;  pop rbp;  ret ;  xor eax, eax;  ret ;  
0x4754c3: pop rbp;  ret ;  
0x4754c2: pop rdi;  pop rbp;  ret ;  
0x4754c1: pop r15;  pop rbp;  ret ;  
0x4754c0: pop rsi;  pop r15;  pop rbp;  ret ;  
0x4754bf: pop r14;  pop r15;  pop rbp;  ret ;  
0x475698: add al, ch;  ret ;  
0x475697: add r8b, bpl;  ret ;  
0x4758b7: test byte ptr [rax - 0x77], cl;  ret ;  
0x4758b6: test byte ptr [r8 - 0x77], r9b;  ret ;  
0x475b4e: pop rbp;  ret ;  
0x475b4d: pop rdi;  pop rbp;  ret ;  
0x475b4c: pop r15;  pop rbp;  ret ;  
0x475b4b: pop rsi;  pop r15;  pop rbp;  ret ;  
0x475b4a: pop r14;  pop r15;  pop rbp;  ret ;  
0x476192: pop rbp;  ret ;  
0x476191: pop rbx;  pop rbp;  ret ;  
0x47618f: xor eax, eax;  pop rbx;  pop rbp;  ret ;  
0x4761e3: pop rbp;  ret ;  
0x4761e2: pop rbx;  pop rbp;  ret ;  
0x4761e1: add byte ptr [rbx + 0x5d], bl;  ret ;  
0x4761e0: add byte ptr [rax], al;  pop rbx;  pop rbp;  ret ;  
0x4761df: add byte ptr [rax], al;  add byte ptr [rbx + 0x5d], bl;  ret ;  
0x47661d: or byte ptr [rax - 0x7d], cl;  ret ;  
0x476e40: pop rbp;  ret ;  
0x476e3f: pop rdi;  pop rbp;  ret ;  
0x476e3e: pop r15;  pop rbp;  ret ;  
0x476e3d: pop rsi;  pop r15;  pop rbp;  ret ;  
0x476e3c: pop r14;  pop r15;  pop rbp;  ret ;  
0x476fa9: ret ;  
0x476fa8: cmp bl, dh;  ret ;  
0x476fa7: jne 0x476fe1;  ret ;  
0x476fa6: jne 0x476fe1;  ret ;  
0x476fa5: add byte ptr [rax + 0x75], al;  cmp bl, dh;  ret ;  
0x47707a: pop rbx;  ret ;  
0x477079: pop rbx;  ret ;  
0x477078: je 0x4770de;  pop rbx;  ret ;  
0x477077: or byte ptr [rsp + 0x5b], dh;  ret ;  
0x477076: add byte ptr [rax], cl;  je 0x4770de;  pop rbx;  ret ;  
0x477242: add byte ptr [rcx - 0x77], cl;  ret ;  
0x477240: jae 0x477242;  add byte ptr [rcx - 0x77], cl;  ret ;  
0x477571: xor dl, dh;  ret ;  
0x4776ca: add byte ptr [rcx - 0x77], cl;  ret ;  
0x4779f3: xor dl, dh;  ret ;  
0x477aba: add byte ptr [rcx - 0x77], cl;  ret ;  
0x477bf7: xor dl, dh;  ret ;  
0x477c43: add byte ptr [rcx - 0x77], cl;  ret ;  
0x477c41: push -0x76b70000;  ret ;  
0x477d0a: add byte ptr [rcx - 0x77], cl;  ret ;  
0x477dca: add byte ptr [rcx - 0x77], cl;  ret ;  
0x477eb5: sub eax, ecx;  ret ;  
0x477eb4: shr byte ptr [rcx], 0xc8;  ret ;  
0x477eb3: mov eax, eax;  sub eax, ecx;  ret ;  
0x477eb2: mov eax, r8d;  sub eax, ecx;  ret ;  
0x477ee5: neg eax;  ret ;  
0x477ee4: ret 0xd8f7;  ret ;  
0x477ee2: movsx eax, dl;  neg eax;  ret ;  
0x477ee8: mov eax, 0xffffffff;  ret ;  
0x477eee: sub eax, edx;  ret ;  
0x477eed: ret ;  sub eax, edx;  ret ;  
0x477eec: inc ebx;  sub eax, edx;  ret ;  
0x477ef4: add byte ptr [rax], al;  ret ;  
0x477ef2: add dword ptr [rax], eax;  add byte ptr [rax], al;  ret ;  
0x477ef1: mov eax, 1;  ret ;  
0x478008: pop rbp;  ret ;  
0x478007: pop rdi;  pop rbp;  ret ;  
0x478006: pop r15;  pop rbp;  ret ;  
0x478005: pop rsi;  pop r15;  pop rbp;  ret ;  
0x478004: pop r14;  pop r15;  pop rbp;  ret ;  
0x47845d: pop rbp;  ret ;  
0x47845c: pop rdi;  pop rbp;  ret ;  
0x47845b: pop r15;  pop rbp;  ret ;  
0x47845a: pop rsi;  pop r15;  pop rbp;  ret ;  
0x478459: pop r14;  pop r15;  pop rbp;  ret ;  
0x478740: jbe 0x478749;  ret ;  
0x47873f: std ;  jbe 0x478749;  ret ;  
0x47873e: clc ;  std ;  jbe 0x478749;  ret ;  
0x47873d: cmp eax, -3;  jbe 0x478749;  ret ;  
0x478765: add esp, 8;  ret ;  
0x478764: add rsp, 8;  ret ;  
0x47879a: pop rsp;  ret ;  
0x478799: pop r12;  ret ;  
0x478798: pop rbp;  pop r12;  ret ;  
0x478797: pop rbx;  pop rbp;  pop r12;  ret ;  
0x478796: and byte ptr [rbx + 0x5d], bl;  pop r12;  ret ;  
0x4787df: pop rsp;  ret ;  
0x4787de: pop r12;  ret ;  
0x4787dd: pop rbp;  pop r12;  ret ;  
0x4787dc: pop rbx;  pop rbp;  pop r12;  ret ;  
0x4787db: and byte ptr [rbx + 0x5d], bl;  pop r12;  ret ;  
0x478917: je 0x478921;  ret ;  
0x478915: cmp eax, esi;  je 0x478921;  ret ;  
0x478914: cmp rax, rsi;  je 0x478921;  ret ;  
0x478952: add esp, 8;  ret ;  
0x478951: add rsp, 8;  ret ;  
0x478982: mov eax, dword ptr [rax + 8];  ret ;  
0x478981: mov rax, qword ptr [rax + 8];  ret ;  
0x47899c: add byte ptr [rax], al;  ret ;  
0x47899a: add byte ptr [rax], al;  add byte ptr [rax], al;  ret ;  
0x478999: and eax, 0;  ret ;  
0x478ac1: ret ;  
0x478ac0: add bl, dh;  ret ;  
0x478abf: add byte ptr [rax], al;  ret ;  
0x478abe: add byte ptr [rax], al;  add bl, dh;  ret ;  
0x478abd: add byte ptr [rax], al;  add byte ptr [rax], al;  ret ;  
0x478b09: pop rbx;  ret ;  
0x478b08: pop rdx;  pop rbx;  ret ;  
0x478b07: pop rax;  pop rdx;  pop rbx;  ret ;  
0x478b06: sbb byte ptr [rax + 0x5a], bl;  pop rbx;  ret ;  
0x478b05: sbb byte ptr [r8 + 0x5a], bl;  pop rbx;  ret ;  
0x478b6d: pop rbx;  ret ;  
0x478b6a: add esp, 0x30;  pop rbx;  ret ;  
0x478b69: add rsp, 0x30;  pop rbx;  ret ;  
0x478ba4: pop rbx;  ret ;  
0x478ba3: pop rdx;  pop rbx;  ret ;  
0x478ba2: pop rax;  pop rdx;  pop rbx;  ret ;  
0x478ba1: adc byte ptr [rax + 0x5a], bl;  pop rbx;  ret ;  
0x478ba0: adc byte ptr [r8 + 0x5a], bl;  pop rbx;  ret ;  
0x478bf7: add esp, 0x38;  ret ;  
0x478bf6: add rsp, 0x38;  ret ;  
0x478c23: add esp, 0x38;  ret ;  
0x478c22: add rsp, 0x38;  ret ;  
0x478c21: or al, 0x48;  add esp, 0x38;  ret ;  
0x478c8b: ret ;  
0x478c89: add esp, 0x48;  ret ;  
0x478c88: add rsp, 0x48;  ret ;  
0x478c9d: ret ;  
0x478c9b: add esp, 0x48;  ret ;  
0x478c9a: add rsp, 0x48;  ret ;  
0x478c99: ror byte ptr [rax - 0x7d], 0xc4;  ret ;  
0x478d73: add esp, 0x68;  ret ;  
0x478d72: add rsp, 0x68;  ret ;  
0x478da2: add esp, 0x68;  ret ;  
0x478da1: add rsp, 0x68;  ret ;  
0x478e1b: ret ;  
0x478e19: add esp, 0x48;  ret ;  
0x478e18: add rsp, 0x48;  ret ;  
0x478e2d: ret ;  
0x478e2b: add esp, 0x48;  ret ;  
0x478e2a: add rsp, 0x48;  ret ;  
0x478e29: ror byte ptr [rax - 0x7d], 0xc4;  ret ;  
0x478ea8: ret ;  
0x478ea6: add esp, 0x48;  ret ;  
0x478ea5: add rsp, 0x48;  ret ;  
0x478ec5: ret ;  
0x478ec3: add esp, 0x48;  ret ;  
0x478ec2: add rsp, 0x48;  ret ;  
0x478edb: add eax, 0xfffffff8;  ret ;  
0x478f70: sub eax, 1;  ret ;  
0x478f6e: loopne 0x478f72;  sub eax, 1;  ret ;  
0x478f79: xor eax, eax;  ret ;  
0x478f77: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x478f76: add byte ptr [rax], r8b;  xor eax, eax;  ret ;  
0x47901d: adc byte ptr [rax + 0x29], cl;  ret ;  
0x47916b: pop rdi;  ret ;  
0x47916a: pop r15;  ret ;  
0x479169: pop rsi;  pop r15;  ret ;  
0x479168: pop r14;  pop r15;  ret ;  
0x479167: pop rbp;  pop r14;  pop r15;  ret ;  
0x479184: pop rdi;  ret ;  
0x479183: pop r15;  ret ;  
0x479182: pop rsi;  pop r15;  ret ;  
0x479181: pop r14;  pop r15;  ret ;  
0x479180: pop rbp;  pop r14;  pop r15;  ret ;  
0x479274: pop rdi;  ret ;  
0x479273: pop r15;  ret ;  
0x479272: pop rsi;  pop r15;  ret ;  
0x479271: pop r14;  pop r15;  ret ;  
0x479270: pop rbp;  pop r14;  pop r15;  ret ;  
0x47934f: pop rdi;  ret ;  
0x47934e: pop r15;  ret ;  
0x47934d: pop rsi;  pop r15;  ret ;  
0x47934c: pop r14;  pop r15;  ret ;  
0x47934b: pop rbp;  pop r14;  pop r15;  ret ;  
0x479366: dec dword ptr [rcx - 0x77];  ret ;  
0x47942a: mov dword ptr [rdi], ecx;  ret ;  
0x479429: mov qword ptr [rdi], r9;  ret ;  
0x479428: loope 0x479476;  mov dword ptr [rdi], ecx;  ret ;  
0x479427: shl ecx, cl;  mov qword ptr [rdi], r9;  ret ;  
0x47945d: clc ;  ret ;  
0x47945c: clc ;  ret ;  
0x47945b: mov dword ptr [rdi - 8], ecx;  ret ;  
0x47945a: mov qword ptr [rdi - 8], r9;  ret ;  
0x479459: loope 0x4794a7;  mov dword ptr [rdi - 8], ecx;  ret ;  
0x479483: movsd dword ptr [rdi], dword ptr [rsi];  ret ;  
0x479480: add byte ptr [rbp + 0xf], cl;  movsd dword ptr [rdi], dword ptr [rsi];  ret ;  
0x4794bf: movsd dword ptr [rdi], dword ptr [rsi];  ret ;  
0x4794d0: mov dword ptr [rdi - 0x10], ecx;  ret ;  
0x4794cf: mov qword ptr [rdi - 0x10], r9;  ret ;  
0x4794ce: loope 0x47951c;  mov dword ptr [rdi - 0x10], ecx;  ret ;  
0x479534: mov dword ptr [rdi], ecx;  ret ;  
0x479533: mov qword ptr [rdi], r9;  ret ;  
0x479531: shr ecx, cl;  mov qword ptr [rdi], r9;  ret ;  
0x479565: mov dword ptr [rdi + 8], ecx;  ret ;  
0x479564: mov qword ptr [rdi + 8], r9;  ret ;  
0x479563: jmp 0x8971eb4;  ret ;  
0x479593: lodsd eax, dword ptr [rsi];  ret ;  
0x479590: add byte ptr [rbp + 0xf], cl;  lodsd eax, dword ptr [rsi];  ret ;  
0x4795cf: lodsd eax, dword ptr [rsi];  ret ;  
0x4795e0: mov dword ptr [rdi + 0x10], ecx;  ret ;  
0x4795df: mov qword ptr [rdi + 0x10], r9;  ret ;  
0x4795de: jmp 0x10971f2f;  ret ;  
0x479687: or byte ptr [rax - 0x7d], cl;  ret ;  
0x479731: pop rbp;  ret ;  
0x479730: pop rdi;  pop rbp;  ret ;  
0x47972f: pop r15;  pop rbp;  ret ;  
0x47972e: pop rsi;  pop r15;  pop rbp;  ret ;  
0x47972d: pop r14;  pop r15;  pop rbp;  ret ;  
0x4797fc: enter -0x74b8, 0x14;  ret ;  
0x4797fb: pop rbp;  enter -0x74b8, 0x14;  ret ;  
0x479804: ror byte ptr [rax - 0x77], 0x14;  ret ;  
0x479803: pop rbp;  ror byte ptr [rax - 0x77], 0x14;  ret ;  
0x479a62: fisttp dword ptr [rax - 0x77];  ret ;  
0x479abf: adc byte ptr [rax + 1], cl;  ret ;  
0x479b08: pop rbx;  ret ;  
0x479b06: mov eax, edx;  pop rbx;  ret ;  
0x479b05: mov rax, rdx;  pop rbx;  ret ;  
0x479b76: sub ecx, dword ptr [rax - 0x7d];  ret ;  
0x479bb6: pop rdi;  ret ;  
0x479bb5: pop r15;  ret ;  
0x479bb4: pop rsi;  pop r15;  ret ;  
0x479bb3: pop r14;  pop r15;  ret ;  
0x479bb2: pop rbp;  pop r14;  pop r15;  ret ;  
0x479d2a: pop rdi;  ret ;  
0x479d29: pop r15;  ret ;  
0x479d28: pop rsi;  pop r15;  ret ;  
0x479d27: pop r14;  pop r15;  ret ;  
0x479d26: pop rbp;  pop r14;  pop r15;  ret ;  
0x479ff2: adc cl, byte ptr [rcx - 0x7d];  ret ;  
0x47a256: sub ecx, dword ptr [rax - 0x7d];  ret ;  
0x47a290: pop rsi;  ret ;  
0x47a28f: pop r14;  ret ;  
0x47a28e: pop rbp;  pop r14;  ret ;  
0x47a28d: pop r13;  pop r14;  ret ;  
0x47a28c: pop rsp;  pop r13;  pop r14;  ret ;  
0x47a409: pop rdi;  ret ;  
0x47a408: pop r15;  ret ;  
0x47a407: pop rsi;  pop r15;  ret ;  
0x47a406: pop r14;  pop r15;  ret ;  
0x47a405: pop rbp;  pop r14;  pop r15;  ret ;  
0x47a88f: leave ;  ret ;  
0x47a88e: dec ecx;  ret ;  
0x47a896: leave ;  ret ;  
0x47a895: dec ecx;  ret ;  
0x47a8af: leave ;  ret ;  
0x47a8ae: dec ecx;  ret ;  
0x47a8cd: leave ;  ret ;  
0x47a8cc: dec ecx;  ret ;  
0x47a92a: adc eax, eax;  ret ;  
0x47a928: mov eax, ecx;  adc eax, eax;  ret ;  
0x47aa31: add byte ptr [rax - 0x7d], cl;  ret ;  
0x47aa6a: pop rbx;  ret ;  
0x47aa69: pop rbp;  pop rbx;  ret ;  
0x47aa68: rcr byte ptr [rbp + 0x5b], 1;  ret ;  
0x47aa67: adc eax, edx;  pop rbp;  pop rbx;  ret ;  
0x47aa66: adc rax, rdx;  pop rbp;  pop rbx;  ret ;  
0x47aad5: add byte ptr [rax], al;  ret ;  
0x47aad3: add dword ptr [rax], eax;  add byte ptr [rax], al;  ret ;  
0x47aad2: mov eax, 1;  ret ;  
0x47aaf4: mov dword ptr [rdi], esi;  ret ;  
0x47aaf3: mov qword ptr [rdi], rsi;  ret ;  
0x47aaf1: add byte ptr [rax], al;  mov qword ptr [rdi], rsi;  ret ;  
0x47ab0a: add byte ptr [rax], al;  ret ;  
0x47ab08: add dword ptr [rax], eax;  add byte ptr [rax], al;  ret ;  
0x47ab07: mov eax, 1;  ret ;  
0x47ab5d: add byte ptr [rax], al;  ret ;  
0x47ab5b: add dword ptr [rax], eax;  add byte ptr [rax], al;  ret ;  
0x47ab5a: mov eax, 1;  ret ;  
0x47ab95: add byte ptr [rax], al;  ret ;  
0x47ab93: add dword ptr [rax], eax;  add byte ptr [rax], al;  ret ;  
0x47ab92: mov eax, 1;  ret ;  
0x47ac4d: add byte ptr [rax], al;  ret ;  
0x47ac4b: fadd dword ptr [rax];  add byte ptr [rax], al;  ret ;  
0x47acbd: pop rsp;  ret ;  
0x47acbc: pop r12;  ret ;  
0x47acbb: pop rbp;  pop r12;  ret ;  
0x47acba: pop rbx;  pop rbp;  pop r12;  ret ;  
0x47acb9: add byte ptr [rbx + 0x5d], bl;  pop r12;  ret ;  
0x47acd0: ret ;  
0x47accf: or ebx, esi;  ret ;  
0x47acce: js 0x47acd9;  ret ;  
0x47accd: sar byte ptr [rax + 9], 0xf3;  ret ;  
0x47accc: test eax, eax;  js 0x47acd9;  ret ;  
0x47ace7: mov eax, 0xffffffff;  ret ;  
0x47ad7f: pop rbx;  ret ;  
0x47ad7d: mov eax, edx;  pop rbx;  ret ;  
0x47ad7b: je 0x47ad81;  mov eax, edx;  pop rbx;  ret ;  
0x47adc2: pop rbx;  ret ;  
0x47adc0: mov eax, edx;  pop rbx;  ret ;  
0x47adbe: add byte ptr [rax], al;  mov eax, edx;  pop rbx;  ret ;  
0x47aebf: pop rbx;  ret ;  
0x47aebd: mov eax, edx;  pop rbx;  ret ;  
0x47aebc: mov rax, rdx;  pop rbx;  ret ;  
0x47aefb: pop rbx;  ret ;  
0x47aef9: add byte ptr [rax], al;  pop rbx;  ret ;  
0x47aef7: add eax, 0x5b000000;  ret ;  
0x47aff6: pop rsp;  ret ;  
0x47aff5: pop r12;  ret ;  
0x47aff4: pop rbp;  pop r12;  ret ;  
0x47aff3: pop rbx;  pop rbp;  pop r12;  ret ;  
0x47b014: dec dword ptr [rax + 0x39];  ret ;  
0x47b013: stc ;  dec dword ptr [rax + 0x39];  ret ;  
0x47b012: cmpsd dword ptr [rsi], dword ptr [rdi];  stc ;  dec dword ptr [rax + 0x39];  ret ;  
0x47b022: pop rsp;  ret ;  
0x47b021: pop r12;  ret ;  
0x47b020: pop rbp;  pop r12;  ret ;  
0x47b01f: pop rbx;  pop rbp;  pop r12;  ret ;  
0x47b01e: cmc ;  pop rbx;  pop rbp;  pop r12;  ret ;  
0x47b05e: add esp, 8;  ret ;  
0x47b05d: add rsp, 8;  ret ;  
0x47b10a: pop rbp;  ret ;  
0x47b109: pop rbx;  pop rbp;  ret ;  
0x47b108: sbb byte ptr [rbx + 0x5d], bl;  ret ;  
0x47b106: add esp, 0x18;  pop rbx;  pop rbp;  ret ;  
0x47b198: pop rbp;  ret ;  
0x47b197: pop rbx;  pop rbp;  ret ;  
0x47b196: sbb byte ptr [rbx + 0x5d], bl;  ret ;  
0x47b194: add esp, 0x18;  pop rbx;  pop rbp;  ret ;  
0x47b2b9: pop rbx;  ret ;  
0x47b2b7: add byte ptr [rax], al;  pop rbx;  ret ;  
0x47b2b6: add byte ptr [rax], r8b;  pop rbx;  ret ;  
0x47b33d: pop rsp;  ret ;  
0x47b33c: pop r12;  ret ;  
0x47b33b: pop rbp;  pop r12;  ret ;  
0x47b33a: pop rbx;  pop rbp;  pop r12;  ret ;  
0x47b339: rcr byte ptr [rbx + 0x5d], 0x41;  pop rsp;  ret ;  
0x47b428: add cl, ch;  ret ;  
0x47b427: insb byte ptr [rdi], dx;  add cl, ch;  ret ;  
0x47b426: leave ;  insb byte ptr [rdi], dx;  add cl, ch;  ret ;  
0x47b425: loopne 0x47b3f0;  insb byte ptr [rdi], dx;  add cl, ch;  ret ;  
0x47b44c: add esp, 8;  ret ;  
0x47b44b: add rsp, 8;  ret ;  
0x47b4c8: pop rbx;  ret ;  
0x47b4c6: mov dword ptr [rdx], eax;  pop rbx;  ret ;  
0x47b4c5: mov qword ptr [rdx], rax;  pop rbx;  ret ;  
0x47b4dc: pop rbx;  ret ;  
0x47b4da: mov dword ptr [rax], edx;  pop rbx;  ret ;  
0x47b4d9: mov qword ptr [rax], rdx;  pop rbx;  ret ;  
0x47b4e8: pop rbx;  ret ;  
0x47b4e6: mov dword ptr [rax], edi;  pop rbx;  ret ;  
0x47b4e5: mov qword ptr [rax], rdi;  pop rbx;  ret ;  
0x47b53e: pop rbx;  ret ;  
0x47b53c: mov dword ptr [rax], edx;  pop rbx;  ret ;  
0x47b53b: mov qword ptr [rax], rdx;  pop rbx;  ret ;  
0x47b590: neg eax;  ret ;  
0x47b58f: sal bh, 0xd8;  ret ;  
0x47b58e: mov dh, 0xc0;  neg eax;  ret ;  
0x47b58d: movzx eax, al;  neg eax;  ret ;  
0x47b5ed: pop rbx;  ret ;  
0x47b5ec: pop rdx;  pop rbx;  ret ;  
0x47b5eb: pop rax;  pop rdx;  pop rbx;  ret ;  
0x47b5ea: sbb byte ptr [rax + 0x5a], bl;  pop rbx;  ret ;  
0x47b5e9: sbb byte ptr [r8 + 0x5a], bl;  pop rbx;  ret ;  
0x47b657: add esp, 0x38;  ret ;  
0x47b656: add rsp, 0x38;  ret ;  
0x47b678: pop rsp;  ret ;  
0x47b677: pop r12;  ret ;  
0x47b676: pop rbp;  pop r12;  ret ;  
0x47b675: pop rbx;  pop rbp;  pop r12;  ret ;  
0x47b674: or al, 0x5b;  pop rbp;  pop r12;  ret ;  
0x47b72f: pop rbp;  ret ;  
0x47b72e: pop rbx;  pop rbp;  ret ;  
0x47b72d: or byte ptr [rbx + 0x5d], bl;  ret ;  
0x47b72b: add esp, 8;  pop rbx;  pop rbp;  ret ;  
0x47b74c: pop rbp;  ret ;  
0x47b74b: pop rbx;  pop rbp;  ret ;  
0x47b74a: fcomp dword ptr [rbx + 0x5d];  ret ;  
0x47b749: mov eax, ebx;  pop rbx;  pop rbp;  ret ;  
0x47b748: mov rax, rbx;  pop rbx;  pop rbp;  ret ;  
0x47ba80: pop rsi;  ret ;  
0x47ba7f: pop r14;  ret ;  
0x47ba7e: pop rsp;  pop r14;  ret ;  
0x47ba7d: pop r12;  pop r14;  ret ;  
0x47ba7c: pop rbp;  pop r12;  pop r14;  ret ;  
0x47bb55: pop rsi;  ret ;  
0x47bb54: pop r14;  ret ;  
0x47bb53: pop rsp;  pop r14;  ret ;  
0x47bb52: pop r12;  pop r14;  ret ;  
0x47bb51: pop rbp;  pop r12;  pop r14;  ret ;  
0x47bb78: add cl, ch;  ret ;  
0x47bb76: add byte ptr [rax], al;  add cl, ch;  ret ;  
0x47c08f: add byte ptr [rax + 0x29], cl;  ret ;  
0x47c08d: add byte ptr [rax], al;  add byte ptr [rax + 0x29], cl;  ret ;  
0x47c196: ret 0xe8c1;  
0x47c338: pop rdi;  ret ;  
0x47c337: pop r15;  ret ;  
0x47c336: pop rsi;  pop r15;  ret ;  
0x47c335: pop r14;  pop r15;  ret ;  
0x47c334: pop rbp;  pop r14;  pop r15;  ret ;  
0x47c3ee: add dword ptr [rax + 1], ecx;  ret ;  
0x47cab9: add byte ptr [rcx], bh;  ret ;  
0x47cab7: add byte ptr [rax], al;  add byte ptr [rcx], bh;  ret ;  
0x47cab6: add byte ptr [rax], 0;  add byte ptr [rcx], bh;  ret ;  
0x47caf9: ret 0xe8c1;  
0x47cc96: pop rdi;  ret ;  
0x47cc95: pop r15;  ret ;  
0x47cc94: pop rsi;  pop r15;  ret ;  
0x47cc93: pop r14;  pop r15;  ret ;  
0x47cc92: pop rbp;  pop r14;  pop r15;  ret ;  
0x47cd45: add dword ptr [rax + 1], ecx;  ret ;  
0x47ce80: ret ;  
0x47ce7f: or ebx, esi;  ret ;  
0x47ce7e: jle 0x47ce89;  ret ;  
0x47ce7d: sar byte ptr [rsi + 9], 1;  ret ;  
0x47ce7c: mov eax, edx;  jle 0x47ce89;  ret ;  
0x47ceaa: add byte ptr [rax], al;  ret ;  
0x47cea8: rol byte ptr [rdx], 1;  add byte ptr [rax], al;  ret ;  
0x47cea7: and eax, 0x2d0;  ret ;  
0x47cee7: pop rbx;  ret ;  
0x47cee4: mov dword ptr [rbx + 0x20], eax;  pop rbx;  ret ;  
0x47cee3: mov qword ptr [rbx + 0x20], rax;  pop rbx;  ret ;  
0x47d190: add byte ptr [rax - 0x7d], cl;  ret ;  
0x47d270: imul ecx;  ret ;  
0x47d26d: dec dword ptr [rcx - 0x77];  imul ecx;  ret ;  
0x47d2b4: pop rdi;  ret ;  
0x47d2b3: pop r15;  ret ;  
0x47d2b2: pop rsi;  pop r15;  ret ;  
0x47d2b1: pop r14;  pop r15;  ret ;  
0x47d2b0: pop rbp;  pop r14;  pop r15;  ret ;  
0x47d358: inc dword ptr [rcx - 0x77];  ret ;  
0x47d7ab: ret 0xf48;  
0x47d860: ret 0xf48;  
0x47de98: pop rbp;  ret ;  
0x47de97: pop rdi;  pop rbp;  ret ;  
0x47de96: pop r15;  pop rbp;  ret ;  
0x47de95: pop rsi;  pop r15;  pop rbp;  ret ;  
0x47de94: pop r14;  pop r15;  pop rbp;  ret ;  
0x47e1a2: add byte ptr [rax - 0x7d], cl;  ret ;  
0x47e1a0: add al, byte ptr [rax];  add byte ptr [rax - 0x7d], cl;  ret ;  
0x47e4b8: or byte ptr [rax - 0x77], cl;  ret ;  
0x47e58d: pop rbx;  ret ;  
0x47e58a: add esp, 0x10;  pop rbx;  ret ;  
0x47e589: add rsp, 0x10;  pop rbx;  ret ;  
0x47e6ef: ret ;  
0x47e78b: pop rbp;  ret ;  
0x47e78a: pop r13;  ret ;  
0x47e789: pop rsp;  pop r13;  ret ;  
0x47e788: pop r12;  pop r13;  ret ;  
0x47e787: pop rbp;  pop r12;  pop r13;  ret ;  
0x47e7b2: ror dword ptr [rax - 0x77], cl;  ret ;  
0x47e7b0: add bh, bh;  ror dword ptr [rax - 0x77], cl;  ret ;  
0x47e861: ret ;  
0x47e860: add bl, dh;  ret ;  
0x47e85f: add byte ptr [rax], al;  ret ;  
0x47e85e: add byte ptr [rax], r8b;  ret ;  
0x47e8f3: add dword ptr [rbp + rcx*4 + 0x74], ecx;  ret ;  
0x47e8f2: call 0x74d534f8;  ret ;  
0x47e90a: adc ecx, dword ptr [rax - 0x7d];  ret ;  
0x47e91b: pop rsi;  ret ;  
0x47e91a: pop r14;  ret ;  
0x47e919: pop rbp;  pop r14;  ret ;  
0x47e918: pop r13;  pop r14;  ret ;  
0x47e917: pop rsp;  pop r13;  pop r14;  ret ;  
0x47ea2e: pop rdi;  ret ;  
0x47ea2d: pop r15;  ret ;  
0x47ea2c: pop rsi;  pop r15;  ret ;  
0x47ea2b: pop r14;  pop r15;  ret ;  
0x47ea2a: pop rbp;  pop r14;  pop r15;  ret ;  
0x47ea58: or byte ptr [rax - 0x77], cl;  ret ;  
0x47ea57: or byte ptr [r8 - 0x77], cl;  ret ;  
0x47ea5f: dec dword ptr [rbp + rcx*4 + 0x7c];  ret ;  
0x47ea5e: dec dword ptr [r13 + r9*4 + 0x7c];  ret ;  
0x47ea72: adc ecx, dword ptr [rax - 0x7d];  ret ;  
0x47ec6b: ret ;  
0x47ec6a: pop rbp;  ret ;  
0x47ec69: pop rdi;  pop rbp;  ret ;  
0x47ec68: pop r15;  pop rbp;  ret ;  
0x47ec67: pop rsi;  pop r15;  pop rbp;  ret ;  
0x47f118: pop rbp;  ret ;  
0x47f117: pop rdi;  pop rbp;  ret ;  
0x47f116: pop r15;  pop rbp;  ret ;  
0x47f115: pop rsi;  pop r15;  pop rbp;  ret ;  
0x47f114: pop r14;  pop r15;  pop rbp;  ret ;  
0x47f23a: add byte ptr [rax + 1], cl;  ret ;  
0x47f238: add dword ptr [rax], eax;  add byte ptr [rax + 1], cl;  ret ;  
0x47f2d7: pop rbp;  ret ;  
0x47f2d6: pop rdi;  pop rbp;  ret ;  
0x47f2d5: pop r15;  pop rbp;  ret ;  
0x47f2d4: pop rsi;  pop r15;  pop rbp;  ret ;  
0x47f2d3: pop r14;  pop r15;  pop rbp;  ret ;  
0x47f307: pop rbp;  ret ;  
0x47f306: pop rdi;  pop rbp;  ret ;  
0x47f305: pop r15;  pop rbp;  ret ;  
0x47f304: pop rsi;  pop r15;  pop rbp;  ret ;  
0x47f303: pop r14;  pop r15;  pop rbp;  ret ;  
0x47f3e6: fucomi st(1);  ret ;  
0x47f527: ror byte ptr [rdi], 0x84;  ret ;  
0x47f784: add byte ptr [rcx], bh;  ret ;  
0x47f782: jg 0x47f784;  add byte ptr [rcx], bh;  ret ;  
0x47f7a5: pop rbp;  ret ;  
0x47f7a4: pop rdi;  pop rbp;  ret ;  
0x47f7a3: pop r15;  pop rbp;  ret ;  
0x47f7a2: pop rsi;  pop r15;  pop rbp;  ret ;  
0x47f7a1: pop r14;  pop r15;  pop rbp;  ret ;  
0x47f8d5: pop rbp;  ret ;  
0x47f8d4: pop rdi;  pop rbp;  ret ;  
0x47f8d3: pop r15;  pop rbp;  ret ;  
0x47f8d2: pop rsi;  pop r15;  pop rbp;  ret ;  
0x47f8d1: pop r14;  pop r15;  pop rbp;  ret ;  
0x47f8f1: xor eax, eax;  ret ;  
0x47fa03: pop rbp;  ret ;  
0x47fa02: pop r13;  ret ;  
0x47fa01: pop rsp;  pop r13;  ret ;  
0x47fa00: pop r12;  pop r13;  ret ;  
0x47f9ff: pop rbp;  pop r12;  pop r13;  ret ;  
0x47fbe4: add byte ptr [rax - 0x77], cl;  ret ;  
0x47fccc: pop rbp;  ret ;  
0x47fccb: pop rdi;  pop rbp;  ret ;  
0x47fcca: pop r15;  pop rbp;  ret ;  
0x47fcc9: pop rsi;  pop r15;  pop rbp;  ret ;  
0x47fcc8: pop r14;  pop r15;  pop rbp;  ret ;  
0x480358: ret ;  
0x480357: pop rsp;  ret ;  
0x480356: pop r12;  ret ;  
0x480355: pop rbp;  pop r12;  ret ;  
0x480354: pop rbx;  pop rbp;  pop r12;  ret ;  
0x48043a: adc eax, eax;  ret ;  
0x480438: mov eax, ecx;  adc eax, eax;  ret ;  
0x480541: add byte ptr [rax - 0x7d], cl;  ret ;  
0x48057a: pop rbx;  ret ;  
0x480579: pop rbp;  pop rbx;  ret ;  
0x480578: rcr byte ptr [rbp + 0x5b], 1;  ret ;  
0x480577: adc eax, edx;  pop rbp;  pop rbx;  ret ;  
0x480576: adc rax, rdx;  pop rbp;  pop rbx;  ret ;  
0x4805d4: ret ;  
0x4805d3: pop rbp;  ret ;  
0x4805d2: pop r13;  ret ;  
0x4805d1: pop rsp;  pop r13;  ret ;  
0x4805d0: pop r12;  pop r13;  ret ;  
0x480912: pop rbp;  ret ;  
0x480911: pop rdi;  pop rbp;  ret ;  
0x480910: pop r15;  pop rbp;  ret ;  
0x48090f: pop rsi;  pop r15;  pop rbp;  ret ;  
0x48090e: pop r14;  pop r15;  pop rbp;  ret ;  
0x48097b: add byte ptr [rax - 0x7d], cl;  ret ;  
0x480a4a: adc byte ptr [rax - 0x7d], cl;  ret ;  
0x481038: dec dword ptr [rax + 0x63];  ret ;  
0x481366: ror byte ptr [rdi], 0x85;  ret ;  
0x4813ff: ret 0x2948;  
0x48188e: ret 0xcb73;  
0x481915: dec dword ptr [rax - 0x77];  ret ;  
0x481ac8: dec dword ptr [rax - 0x77];  ret ;  
0x481f5e: ret ;  
0x48237c: dec dword ptr [rax + 0x63];  ret ;  
0x482a64: add dword ptr [rax + 1], ecx;  ret ;  
0x4835b5: dec dword ptr [rax + 0x39];  ret ;  
0x4835b4: dec dword ptr [r8 + 0x39];  ret ;  
0x48367e: or byte ptr [rax - 0x77], cl;  ret ;  
0x4836d8: cmp byte ptr [rax - 0x7d], cl;  ret ;  
0x4839ce: dec dword ptr [rax + 1];  ret ;  
0x484279: dec dword ptr [rax - 0x77];  ret ;  
0x4842f0: dec dword ptr [rax - 0x77];  ret ;  
0x4843f6: add cl, byte ptr [rax + 1];  ret ;  
0x4848b7: dec dword ptr [rax - 0x7d];  ret ;  
0x484b80: add cl, ch;  ret ;  
0x484b7e: add byte ptr [rax], al;  add cl, ch;  ret ;  
0x484fdf: dec dword ptr [rax - 0x77];  ret ;  
0x485f42: xchg eax, esp;  ret ;  
0x485f40: dec dword ptr [rdi];  xchg eax, esp;  ret ;  
0x486081: ret 0x940f;  
0x486371: add dword ptr [rax - 0x7d], ecx;  ret ;  
0x4864f3: adc byte ptr [rax - 0x7d], cl;  ret ;  
0x486645: adc byte ptr [rax - 0x77], cl;  ret ;  
0x48666d: adc byte ptr [rax - 0x7d], cl;  ret ;  
0x486aa3: dec dword ptr [rax - 0x77];  ret ;  
0x487495: dec dword ptr [rax - 0x7d];  ret ;  
0x487f3c: ror byte ptr [rdi], 0x84;  ret ;  
0x48827e: pop rsp;  ret ;  
0x48827d: pop r12;  ret ;  
0x48827c: pop rbp;  pop r12;  ret ;  
0x48827b: pop rbx;  pop rbp;  pop r12;  ret ;  
0x4882ca: pop rsp;  ret ;  
0x4882c9: pop r12;  ret ;  
0x4882c8: pop rbp;  pop r12;  ret ;  
0x4882c7: pop rbx;  pop rbp;  pop r12;  ret ;  
0x488385: mov esi, 0xe8fffffe;  ret ;  
0x4883de: pop rbx;  ret ;  
0x4883dd: pop rdx;  pop rbx;  ret ;  
0x4883dc: pop rax;  pop rdx;  pop rbx;  ret ;  
0x4883db: adc byte ptr [rax + 0x5a], bl;  pop rbx;  ret ;  
0x4883da: adc byte ptr [r8 + 0x5a], bl;  pop rbx;  ret ;  
0x488452: add esp, 0x28;  ret ;  
0x488451: add rsp, 0x28;  ret ;  
0x48848e: neg eax;  ret ;  
0x48848d: sal bh, 0xd8;  ret ;  
0x48848c: mov dh, 0xc0;  neg eax;  ret ;  
0x48848b: movzx eax, al;  neg eax;  ret ;  
0x4884a9: pop rbx;  ret ;  
0x4884a6: mov dword ptr [rbx + 0x18], eax;  pop rbx;  ret ;  
0x4884a5: mov qword ptr [rbx + 0x18], rax;  pop rbx;  ret ;  
0x488503: pop rbx;  ret ;  
0x488501: mov eax, ebx;  pop rbx;  ret ;  
0x488500: mov rax, rbx;  pop rbx;  ret ;  
0x48852d: pop rbx;  ret ;  
0x48852a: mov dword ptr [rbx + 0x20], eax;  pop rbx;  ret ;  
0x488529: mov qword ptr [rbx + 0x20], rax;  pop rbx;  ret ;  
0x4885ab: pop rbx;  ret ;  
0x4885a9: mov eax, ebx;  pop rbx;  ret ;  
0x4885a8: mov rax, rbx;  pop rbx;  ret ;  
0x4885a7: push rax;  mov rax, rbx;  pop rbx;  ret ;  
0x488622: pop rsp;  ret ;  
0x488621: pop r12;  ret ;  
0x488620: pop rbp;  pop r12;  ret ;  
0x48861f: pop rbx;  pop rbp;  pop r12;  ret ;  
0x48861e: rcr byte ptr [rbx + 0x5d], 0x41;  pop rsp;  ret ;  
0x488661: pop rsp;  ret ;  
0x488660: pop r12;  ret ;  
0x48865f: pop rbp;  pop r12;  ret ;  
0x48865e: pop rbx;  pop rbp;  pop r12;  ret ;  
0x48865d: add byte ptr [rbx + 0x5d], bl;  pop r12;  ret ;  
0x488719: cmove eax, edx;  ret ;  
0x488718: cmove rax, rdx;  ret ;  
0x488717: leave ;  cmove rax, rdx;  ret ;  
0x4887a4: pop rsi;  ret ;  
0x4887a3: pop r14;  ret ;  
0x4887a2: pop rbp;  pop r14;  ret ;  
0x4887a1: pop r13;  pop r14;  ret ;  
0x4887a0: pop rsp;  pop r13;  pop r14;  ret ;  
0x4887a8: add byte ptr [rax - 0x77], cl;  ret ;  
0x488893: pop rsi;  ret ;  
0x488892: pop r14;  ret ;  
0x488891: pop rbp;  pop r14;  ret ;  
0x488890: pop r13;  pop r14;  ret ;  
0x48888f: pop rsp;  pop r13;  pop r14;  ret ;  
0x4888d6: pop rsi;  ret ;  
0x4888d5: pop r14;  ret ;  
0x4888d4: pop rbp;  pop r14;  ret ;  
0x4888d3: pop r13;  pop r14;  ret ;  
0x4888d2: pop rsp;  pop r13;  pop r14;  ret ;  
0x48898c: add dword ptr [rdx + rax*2], 1;  ret ;  
0x48898b: add word ptr [rdx + rax*2], 1;  ret ;  
0x488b2d: pop rbp;  ret ;  
0x488b2c: pop r13;  ret ;  
0x488b2b: pop rsp;  pop r13;  ret ;  
0x488b2a: pop r12;  pop r13;  ret ;  
0x488b29: pop rbp;  pop r12;  pop r13;  ret ;  
0x488b7a: pop rbp;  ret ;  
0x488b79: pop r13;  ret ;  
0x488b78: pop rsp;  pop r13;  ret ;  
0x488b77: pop r12;  pop r13;  ret ;  
0x488b76: pop rbp;  pop r12;  pop r13;  ret ;  
0x488b95: and al, 0;  ret ;  
0x488b94: and al, 0;  ret ;  
0x488b92: add eax, 0x244bca;  ret ;  
0x488bce: pop rbx;  ret ;  
0x488bcd: pop rdx;  pop rbx;  ret ;  
0x488bcc: pop rax;  pop rdx;  pop rbx;  ret ;  
0x488bcb: add ebx, dword ptr [rax + 0x5a];  pop rbx;  ret ;  
0x488bca: mov dword ptr [rbx], eax;  pop rax;  pop rdx;  pop rbx;  ret ;  
0x488c77: pop rbp;  ret ;  
0x488c76: pop rdi;  pop rbp;  ret ;  
0x488c75: pop r15;  pop rbp;  ret ;  
0x488c74: pop rsi;  pop r15;  pop rbp;  ret ;  
0x488c73: pop r14;  pop r15;  pop rbp;  ret ;  
0x488f05: add esp, 0x28;  ret ;  
0x488f04: add rsp, 0x28;  ret ;  
0x48917b: pop rdi;  ret ;  
0x48917a: pop r15;  ret ;  
0x489179: pop rsi;  pop r15;  ret ;  
0x489178: pop r14;  pop r15;  ret ;  
0x489177: pop rbp;  pop r14;  pop r15;  ret ;  
0x489217: add byte ptr [rax + 1], cl;  ret ;  
0x489215: add byte ptr [rax], al;  add byte ptr [rax + 1], cl;  ret ;  
0x489301: pop rsi;  ret ;  
0x489300: pop r14;  ret ;  
0x4892ff: pop rbp;  pop r14;  ret ;  
0x4892fe: pop r13;  pop r14;  ret ;  
0x4892fd: pop rsp;  pop r13;  pop r14;  ret ;  
0x489350: pop rsi;  ret ;  
0x48934f: pop r14;  ret ;  
0x48934e: pop rbp;  pop r14;  ret ;  
0x48934d: pop r13;  pop r14;  ret ;  
0x48934c: pop rsp;  pop r13;  pop r14;  ret ;  
0x489388: pop rsi;  ret ;  
0x489387: pop r14;  ret ;  
0x489386: pop rbp;  pop r14;  ret ;  
0x489385: pop r13;  pop r14;  ret ;  
0x489384: pop rsp;  pop r13;  pop r14;  ret ;  
0x489428: pop rsi;  ret ;  
0x489427: pop r14;  ret ;  
0x489426: pop rbp;  pop r14;  ret ;  
0x489425: pop r13;  pop r14;  ret ;  
0x489424: pop rsp;  pop r13;  pop r14;  ret ;  
0x48949a: add byte ptr [rax - 0x39], cl;  ret ;  
0x489498: add byte ptr [rax], al;  add byte ptr [rax - 0x39], cl;  ret ;  
0x489628: add byte ptr [rax - 0x7d], cl;  ret ;  
0x4898d0: pop rdi;  ret ;  
0x4898cf: pop r15;  ret ;  
0x4898ce: pop rsi;  pop r15;  ret ;  
0x4898cd: pop r14;  pop r15;  ret ;  
0x4898cc: pop rbp;  pop r14;  pop r15;  ret ;  
0x489bf7: cmp cl, ch;  ret ;  
0x48a4c3: outsd dx, dword ptr [rsi];  ret ;  
0x48a4c0: jmp qword ptr [rsi + 0xf];  outsd dx, dword ptr [rsi];  ret ;  
0x48b313: fimul word ptr [rax + 0x29];  ret ;  
0x48bbc4: add byte ptr [rax - 0x77], cl;  ret ;  
0x48bbc2: add byte ptr [rax], al;  add byte ptr [rax - 0x77], cl;  ret ;  
0x48bc34: add byte ptr [rax - 0x77], cl;  ret ;  
0x48bc32: add byte ptr [rax], al;  add byte ptr [rax - 0x77], cl;  ret ;  
0x48bc4d: add byte ptr [rax - 0x77], cl;  ret ;  
0x48bc4b: add byte ptr [rax], al;  add byte ptr [rax - 0x77], cl;  ret ;  
0x48c37b: pop rdi;  ret ;  
0x48c37a: pop r15;  ret ;  
0x48c379: pop rsi;  pop r15;  ret ;  
0x48c378: pop r14;  pop r15;  ret ;  
0x48c377: pop rbp;  pop r14;  pop r15;  ret ;  
0x48c417: add byte ptr [rax + 1], cl;  ret ;  
0x48c415: add byte ptr [rax], al;  add byte ptr [rax + 1], cl;  ret ;  
0x48c504: pop rsi;  ret ;  
0x48c503: pop r14;  ret ;  
0x48c502: pop rbp;  pop r14;  ret ;  
0x48c501: pop r13;  pop r14;  ret ;  
0x48c500: pop rsp;  pop r13;  pop r14;  ret ;  
0x48c553: pop rsi;  ret ;  
0x48c552: pop r14;  ret ;  
0x48c551: pop rbp;  pop r14;  ret ;  
0x48c550: pop r13;  pop r14;  ret ;  
0x48c54f: pop rsp;  pop r13;  pop r14;  ret ;  
0x48c588: pop rsi;  ret ;  
0x48c587: pop r14;  ret ;  
0x48c586: pop rbp;  pop r14;  ret ;  
0x48c585: pop r13;  pop r14;  ret ;  
0x48c584: pop rsp;  pop r13;  pop r14;  ret ;  
0x48c628: pop rsi;  ret ;  
0x48c627: pop r14;  ret ;  
0x48c626: pop rbp;  pop r14;  ret ;  
0x48c625: pop r13;  pop r14;  ret ;  
0x48c624: pop rsp;  pop r13;  pop r14;  ret ;  
0x48c69a: add byte ptr [rax - 0x39], cl;  ret ;  
0x48c698: add byte ptr [rax], al;  add byte ptr [rax - 0x39], cl;  ret ;  
0x48c838: add byte ptr [rax - 0x7d], cl;  ret ;  
0x48caf0: pop rdi;  ret ;  
0x48caef: pop r15;  ret ;  
0x48caee: pop rsi;  pop r15;  ret ;  
0x48caed: pop r14;  pop r15;  ret ;  
0x48caec: pop rbp;  pop r14;  pop r15;  ret ;  
0x48d6fb: outsd dx, dword ptr [rsi];  ret ;  
0x48d6f8: jmp qword ptr [rsi + 0xf];  outsd dx, dword ptr [rsi];  ret ;  
0x48e4d2: fimul word ptr [rax + 0x29];  ret ;  
0x48eadf: add byte ptr [rax - 0x77], cl;  ret ;  
0x48eadd: add byte ptr [rax], al;  add byte ptr [rax - 0x77], cl;  ret ;  
0x48eb6d: add byte ptr [rax - 0x77], cl;  ret ;  
0x48eb6b: add byte ptr [rax], al;  add byte ptr [rax - 0x77], cl;  ret ;  
0x48f233: pop rdi;  ret ;  
0x48f232: pop r15;  ret ;  
0x48f231: pop rsi;  pop r15;  ret ;  
0x48f230: pop r14;  pop r15;  ret ;  
0x48f22f: pop rbp;  pop r14;  pop r15;  ret ;  
0x48f2cf: add byte ptr [rax + 1], cl;  ret ;  
0x48f2cd: add byte ptr [rax], al;  add byte ptr [rax + 1], cl;  ret ;  
0x48f3c2: leave ;  ret ;  
0x48f3c1: fmulp st(1);  ret ;  
0x48f3c0: pop rsi;  fmulp st(1);  ret ;  
0x48f3bf: pop r14;  fmulp st(1);  ret ;  
0x48f3be: pop rbp;  pop r14;  fmulp st(1);  ret ;  
0x48f411: pop rsi;  ret ;  
0x48f410: pop r14;  ret ;  
0x48f40f: pop rbp;  pop r14;  ret ;  
0x48f40e: pop r13;  pop r14;  ret ;  
0x48f40d: pop rsp;  pop r13;  pop r14;  ret ;  
0x48f443: fmul st(0);  ret ;  
0x48f442: pop rsi;  fmul st(0);  ret ;  
0x48f441: pop r14;  fmul st(0);  ret ;  
0x48f440: pop rbp;  pop r14;  fmul st(0);  ret ;  
0x48f4db: fmul st(0);  ret ;  
0x48f4da: pop rsi;  fmul st(0);  ret ;  
0x48f4d9: pop r14;  fmul st(0);  ret ;  
0x48f4d8: pop rbp;  pop r14;  fmul st(0);  ret ;  
0x48f548: fmul dword ptr [rax - 0x39];  ret ;  
0x48fc7e: pop rdi;  ret ;  
0x48fc7d: pop r15;  ret ;  
0x48fc7c: pop rsi;  pop r15;  ret ;  
0x48fc7b: pop r14;  pop r15;  ret ;  
0x48fc7a: pop rbp;  pop r14;  pop r15;  ret ;  
0x490532: outsd dx, dword ptr [rsi];  ret ;  
0x49052f: jmp qword ptr [rsi + 0xf];  outsd dx, dword ptr [rsi];  ret ;  
0x4910e9: ror byte ptr [rdi], 0x8f;  ret ;  
0x491c8a: pop rbp;  ret ;  
0x491c89: pop rbx;  pop rbp;  ret ;  
0x491c88: sub byte ptr [rbx + 0x5d], bl;  ret ;  
0x491c86: add esp, 0x28;  pop rbx;  pop rbp;  ret ;  
0x491cf8: push rbp;  ret ;  
0x491d0a: pop rbp;  ret ;  
0x491d09: pop rbx;  pop rbp;  ret ;  
0x491d08: sub byte ptr [rbx + 0x5d], bl;  ret ;  
0x491d06: add esp, 0x28;  pop rbx;  pop rbp;  ret ;  
0x491db8: pop rbp;  ret ;  
0x491db7: pop rbx;  pop rbp;  ret ;  
0x491db6: sub byte ptr [rbx + 0x5d], bl;  ret ;  
0x491db4: add esp, 0x28;  pop rbx;  pop rbp;  ret ;  
0x491e33: cld ;  ret ;  
0x491e32: and al, 0xfc;  ret ;  
0x491e31: and al, 0xfc;  ret ;  
0x491e30: adc byte ptr [rsp - 4], al;  ret ;  
0x491e2f: movups xmm0, xmmword ptr [rsp - 4];  ret ;  
0x491e79: clc ;  ret ;  
0x491e78: and al, 0xf8;  ret ;  
0x491e77: and al, 0xf8;  ret ;  
0x491e76: adc byte ptr [rsp - 8], al;  ret ;  
0x491e75: movups xmm0, xmmword ptr [rsp - 8];  ret ;  
0x491ebd: and al, 0xe8;  ret ;  
0x491ebc: insb byte ptr [rdi], dx;  and al, 0xe8;  ret ;  
0x491ebb: fld xword ptr [rsp - 0x18];  ret ;  
0x491eba: in al, dx;  fld xword ptr [rsp - 0x18];  ret ;  
0x491ef8: add byte ptr [rax], al;  ret ;  
0x491ef5: add eax, 0x67;  ret ;  
0x491f4b: add byte ptr [rax], al;  ret ;  
0x491f49: add al, 0;  add byte ptr [rax], al;  ret ;  
0x491f48: add eax, 4;  ret ;  
0x49456f: sub eax, ecx;  ret ;  
0x49456d: add al, 0x82;  sub eax, ecx;  ret ;  
0x49456c: mov eax, dword ptr [rdx + rax*4];  sub eax, ecx;  ret ;  
0x494572: xor eax, eax;  ret ;  
0x494571: ret ;  xor eax, eax;  ret ;  
0x494570: enter 0x31c3, -0x40;  ret ;  
0x49456f: sub eax, ecx;  ret ;  xor eax, eax;  ret ;  
0x494594: sub eax, ecx;  ret ;  
0x494592: add al, 0x82;  sub eax, ecx;  ret ;  
0x494591: mov eax, dword ptr [rdx + rax*4];  sub eax, ecx;  ret ;  
0x49487a: sub eax, edx;  ret ;  
0x494879: xchg eax, ecx;  sub eax, edx;  ret ;  
0x494878: adc al, 0x91;  sub eax, edx;  ret ;  
0x494877: mov edx, dword ptr [rcx + rdx*4];  sub eax, edx;  ret ;  
0x4949a7: ret 0x4910;  
0x494b87: ret 0x4910;  
0x494d59: ret 0x4910;  
0x494f37: ret 0x4910;  
0x495117: ret 0x4910;  
0x4952f7: ret 0x4910;  
0x4954d7: ret 0x4910;  
0x4956b7: ret 0x4910;  
0x495897: ret 0x4910;  
0x495a77: ret 0x4910;  
0x495c57: ret 0x4910;  
0x495e37: ret 0x4910;  
0x496017: ret 0x4910;  
0x4961f7: ret 0x4910;  
0x4963d7: ret 0x4910;  
0x49650b: sub eax, edx;  ret ;  
0x496509: add al, 0x81;  sub eax, edx;  ret ;  
0x496508: mov eax, dword ptr [rcx + rax*4];  sub eax, edx;  ret ;  
0x49653f: sub eax, ecx;  ret ;  
0x49653d: add al, 0x82;  sub eax, ecx;  ret ;  
0x49653c: mov eax, dword ptr [rdx + rax*4];  sub eax, ecx;  ret ;  
0x496542: xor eax, eax;  ret ;  
0x496541: ret ;  xor eax, eax;  ret ;  
0x496540: enter 0x31c3, -0x40;  ret ;  
0x49653f: sub eax, ecx;  ret ;  xor eax, eax;  ret ;  
0x496564: sub eax, ecx;  ret ;  
0x496562: add al, 0x82;  sub eax, ecx;  ret ;  
0x496561: mov eax, dword ptr [rdx + rax*4];  sub eax, ecx;  ret ;  
0x4967da: sub eax, edx;  ret ;  
0x4967d9: xchg eax, ecx;  sub eax, edx;  ret ;  
0x4967d8: adc al, 0x91;  sub eax, edx;  ret ;  
0x4967d7: mov edx, dword ptr [rcx + rdx*4];  sub eax, edx;  ret ;  
0x4968ce: ret 0x4910;  
0x496a4e: ret 0x4910;  
0x496bc6: ret 0x4910;  
0x496d4e: ret 0x4910;  
0x496ece: ret 0x4910;  
0x49704e: ret 0x4910;  
0x4971ce: ret 0x4910;  
0x49734e: ret 0x4910;  
0x4974ce: ret 0x4910;  
0x49764e: ret 0x4910;  
0x4977ce: ret 0x4910;  
0x49794e: ret 0x4910;  
0x497ace: ret 0x4910;  
0x497c4e: ret 0x4910;  
0x497dce: ret 0x4910;  
0x497ebb: sub eax, edx;  ret ;  
0x497eb9: add al, 0x81;  sub eax, edx;  ret ;  
0x497eb8: mov eax, dword ptr [rcx + rax*4];  sub eax, edx;  ret ;  
0x497eef: sub eax, ecx;  ret ;  
0x497eed: add al, 0x82;  sub eax, ecx;  ret ;  
0x497eec: mov eax, dword ptr [rdx + rax*4];  sub eax, ecx;  ret ;  
0x497ef2: xor eax, eax;  ret ;  
0x497ef1: ret ;  xor eax, eax;  ret ;  
0x497ef0: enter 0x31c3, -0x40;  ret ;  
0x497eef: sub eax, ecx;  ret ;  xor eax, eax;  ret ;  
0x497f14: sub eax, ecx;  ret ;  
0x497f12: add al, 0x82;  sub eax, ecx;  ret ;  
0x497f11: mov eax, dword ptr [rdx + rax*4];  sub eax, ecx;  ret ;  
0x49a44f: sub eax, ecx;  ret ;  
0x49a44d: add al, 0x82;  sub eax, ecx;  ret ;  
0x49a44c: mov eax, dword ptr [rdx + rax*4];  sub eax, ecx;  ret ;  
0x49a452: xor eax, eax;  ret ;  
0x49a451: ret ;  xor eax, eax;  ret ;  
0x49a450: enter 0x31c3, -0x40;  ret ;  
0x49a44f: sub eax, ecx;  ret ;  xor eax, eax;  ret ;  
0x49a474: sub eax, ecx;  ret ;  
0x49a472: add al, 0x82;  sub eax, ecx;  ret ;  
0x49a471: mov eax, dword ptr [rdx + rax*4];  sub eax, ecx;  ret ;  
0x49a4b8: ret ;  
0x49a4b7: fpatan ;  ret ;  
0x49a4b6: je 0x49a491;  ret ;  
0x49a4b4: add al, 0x81;  je 0x49a491;  ret ;  
0x49a4c1: xor eax, eax;  ret ;  
0x49a4bf: add byte ptr [rax], al;  xor eax, eax;  ret ;  
0x49a550: add esp, 8;  ret ;  
0x49a54f: add rsp, 8;  ret ;  
0x49a634: add esp, 8;  ret ;  
0x49a633: add rsp, 8;  ret ;  
0x49a670: add esp, 8;  ret ;  
0x49a66f: add rsp, 8;  ret ;  
0x49a67c: add esp, 8;  ret ;  
0x49a67b: add rsp, 8;  ret ;  
0x49a699: add esp, 8;  ret ;  
0x49a698: add rsp, 8;  ret ;  
0x49a6a9: add esp, 8;  ret ;  
0x49a6a8: add rsp, 8;  ret ;  
0x49a79c: ret ;  
0x49a79b: pop rbp;  ret ;  
0x49a79a: pop rdi;  pop rbp;  ret ;  
0x49a799: pop r15;  pop rbp;  ret ;  
0x49a798: pop rsi;  pop r15;  pop rbp;  ret ;  
0x49b026: add byte ptr [rax], cl;  ret ;  
0x49b024: and byte ptr [rbx], ah;  add byte ptr [rax], cl;  ret ;  
0x49b1a5: sub byte ptr [rax - 0x7d], cl;  ret ;  
0x49b1a3: jl 0x49b1c9;  sub byte ptr [rax - 0x7d], cl;  ret ;  
0x49b1ce: adc ecx, dword ptr [rax - 0x7d];  ret ;  
0x49b244: add byte ptr [rax], al;  ret ;  
0x49b241: mov eax, 5;  ret ;  
0x49b2f8: add byte ptr [rax - 0x7d], cl;  ret ;  
0x49b357: pop rdi;  ret ;  
0x49b356: pop r15;  ret ;  
0x49b355: pop rsi;  pop r15;  ret ;  
0x49b354: pop r14;  pop r15;  ret ;  
0x49b353: pop rbp;  pop r14;  pop r15;  ret ;  
0x49b389: pop rdi;  ret ;  
0x49b388: pop r15;  ret ;  
0x49b387: pop rsi;  pop r15;  ret ;  
0x49b386: pop r14;  pop r15;  ret ;  
0x49b385: pop rbp;  pop r14;  pop r15;  ret ;  
0x49b3e8: add dword ptr [rax - 0x7d], ecx;  ret ;  
0x49b3e6: add byte ptr [rax], al;  add dword ptr [rax - 0x7d], ecx;  ret ;  
0x49b44a: dec dword ptr [rax - 0x77];  ret ;  
0x49b745: pop rdi;  ret ;  
0x49b744: pop r15;  ret ;  
0x49b743: pop rsi;  pop r15;  ret ;  
0x49b742: pop r14;  pop r15;  ret ;  
0x49b741: pop rbp;  pop r14;  pop r15;  ret ;  
0x49b9ef: add ecx, dword ptr [rax + 0x63];  ret ;  
0x49b9ee: push rdi;  add ecx, dword ptr [rax + 0x63];  ret ;  
0x49bd3b: ret 0x2949;  
0x49bf72: dec dword ptr [rcx - 0x77];  ret ;  
0x49bf70: idiv edi;  dec dword ptr [rcx - 0x77];  ret ;  
0x49c022: add dword ptr [rax - 0x7d], ecx;  ret ;  
0x49c06c: pop rdi;  ret ;  
0x49c06b: pop r15;  ret ;  
0x49c06a: pop rsi;  pop r15;  ret ;  
0x49c069: pop r14;  pop r15;  ret ;  
0x49c068: pop rbp;  pop r14;  pop r15;  ret ;  
0x49c407: pop rbp;  ret ;  
0x49c406: pop r13;  ret ;  
0x49c405: pop rsp;  pop r13;  ret ;  
0x49c404: pop r12;  pop r13;  ret ;  
0x49c403: pop rbp;  pop r12;  pop r13;  ret ;  
0x49c46a: pop rbp;  ret ;  
0x49c469: pop rbx;  pop rbp;  ret ;  
0x49c468: or byte ptr [rbx + 0x5d], bl;  ret ;  
0x49c466: add esp, 8;  pop rbx;  pop rbp;  ret ;  
0x49c499: pop rbp;  ret ;  
0x49c498: pop rbx;  pop rbp;  ret ;  
0x49c497: or byte ptr [rbx + 0x5d], bl;  ret ;  
0x49c495: add esp, 8;  pop rbx;  pop rbp;  ret ;  
0x49c540: pop rbp;  ret ;  
0x49c53f: pop r13;  ret ;  
0x49c53e: pop rsp;  pop r13;  ret ;  
0x49c53d: pop r12;  pop r13;  ret ;  
0x49c53c: pop rbp;  pop r12;  pop r13;  ret ;  
0x49c55a: pop rbp;  ret ;  
0x49c559: pop r13;  ret ;  
0x49c558: pop rsp;  pop r13;  ret ;  
0x49c557: pop r12;  pop r13;  ret ;  
0x49c556: pop rbp;  pop r12;  pop r13;  ret ;  
0x49c62f: pop rdi;  ret ;  
0x49c62e: pop r15;  ret ;  
0x49c62d: pop rsi;  pop r15;  ret ;  
0x49c62c: pop r14;  pop r15;  ret ;  
0x49c62b: pop rbp;  pop r14;  pop r15;  ret ;  
0x49c73b: add esp, 0x18;  ret ;  
0x49c73a: add rsp, 0x18;  ret ;  
0x49c739: push 0x48;  add esp, 0x18;  ret ;  
0x49c784: add esp, 0x18;  ret ;  
0x49c783: add rsp, 0x18;  ret ;  
0x49c782: mov al, 0x48;  add esp, 0x18;  ret ;  
0x49c7ec: add esp, 0x18;  ret ;  
0x49c7eb: add rsp, 0x18;  ret ;  
0x49c84a: add esp, 8;  ret ;  
0x49c849: add rsp, 8;  ret ;  
0x49c856: add byte ptr [rax], al;  ret ;  
0x49c8ae: add esp, 8;  ret ;  
0x49c8ad: add rsp, 8;  ret ;  
0x49c8be: add esp, 8;  ret ;  
0x49c8bd: add rsp, 8;  ret ;  
0x49c8d6: add byte ptr [rax], al;  ret ;  
0x49c8f3: add byte ptr [rax], al;  ret ;  
0x49c906: add byte ptr [rax], al;  ret ;  
0x49c916: add byte ptr [rax], al;  ret ;  
0x49c926: add byte ptr [rax], al;  ret ;  
0x49c94c: add esp, 0x28;  ret ;  
0x49c94b: add rsp, 0x28;  ret ;  
0x49c966: add byte ptr [rax], al;  ret ;  
0x49c964: mov al, 0;  add byte ptr [rax], al;  ret ;  
0x49c976: add byte ptr [rax], al;  ret ;  
0x49c974: test al, 0;  add byte ptr [rax], al;  ret ;  
0x49ca7e: pop rbp;  ret ;  
0x49ca7d: pop rbx;  pop rbp;  ret ;  
0x49ca7b: mov eax, ebp;  pop rbx;  pop rbp;  ret ;  
0x49ca7a: mov rax, rbp;  pop rbx;  pop rbp;  ret ;  
0x49ca8a: pop rbp;  ret ;  
0x49ca89: pop rbx;  pop rbp;  ret ;  
0x49ca87: xor eax, eax;  pop rbx;  pop rbp;  ret ;  
0x49ca8f: add byte ptr [rax], al;  ret ;  
0x49ca8e: add byte ptr [rax], r8b;  ret ;  
0x49ca8c: nop dword ptr [rax + rax];  ret ;  
0x49cb52: leave ;  ret ;  
0x49cb51: clc ;  leave ;  ret ;  
0x49cb50: jge 0x49cb4a;  leave ;  ret ;  
0x49cb4f: mov edi, dword ptr [rbp - 8];  leave ;  ret ;  
0x49cb4e: mov r15, qword ptr [rbp - 8];  leave ;  ret ;  
0x49cbf0: int3 ;  ret ;  
0x49cbef: mov esp, ecx;  ret ;  
0x49cbee: mov rsp, rcx;  ret ;  
0x49cbed: add byte ptr [rax - 0x77], cl;  int3 ;  ret ;  
0x49cbec: insd dword ptr [rdi], dx;  add byte ptr [rax - 0x77], cl;  int3 ;  ret ;  
0x49cc7e: leave ;  ret ;  
0x49cc7d: clc ;  leave ;  ret ;  
0x49cc7c: jge 0x49cc76;  leave ;  ret ;  
0x49cc7b: mov edi, dword ptr [rbp - 8];  leave ;  ret ;  
0x49cc7a: mov r15, qword ptr [rbp - 8];  leave ;  ret ;  
0x49ccd0: int3 ;  ret ;  
0x49cccf: mov esp, ecx;  ret ;  
0x49ccce: mov rsp, rcx;  ret ;  
0x49cccd: add byte ptr [rax - 0x77], cl;  int3 ;  ret ;  
0x49cccc: insd dword ptr [rdi], dx;  add byte ptr [rax - 0x77], cl;  int3 ;  ret ;  
0x49cd99: int3 ;  ret ;  
0x49cd98: mov esp, ecx;  ret ;  
0x49cd97: mov rsp, rcx;  ret ;  
0x49cd96: add byte ptr [rax - 0x77], cl;  int3 ;  ret ;  
0x49cd95: insd dword ptr [rdi], dx;  add byte ptr [rax - 0x77], cl;  int3 ;  ret ;  
0x49ce22: leave ;  ret ;  
0x49ce21: clc ;  leave ;  ret ;  
0x49ce20: jge 0x49ce1a;  leave ;  ret ;  
0x49ce1f: mov edi, dword ptr [rbp - 8];  leave ;  ret ;  
0x49ce1e: mov r15, qword ptr [rbp - 8];  leave ;  ret ;  
0x49ce79: int3 ;  ret ;  
0x49ce78: mov esp, ecx;  ret ;  
0x49ce77: mov rsp, rcx;  ret ;  
0x49ce76: add byte ptr [rax - 0x77], cl;  int3 ;  ret ;  
0x49ce75: insd dword ptr [rdi], dx;  add byte ptr [rax - 0x77], cl;  int3 ;  ret ;  
0x49ce99: ret ;  
0x49ce98: add bl, dh;  ret ;  
0x49ce97: add byte ptr [rax], al;  ret ;  
0x49ce96: add byte ptr [rax], r8b;  ret ;  
0x49cf29: pop rbp;  ret ;  
0x49cf28: pop rdi;  pop rbp;  ret ;  
0x49cf27: pop r15;  pop rbp;  ret ;  
0x49cf26: pop rsi;  pop r15;  pop rbp;  ret ;  
0x49cf25: pop r14;  pop r15;  pop rbp;  ret ;  
0x49cf58: cmova eax, edx;  ret ;  
0x49cf90: add byte ptr [rax + 0x63], cl;  ret ;  
0x49d01e: pop rdi;  ret ;  
0x49d01d: pop r15;  ret ;  
0x49d01c: pop rsi;  pop r15;  ret ;  
0x49d01b: pop r14;  pop r15;  ret ;  
0x49d01a: pop rbp;  pop r14;  pop r15;  ret ;  
0x49d08a: add dword ptr [rax + 0x63], ecx;  ret ;  
0x49d0d1: pop rdi;  ret ;  
0x49d0d0: pop r15;  ret ;  
0x49d0cf: pop rsi;  pop r15;  ret ;  
0x49d0ce: pop r14;  pop r15;  ret ;  
0x49d0cd: pop rbp;  pop r14;  pop r15;  ret ;  
0x49d108: add esp, 8;  ret ;  
0x49d107: add rsp, 8;  ret ;  
0x49d127: add esp, 8;  ret ;  
0x49d126: add rsp, 8;  ret ;  
0x49d137: add esp, 8;  ret ;  
0x49d136: add rsp, 8;  ret ;  
0x49d144: add esp, 8;  ret ;  
0x49d143: add rsp, 8;  ret ;  
0x49d171: add esp, 8;  ret ;  
0x49d170: add rsp, 8;  ret ;  
0x49d19a: add esp, 8;  ret ;  
0x49d199: add rsp, 8;  ret ;  
0x49d1a6: add esp, 8;  ret ;  
0x49d1a5: add rsp, 8;  ret ;  
0x49d1d1: add esp, 8;  ret ;  
0x49d1d0: add rsp, 8;  ret ;  
0x49d1fa: add esp, 8;  ret ;  
0x49d1f9: add rsp, 8;  ret ;  
0x49d206: add esp, 8;  ret ;  
0x49d205: add rsp, 8;  ret ;  
0x49d270: add esp, 8;  ret ;  
0x49d26f: add rsp, 8;  ret ;  
0x49d354: add esp, 8;  ret ;  
0x49d353: add rsp, 8;  ret ;  
0x49d3e5: pop rsi;  ret ;  
0x49d3e4: pop r14;  ret ;  
0x49d3e3: pop rbp;  pop r14;  ret ;  
0x49d3e2: pop r13;  pop r14;  ret ;  
0x49d3e1: pop rsp;  pop r13;  pop r14;  ret ;  
0x49d425: pop rbp;  ret ;  
0x49d424: pop rbx;  pop rbp;  ret ;  
0x49d423: sbb byte ptr [rbx + 0x5d], bl;  ret ;  
0x49d421: add esp, 0x18;  pop rbx;  pop rbp;  ret ;  
0x49d494: mov dword ptr [rax - 0x7d], ecx;  ret ;  
0x49d4d2: pop rbp;  ret ;  
0x49d4d1: pop rbx;  pop rbp;  ret ;  
0x49d4d0: sbb byte ptr [rbx + 0x5d], bl;  ret ;  
0x49d4ce: add esp, 0x18;  pop rbx;  pop rbp;  ret ;  
0x49d67a: pop rdi;  ret ;  
0x49d679: pop r15;  ret ;  
0x49d678: pop rsi;  pop r15;  ret ;  
0x49d677: pop r14;  pop r15;  ret ;  
0x49d676: pop rbp;  pop r14;  pop r15;  ret ;  
0x49d690: pop rdi;  ret ;  
0x49d68f: pop r15;  ret ;  
0x49d68e: pop rsi;  pop r15;  ret ;  
0x49d68d: pop r14;  pop r15;  ret ;  
0x49d68c: pop rbp;  pop r14;  pop r15;  ret ;  
0x49d864: pop rdi;  ret ;  
0x49d863: pop r15;  ret ;  
0x49d862: pop rsi;  pop r15;  ret ;  
0x49d861: pop r14;  pop r15;  ret ;  
0x49d860: pop rbp;  pop r14;  pop r15;  ret ;  
0x49d880: pop rdi;  ret ;  
0x49d87f: pop r15;  ret ;  
0x49d87e: pop rsi;  pop r15;  ret ;  
0x49d87d: pop r14;  pop r15;  ret ;  
0x49d87c: pop rbp;  pop r14;  pop r15;  ret ;  
0x49d967: add cl, ch;  ret ;  
0x49d965: mul dword ptr [rdx];  add cl, ch;  ret ;  
0x49daf1: add byte ptr [rax + 1], cl;  ret ;  
0x49daf0: add byte ptr [r8 + 1], r9b;  ret ;  
0x49dbba: pop rbp;  ret ;  
0x49dbb9: pop r13;  ret ;  
0x49dbb8: pop rsp;  pop r13;  ret ;  
0x49dbb7: pop r12;  pop r13;  ret ;  
0x49dbb6: pop rbp;  pop r12;  pop r13;  ret ;  
0x49dcf3: pop rdi;  ret ;  
0x49dcf2: pop r15;  ret ;  
0x49dcf1: pop rsi;  pop r15;  ret ;  
0x49dcf0: pop r14;  pop r15;  ret ;  
0x49dcef: pop rbp;  pop r14;  pop r15;  ret ;  
0x49dd0d: pop rdi;  ret ;  
0x49dd0c: pop r15;  ret ;  
0x49dd0b: pop rsi;  pop r15;  ret ;  
0x49dd0a: pop r14;  pop r15;  ret ;  
0x49dd09: pop rbp;  pop r14;  pop r15;  ret ;  
0x49dd0f: xor eax, eax;  ret ;  
0x49dd0e: ret ;  xor eax, eax;  ret ;  
0x49dd0d: pop rdi;  ret ;  xor eax, eax;  ret ;  
0x49dd0c: pop r15;  ret ;  xor eax, eax;  ret ;  
0x49de56: pop rdi;  ret ;  
0x49de55: pop r15;  ret ;  
0x49de54: pop rsi;  pop r15;  ret ;  
0x49de53: pop r14;  pop r15;  ret ;  
0x49de52: pop rbp;  pop r14;  pop r15;  ret ;  
0x49defd: pop rdi;  ret ;  
0x49defc: pop r15;  ret ;  
0x49defb: pop rsi;  pop r15;  ret ;  
0x49defa: pop r14;  pop r15;  ret ;  
0x49def9: pop rbp;  pop r14;  pop r15;  ret ;  
0x49dfb4: dec dword ptr [rax - 0x7d];  ret ;  
0x49e170: add byte ptr [rax - 0x7d], cl;  ret ;  
0x49e16e: add byte ptr [rax], al;  add byte ptr [rax - 0x7d], cl;  ret ;  
0x49e2ad: pop rdi;  ret ;  
0x49e2ac: pop r15;  ret ;  
0x49e2ab: pop rsi;  pop r15;  ret ;  
0x49e2aa: pop r14;  pop r15;  ret ;  
0x49e2a9: pop rbp;  pop r14;  pop r15;  ret ;  
0x49e5d8: mov dword ptr [rsi + 0x28], eax;  ret ;  
0x49e5d7: mov qword ptr [rsi + 0x28], rax;  ret ;  
0x49e663: ret ;  
0x49e662: sub bl, dh;  ret ;  
0x49e661: sub bl, r14b;  ret ;  
0x49e660: mov dword ptr [rsi + 0x28], eax;  ret ;  
0x49e65f: mov qword ptr [rsi + 0x28], rax;  ret ;  
0x49e67c: ret ;  
0x49e67a: jne 0x49e681;  ret ;  
0x49e679: sal byte ptr [rbp + 5], 0xf3;  ret ;  
0x49e678: test eax, eax;  jne 0x49e681;  ret ;  
0x49e697: ret ;  
0x49e696: or dh, bl;  ret ;  
0x49e695: jne 0x49e6a1;  ret ;  
0x49e694: sal byte ptr [rbp + 0xa], 0xf3;  ret ;  
0x49e693: test eax, eax;  jne 0x49e6a1;  ret ;  
0x49e730: mov dword ptr [rsi + 0x28], eax;  ret ;  
0x49e72f: mov qword ptr [rsi + 0x28], rax;  ret ;  
0x49e836: pop rsp;  ret ;  
0x49e835: pop r12;  ret ;  
0x49e834: pop rbp;  pop r12;  ret ;  
0x49e833: pop rbx;  pop rbp;  pop r12;  ret ;  
0x49e832: fcomp dword ptr [rbx + 0x5d];  pop r12;  ret ;  
0x49e869: pop rsp;  ret ;  
0x49e868: pop r12;  ret ;  
0x49e867: pop rbp;  pop r12;  ret ;  
0x49e866: pop rbx;  pop rbp;  pop r12;  ret ;  
0x49e865: fcomp dword ptr [rbx + 0x5d];  pop r12;  ret ;  
0x49e8b7: ret ;  
0x49e8b6: or dh, bl;  ret ;  
0x49e8b5: jne 0x49e8c1;  ret ;  
0x49e8b4: sal byte ptr [rbp + 0xa], 0xf3;  ret ;  
0x49e8b3: test eax, eax;  jne 0x49e8c1;  ret ;  
0x49e9b7: pop rsi;  ret ;  
0x49e9b6: pop r14;  ret ;  
0x49e9b5: pop rbp;  pop r14;  ret ;  
0x49e9b4: pop r13;  pop r14;  ret ;  
0x49e9b3: pop rsp;  pop r13;  pop r14;  ret ;  
0x49eb14: add esp, 8;  ret ;  
0x49eb13: add rsp, 8;  ret ;  
0x49ebb0: add esp, 8;  ret ;  
0x49ebaf: add rsp, 8;  ret ;  
0x49ec94: add esp, 8;  ret ;  
0x49ec93: add rsp, 8;  ret ;  
0x49ecab: ret ;  
0x49eca9: je 0x49ecb1;  ret ;  
0x49eca8: add byte ptr [rsi + rax - 0xd], dh;  ret ;  
0x49eca7: add byte ptr [rax], al;  je 0x49ecb1;  ret ;  
0x49ecb9: add byte ptr [rax], al;  ret ;  
0x49ecb7: or byte ptr [rax], al;  add byte ptr [rax], al;  ret ;  
0x49ecb6: mov eax, 8;  ret ;  
0x49ed18: fucomip st(0);  ret ;  
0x49ee55: xor byte ptr [rax + 0x39], cl;  ret ;  
0x49ee6d: pop rdi;  ret ;  
0x49ee6c: pop r15;  ret ;  
0x49ee6b: pop rsi;  pop r15;  ret ;  
0x49ee6a: pop r14;  pop r15;  ret ;  
0x49ee69: pop rbp;  pop r14;  pop r15;  ret ;  
0x49ee75: and byte ptr [rax + 0x39], cl;  ret ;  
0x49eff3: pop rsi;  ret ;  
0x49eff2: pop r14;  ret ;  
0x49eff1: pop rbp;  pop r14;  ret ;  
0x49eff0: pop r13;  pop r14;  ret ;  
0x49efef: pop rsp;  pop r13;  pop r14;  ret ;  
0x400938: pop rbx;  ret ;  
0x400936: jne 0x400921;  pop rbx;  ret ;  
0x400935: fbstp tbyte ptr [rbp - 0x17];  pop rbx;  ret ;  
0x400934: mov edi, ebx;  jne 0x400921;  pop rbx;  ret ;  
0x400988: pop rbp;  ret ;  
0x400987: pop rbx;  pop rbp;  ret ;  
0x400986: or byte ptr [rbx + 0x5d], bl;  ret ;  
0x400984: add esp, 8;  pop rbx;  pop rbp;  ret ;  
0x400aa8: pop rbx;  ret ;  
0x400aa7: loope 0x400b04;  ret ;  
0x400aa6: jne 0x400a89;  pop rbx;  ret ;  
0x400aa5: add byte ptr [rbp - 0x1f], dh;  pop rbx;  ret ;  
0x400aa4: and al, byte ptr [rax];  jne 0x400a89;  pop rbx;  ret ;  
0x400b1d: sbb byte ptr [rax - 0x7d], cl;  ret ;  
0x400b1c: sbb byte ptr [r8 - 0x7d], r9b;  ret ;  
0x400eb3: pop rdi;  ret ;  
0x400eb2: pop r15;  ret ;  
0x400eb1: pop rsi;  pop r15;  ret ;  
0x400eb0: pop r14;  pop r15;  ret ;  
0x400eaf: pop rbp;  pop r14;  pop r15;  ret ;  
0x40192f: test byte ptr [rdi], 0x84;  ret ;  
0x401cde: pop rdi;  ret ;  
0x401cdd: pop r15;  ret ;  
0x401cdc: pop rsi;  pop r15;  ret ;  
0x401cdb: pop r14;  pop r15;  ret ;  
0x401cda: pop rbp;  pop r14;  pop r15;  ret ;  
0x401d01: ret ;  
0x401d00: add bl, dh;  ret ;  
0x401cff: add byte ptr [rax], al;  ret ;  
0x401cfe: add byte ptr [rax], r8b;  ret ;  
0x401d41: ret ;  
0x401d40: add bl, dh;  ret ;  
0x401d3e: nop dword ptr [rax];  ret ;  
0x401d92: add esp, 8;  ret ;  
0x401d91: add rsp, 8;  ret ;  
0x4024f0: add byte ptr [rax - 0x7d], cl;  ret ;  
0x4024ee: add byte ptr [rax], al;  add byte ptr [rax - 0x7d], cl;  ret ;  
0x4025a9: pop rbp;  ret ;  
0x4025a8: pop r13;  ret ;  
0x4025a7: pop rsp;  pop r13;  ret ;  
0x4025a6: pop r12;  pop r13;  ret ;  
0x4025a5: pop rbp;  pop r12;  pop r13;  ret ;  
0x402697: add esp, 8;  ret ;  
0x402696: add rsp, 8;  ret ;  
0x4026fb: ret ;  
0x4026fa: push rbx;  ret ;  
0x4026f9: idiv edi;  ret ;  
0x4026f8: xlatb ;  idiv edi;  ret ;  
0x4026f7: xlatb ;  idiv edi;  ret ;  
0x40273f: pop rbx;  ret ;  
0x40273d: add byte ptr [rax], al;  pop rbx;  ret ;  
0x40273b: add byte ptr [rax], al;  add byte ptr [rax], al;  pop rbx;  ret ;  
0x402af6: pop rdi;  ret ;  
0x402af5: pop r15;  ret ;  
0x402af4: pop rsi;  pop r15;  ret ;  
0x402af3: pop r14;  pop r15;  ret ;  
0x402af2: pop rbp;  pop r14;  pop r15;  ret ;  
0x402b10: pop rdi;  ret ;  
0x402b0f: pop r15;  ret ;  
0x402b0e: pop rsi;  pop r15;  ret ;  
0x402b0d: pop r14;  pop r15;  ret ;  
0x402b0c: pop rbp;  pop r14;  pop r15;  ret ;  
0x400953: ret ;  
0x400952: add bl, dh;  ret ;  
0x400951: add byte ptr [rax], al;  ret ;  
0x400950: add byte ptr [rax], al;  add bl, dh;  ret ;  
0x40094f: add byte ptr [rax], 0;  add bl, dh;  ret ;  
0x400896: add esp, 8;  ret ;  
0x400895: add rsp, 8;  ret ;  
125
